<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杰森的博客</title>
  
  <subtitle>全栈杰森</subtitle>
  <link href="https://pdpeng.github.io/atom.xml" rel="self"/>
  
  <link href="https://pdpeng.github.io/"/>
  <updated>2022-02-23T11:46:06.116Z</updated>
  <id>https://pdpeng.github.io/</id>
  
  <author>
    <name>Jason</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>又拍云 CDN</title>
    <link href="https://pdpeng.github.io/2022/02/17/upyun-cdn-config/"/>
    <id>https://pdpeng.github.io/2022/02/17/upyun-cdn-config/</id>
    <published>2022-02-17T04:11:47.000Z</published>
    <updated>2022-02-23T11:46:06.116Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本篇主要叙述如何为站点配置 cdn 加速服务，供应商是<strong>又拍云</strong></p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>当我配置完成后，我发现：为什么站点的打开速度还不如从前呢？不是 cdn 加速吗？这怎么还降速呢？</p><p><img src="https://img-blog.csdnimg.cn/78a4af16744749758ed25d10a206fcfb.png"></p><p>于是我便开始了复盘，最后的结果是：<strong>CNAME 解析错误</strong>，就是跟没没有解析到供应商。我天呐，原来我开了近一个月的服务，都是未开启的状态啊，瞬间崩溃，下面我们就来看看如何正确<strong>开启 cdn 全站加速</strong>服务</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p>为了让大家了解的更清楚呢，这里搬运一波词条的解释，然后通俗讲解</p><h2 id="DNS-解析"><a href="#DNS-解析" class="headerlink" title="DNS 解析"></a>DNS 解析</h2><blockquote><p>域名解析（Domain Name System）是把域名指向网站空间 IP，让人们通过注册的域名可以方便地访问到网站的一种服务。IP 地址是网络上标识站点的数字地址，为了方便记忆，采用域名来代替 IP 地址标识站点地址。域名解析就是域名到 IP 地址的转换过程。域名的解析工作由 DNS 服务器完成。<br>域名解析也叫域名指向、服务器设置、域名配置以及反向 IP 登记等等。说得简单点就是将好记的域名解析成 IP，服务由 DNS 服务器完成，是把域名解析到一个 IP 地址，然后在此 IP 地址的主机上将一个子目录与域名绑定。</p></blockquote><p>通俗来讲就是用一串你自己可以定义的<strong>域名</strong>，来解析到复杂、不便记忆的<strong>IP 地址</strong>上。互联网中的地址是数字的 IP 地址，域名解析的作用主要就是为了便于记忆。</p><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><blockquote><p>CDN（Content Delivery Network），即内容分发网络。CDN 是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。</p></blockquote><p>简言之，用户访问服务器资源时，不同地区的用户根据距离服务器的远近有着不同的响应速度，你可以理解成双十一秒杀购物，如果你就在服务器旁边，理论上你秒杀到对应商品的概率是远大于其他用户的</p><p><img src="https://img-blog.csdnimg.cn/9a88c99241414787b77c01e725d2f58e.png"></p><p>cdn 的供应商有很多台分布在不同地区的服务器，当你需要访问的资源加入 cdn 后，cdn 服务器会定期从你的服务器拷贝资源。这样当用户访问你服务器上的资源时，cdn 会自动让用户访问到距离他们最近的一台 cdn 服务器上的资源</p><p>根据距离的远近，将用户的请求分配到不同的服务器上，从而实现加速的作用，也就是 <strong>内容分发网络</strong></p><h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><blockquote><p>HTTPS （Hyper Text Transfer Protocol over SecureSocket Layer），是以安全为目标的 HTTP 通道，在 HTTP 的基础上通过传输加密和身份认证保证了传输过程的安全性。HTTPS 在 HTTP 的基础下加入 SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。 HTTPS 存在不同于 HTTP 的默认端口及一个加密&#x2F;身份验证层（在 HTTP 与 TCP 之间）。这个系统提供了身份验证与加密通讯方法。它被广泛用于万维网上安全敏感的通讯，例如交易支付等方面。</p></blockquote><p>看图，相信你一定遇到过这样的网站</p><p><img src="https://img-blog.csdnimg.cn/831fcf4f66c44969afa501871e1885b4.png"></p><p>出现这样的情况，表示这个网站使用了 HTTP 协议传输数据，提醒用户谨慎访问网站。 HTTP 协议是明文传输协议，无法加密传输数据或校验数据完整性，也无法进行身份验证，这时候就有必要了解下 <strong>SSL</strong> 证书</p><h2 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h2><blockquote><p>SSL(Secure Sockets Layer 安全套接字协议),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS 与 SSL 在传输层与应用层之间对网络连接进行加密。</p></blockquote><p>个人使用的话，没有更高的要求，我们到供应商处申购免费的证书就好，下文配置会详细讲到</p><h1 id="配置-CDN-服务"><a href="#配置-CDN-服务" class="headerlink" title="配置 CDN 服务"></a>配置 CDN 服务</h1><h2 id="绑定-upyun"><a href="#绑定-upyun" class="headerlink" title="绑定 upyun"></a>绑定 upyun</h2><p>这里提醒大家，使用一个新的产品时一定要仔细阅读官方文档，不然怎么会有：没有好文档的产品不是合格产品的说法呢？有关于 upyun 资源的绑定和注册，请直接访问<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLnVweXVuLmNvbS9rbm93bGVkZ2UtYmFzZS9jZG4tcXVpY2stc3RhcnQv">官方文档<i class="fa fa-external-link-alt"></i></span></p><h2 id="添加解析记录"><a href="#添加解析记录" class="headerlink" title="添加解析记录"></a>添加解析记录</h2><p>这里我主要想强调的一点就是 dns 记录的添加，大家在<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLnVweXVuLmNvbS9rbm93bGVkZ2UtYmFzZS9jZG4tcXVpY2stc3RhcnQvIzFlODhlYjdlNThmOTYtY25hbWUtZTU5ZjlmZTU5MDhk">这里<i class="fa fa-external-link-alt"></i></span>获取到对应的 <strong>CNAME 域名</strong> 后，到域名的供应商出添加解析记录，这里我以万网接入为例</p><p>在 <strong>云解析 DNS 控制台</strong> 找到 <strong>添加记录</strong></p><p><img src="https://img-blog.csdnimg.cn/a85a01c2e7cd4b878842f3837990d1c4.png"></p><p><strong>主机记录</strong> 位置处要特别注意，有以下两种情况</p><ul><li>顶级域名：主机记录为 <strong>@</strong></li><li>子域名：主机记录为 <strong>二级域</strong>，例如：<code>synopsis.coder-jason.cn</code> 这个二级域名，主机记录处填写 <code>synopsis</code></li></ul><p>其余项按照下图配置就好</p><p><img src="https://img-blog.csdnimg.cn/f50a3d70bcec4c47b03fd352e752f63b.png"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>我们在本地打开命令行工具，输入 <code>ping</code> 指令到自己的域名，查看 dns 配置是否生效，得到图示响应即配置成功，也可以通过<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLnVweXVuLmNvbS9rbm93bGVkZ2UtYmFzZS9jZG4tcXVpY2stc3RhcnQvI2U5ODU4ZGU3YmRhZWU2YjU4YmU4YWY5NQ==">官方方法<i class="fa fa-external-link-alt"></i></span>测试配置</p><p><img src="https://img-blog.csdnimg.cn/a0bf25a1f9f241fdbfcd88040cfcd7ee.png"></p><h1 id="安全性提升"><a href="#安全性提升" class="headerlink" title="安全性提升"></a>安全性提升</h1><h2 id="SSL-证书部署"><a href="#SSL-证书部署" class="headerlink" title="SSL 证书部署"></a>SSL 证书部署</h2><p>大家在域名的提供商处可以找到 <strong>数字证书管理服务控制台</strong> ，填写信息后提交申请即可</p><p><img src="https://img-blog.csdnimg.cn/489ecf1ec61844f9ac36a7920e3edadf.png"></p><p>待审核通过后，我们下载部署就好，这里以 <strong>Nginx</strong> 部署为例。服务器安装 <strong>宝塔面板</strong> 后（详细步骤请参考文），点击 <strong>ssl 证书</strong>，在对应窗口粘贴我们下载好的证书就可以了，注意区分文件后缀，不要粘贴错误</p><p><img src="https://img-blog.csdnimg.cn/45aa6104f3304ca4a5ca861c08d93f61.png"></p><p>因为使用了又拍云的 cdn 服务，所以也需在图示位置添加证书</p><p><img src="https://img-blog.csdnimg.cn/87e6e7e029e84d3f8a5e4cdeb8af80a9.png"></p><p>至此，网站就实现加密访问啦，您可以通过<span class="exturl" data-url="aHR0cHM6Ly9teXNzbC5jb20vc3NsLmh0bWw=">ssl 状态检测工具<i class="fa fa-external-link-alt"></i></span>查看配置状态</p><h2 id="IP-访问限制"><a href="#IP-访问限制" class="headerlink" title="IP 访问限制"></a>IP 访问限制</h2><p>upyun <strong>cdn 管理控制台</strong> 下拉找到 <strong>Ip 访问限制</strong></p><p><img src="https://img-blog.csdnimg.cn/f5cb1bb9156047c9ac5d99ea3a1894f5.png"></p><p>点击管理添加限制规则</p><p><img src="https://img-blog.csdnimg.cn/fccefbdfc3e1433fb13bd224a8f99bb0.png"></p><p>点击保存</p><p><img src="https://img-blog.csdnimg.cn/1aafa1d7407142e48349cb2a6ec3ccb0.png"></p><h2 id="CC-防护"><a href="#CC-防护" class="headerlink" title="CC 防护"></a>CC 防护</h2><p>在 upyun <strong>cdn 管理控制台</strong> 访问控制中找到<strong>CC 防护</strong>，添加防护规则</p><p><img src="https://img-blog.csdnimg.cn/bb58f6a635374f8b96a4edcd63d1cb48.png"></p><p>点击保存</p><p><img src="https://img-blog.csdnimg.cn/74bdc6e161a146a29a8ac129a3cac1d0.png"></p><h1 id="又拍云联盟"><a href="#又拍云联盟" class="headerlink" title="又拍云联盟"></a>又拍云联盟</h1><p>如果不介意站点下方添加服务商 logo ，可以加入<span class="exturl" data-url="aHR0cHM6Ly93d3cudXB5dW4uY29tL2xlYWd1ZQ==">又拍云联盟<i class="fa fa-external-link-alt"></i></span>免费获取每月 10GB 存储空间 + 15GB 流量</p><p><img src="https://img-blog.csdnimg.cn/3e65f5e958d347fc99c054970c7adddc.png"></p><p><span class="exturl" data-url="aHR0cHM6Ly9jb2Rlci1qYXNvbi5jbi8=">点击这里<i class="fa fa-external-link-alt"></i></span>预览添加效果</p><p><img src="https://img-blog.csdnimg.cn/e4884368d6af4f3cb667594b7018d9ea.png"></p><hr><p>配置教程</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9kcC1qc29uLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzEyMDgxMTY4Mw==">服务器安装宝塔面板<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">基于 upyun cdn 供应商为站点配置 cdn 加速服务及安全性提升</summary>
    
    
    
    <category term="网站建设" scheme="https://pdpeng.github.io/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="Hexo" scheme="https://pdpeng.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>超震撼！裸眼3D看冬奥</title>
    <link href="https://pdpeng.github.io/2022/02/10/3D-Olympics/"/>
    <id>https://pdpeng.github.io/2022/02/10/3D-Olympics/</id>
    <published>2022-02-10T09:04:32.000Z</published>
    <updated>2022-02-10T09:16:22.899Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，我是杰森。北京 2022 冬奥会备受瞩目，吉祥物冰墩墩更是圈粉无数。</p><p>不知道你有没有抢到一只呢？</p><p><img src="https://cdn.jsdelivr.net/gh/PDPENG/jason-storage/blog-img/bingdwendwen.png"></p><p>本文使用 <code>Three.js + React</code> 技术栈，实现冬日和奥运元素，制作了一个充满趣味和纪念意义的冬奥主题 <code>3D</code> 页面。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>实现效果如以下 <code>👇</code> 动图所示，页面主要由 <code>2022</code> 冬奥会吉祥物 <code>冰墩墩</code> 、奥运五环、舞动的旗帜 <code>🚩</code>、树木 <code>🌲</code> 以及下雪效果 <code>❄️</code> 等组成。按住鼠标左键移动可以改为相机位置，获得不同视图。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcb9253a007d4a4a9b749569428036f1~tplv-k3u1fbpfcp-watermark.awebp"></p><blockquote><p><code>👀</code> 在线预览：<span class="exturl" data-url="aHR0cHM6Ly9kcmFnb25pci5naXRodWIuaW8vM2QvIy9vbHltcGljJUVGJUJDJTg4JUU5JTgzJUE4JUU3JUJEJUIyJUU1JTlDJUE4">https://dragonir.github.io/3d/#/olympic（部署在<i class="fa fa-external-link-alt"></i></span> <code>GitHub</code>，加载速度可能会有点慢 <code>😓</code>）</p></blockquote><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>本文涉及到的知识点主要包括：<code>TorusGeometry</code> 圆环面、<code>MeshLambertMaterial</code> 非光泽表面材质、<code>MeshDepthMaterial</code> 深度网格材质、<code>custromMaterial</code> 自定义材质、<code>Points</code> 粒子、<code>PointsMaterial</code> 点材质等。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="引入资源"><a href="#引入资源" class="headerlink" title="引入资源"></a>引入资源</h3><p>首先引入开发页面所需要的库和外部资源，<code>OrbitControls</code> 用于镜头轨道控制、<code>TWEEN</code> 用于补间动画实现、<code>GLTFLoader</code> 用于加载 <code>glb</code> 或 <code>gltf</code> 格式的 <code>3D</code> 模型、以及一些其他模型、贴图等资源。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">TWEEN</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/libs/tween.module.min.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">GLTFLoader</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/loaders/GLTFLoader&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> bingdundunModel <span class="keyword">from</span> <span class="string">&#x27;./models/bingdundun.glb&#x27;</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><h3 id="页面-DOM-结构"><a href="#页面-DOM-结构" class="headerlink" title="页面 DOM 结构"></a>页面 DOM 结构</h3><p>页面 <code>DOM</code> 结构非常简单，只有渲染 <code>3D</code> 元素的 <code>#container</code> 容器和显示加载进度的 <code>.olympic_loading</code>元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &#123;<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">loadingProcess</span> === <span class="number">100</span> ? <span class="string">&#x27;&#x27;</span> : (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;olympic_loading&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;box&quot;</span>&gt;</span>&#123;this.state.loadingProcess&#125; %<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="场景初始化"><a href="#场景初始化" class="headerlink" title="场景初始化"></a>场景初始化</h3><p>初始化渲染容器、场景、相机。关于这部分内容的详细知识点，可以查阅我往期的文章，本文中不再赘述。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;container&#x27;</span>);</span><br><span class="line">renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123; <span class="attr">antialias</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>);</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">renderer.<span class="property">shadowMap</span>.<span class="property">enabled</span> = <span class="literal">true</span>;</span><br><span class="line">container.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line">scene.<span class="property">background</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(skyTexture);</span><br><span class="line">camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">60</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">0.1</span>, <span class="number">1000</span>);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">30</span>, <span class="number">100</span>);</span><br><span class="line">camera.<span class="title function_">lookAt</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br></pre></td></tr></table></figure><h3 id="添加光源"><a href="#添加光源" class="headerlink" title="添加光源"></a>添加光源</h3><p>本示例中主要添加了两种光源：<code>DirectionalLight</code> 用于产生阴影，调节页面亮度、<code>AmbientLight</code> 用于渲染环境氛围。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 直射光</span></span><br><span class="line"><span class="keyword">const</span> light = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>(<span class="number">0xffffff</span>, <span class="number">1</span>);</span><br><span class="line">light.<span class="property">intensity</span> = <span class="number">1</span>;</span><br><span class="line">light.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">16</span>, <span class="number">16</span>, <span class="number">8</span>);</span><br><span class="line">light.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">mapSize</span>.<span class="property">width</span> = <span class="number">512</span> * <span class="number">12</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">mapSize</span>.<span class="property">height</span> = <span class="number">512</span> * <span class="number">12</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">top</span> = <span class="number">40</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">bottom</span> = -<span class="number">40</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">left</span> = -<span class="number">40</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">right</span> = <span class="number">40</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(light);</span><br><span class="line"><span class="comment">// 环境光</span></span><br><span class="line"><span class="keyword">const</span> ambientLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>(<span class="number">0xcfffff</span>);</span><br><span class="line">ambientLight.<span class="property">intensity</span> = <span class="number">1</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(ambientLight);</span><br></pre></td></tr></table></figure><h3 id="加载进度管理"><a href="#加载进度管理" class="headerlink" title="加载进度管理"></a>加载进度管理</h3><p>使用 <code>THREE.LoadingManager</code> 管理页面模型加载进度，在它的回调函数中执行一些与加载进度相关的方法。本例中的页面加载进度就是在 <code>onProgress</code> 中完成的，当页面加载进度为 <code>100%</code> 时，执行 <code>TWEEN</code> 镜头补间动画。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> manager = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LoadingManager</span>();</span><br><span class="line">manager.<span class="property">onStart</span> = <span class="function">(<span class="params">url, loaded, total</span>) =&gt;</span> &#123;&#125;;</span><br><span class="line">manager.<span class="property">onLoad</span> = <span class="function">() =&gt;</span> &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Loading complete!&#x27;</span>)&#125;;</span><br><span class="line">manager.<span class="property">onProgress</span> = <span class="function">(<span class="params">url, loaded, total</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">floor</span>(loaded / total * <span class="number">100</span>) === <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">loadingProcess</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(loaded / total * <span class="number">100</span>) &#125;);</span><br><span class="line">    <span class="comment">// 镜头补间动画</span></span><br><span class="line">    <span class="title class_">Animations</span>.<span class="title function_">animateCamera</span>(camera, controls, &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: -<span class="number">1</span>, <span class="attr">z</span>: <span class="number">20</span> &#125;, &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">0</span> &#125;, <span class="number">3600</span>, <span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">loadingProcess</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(loaded / total * <span class="number">100</span>) &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="创建地面"><a href="#创建地面" class="headerlink" title="创建地面"></a>创建地面</h3><p>本示例中凹凸起伏的地面是使用 <code>Blender</code> 构建模型，然后导出 <code>glb</code> 格式加载创建的。当然也可以只使用 <code>Three.js</code> 自带平面网格加凹凸贴图也可以实现类似的效果。使用 <code>Blender</code> 自建模型的优点在于可以自由可视化地调整地面的起伏效果。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> loader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">GLTFLoader</span>(manager);</span><br><span class="line">loader.<span class="title function_">load</span>(landModel, <span class="keyword">function</span> (<span class="params">mesh</span>) &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="keyword">function</span> (<span class="params">child</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.1</span>;</span><br><span class="line">      child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">.8</span>;</span><br><span class="line">      <span class="comment">// 地面</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;Mesh_2&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.5</span>;</span><br><span class="line">        child.<span class="property">receiveShadow</span> = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">rotation</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">4</span>;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">15</span>, -<span class="number">20</span>, <span class="number">0</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">.9</span>, <span class="number">.9</span>, <span class="number">.9</span>);</span><br><span class="line">  land = mesh.<span class="property">scene</span>;</span><br><span class="line">  scene.<span class="title function_">add</span>(land);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79b71ebf1cfc4e95a8fb3f64461108c8~tplv-k3u1fbpfcp-watermark.awebp"></p><h3 id="创建冬奥吉祥物冰墩墩"><a href="#创建冬奥吉祥物冰墩墩" class="headerlink" title="创建冬奥吉祥物冰墩墩"></a>创建冬奥吉祥物冰墩墩</h3><p>现在添加可爱的冬奥会吉祥物熊猫冰墩墩 <code>🐼</code>，冰墩墩同样是使用 <code>glb</code> 格式模型加载的。它的原始模型来源于这里，从这个网站免费现在模型后，原模型是使用 <code>3D max</code> 建的我发现并不能直接用在网页中，需要在 <code>Blender</code> 中转换模型格式，还需要调整调整模型的贴图法线，才能还原渲染图效果。</p><p><strong>原模型</strong>：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40de3d65b202431bac1f0673f9f3882e~tplv-k3u1fbpfcp-watermark.awebp"></p><p><strong>冰墩墩贴图</strong>:</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/78bba0afd14345bfbfdbb5ffa44aecb3~tplv-k3u1fbpfcp-watermark.awebp"></p><p><strong>转换成 Blender 支持的模型，并在 Blender 中调整模型贴图法线、并添加贴图</strong>:</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8881a2307d2a40e1abef87201a26ec9d~tplv-k3u1fbpfcp-watermark.awebp"></p><p><strong>导出 glb 格式</strong>:</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/55b45df468634f3c9670c4b4d03fe6c9~tplv-k3u1fbpfcp-watermark.awebp"></p><blockquote><p><code>📖</code> 在 <code>Blender</code> 中给模型添加贴图教程传送门：在 Blender 中怎么给模型贴图</p></blockquote><p>仔细观察<code>冰墩墩 🐼</code>可以发现，它的外面有一层<strong>透明塑料或玻璃质感外壳</strong>，这个效果可以通过修改模型的透明度、金属度、粗糙度等材质参数实现，最后就可以渲染出如 <code>👆 banner图</code> 所示的那种效果，具体如以下代码所示。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">loader.<span class="title function_">load</span>(bingdundunModel, <span class="function"><span class="params">mesh</span> =&gt;</span> &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="function"><span class="params">child</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      <span class="comment">// 内部</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;oldtiger001&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.5</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">.8</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 半透明外壳</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;oldtiger002&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">transparent</span> = <span class="literal">true</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">opacity</span> = <span class="number">.5</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.2</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">0</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">refractionRatio</span> = <span class="number">1</span></span><br><span class="line">        child.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">rotation</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">24</span>;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(-<span class="number">8</span>, -<span class="number">12</span>, <span class="number">0</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="创建奥运五环"><a href="#创建奥运五环" class="headerlink" title="创建奥运五环"></a>创建奥运五环</h3><p>奥运五环由基础几何模型圆环面 <code>TorusGeometry</code> 来实现，创建五个圆环面，并调整它们的材质颜色和位置来构成<strong>蓝黑红黄绿</strong>顺序的五环结构。五环材质使用的是 <code>MeshLambertMaterial</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fiveCycles = [</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_0&#x27;</span>, <span class="attr">color</span>: <span class="number">0x0885c2</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: -<span class="number">250</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">0</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_1&#x27;</span>, <span class="attr">color</span>: <span class="number">0x000000</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: -<span class="number">10</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">5</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_2&#x27;</span>, <span class="attr">color</span>: <span class="number">0xed334e</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: <span class="number">230</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">0</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_3&#x27;</span>, <span class="attr">color</span>: <span class="number">0xfbb132</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: -<span class="number">125</span>, <span class="attr">y</span>: -<span class="number">100</span>, <span class="attr">z</span>: -<span class="number">5</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_4&#x27;</span>, <span class="attr">color</span>: <span class="number">0x1c8b3c</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: <span class="number">115</span>, <span class="attr">y</span>: -<span class="number">100</span>, <span class="attr">z</span>: <span class="number">10</span> &#125;&#125;</span><br><span class="line">];</span><br><span class="line">fiveCycles.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> cycleMesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TorusGeometry</span>(<span class="number">100</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">50</span>), <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshLambertMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">color</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(item.<span class="property">color</span>),</span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span></span><br><span class="line">  &#125;));</span><br><span class="line">  cycleMesh.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">  cycleMesh.<span class="property">position</span>.<span class="title function_">set</span>(item.<span class="property">position</span>.<span class="property">x</span>, item.<span class="property">position</span>.<span class="property">y</span>, item.<span class="property">position</span>.<span class="property">z</span>);</span><br><span class="line">  meshes.<span class="title function_">push</span>(cycleMesh);</span><br><span class="line">  fiveCyclesGroup.<span class="title function_">add</span>(cycleMesh);</span><br><span class="line">&#125;);</span><br><span class="line">fiveCyclesGroup.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">.036</span>, <span class="number">.036</span>, <span class="number">.036</span>);</span><br><span class="line">fiveCyclesGroup.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">10</span>, -<span class="number">8</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(fiveCyclesGroup);</span><br></pre></td></tr></table></figure><h4 id="💡-TorusGeometry-圆环面"><a href="#💡-TorusGeometry-圆环面" class="headerlink" title="💡 TorusGeometry 圆环面"></a><code>💡</code> TorusGeometry 圆环面</h4><p><code>TorusGeometry</code> 一个用于生成圆环几何体的类。</p><p><strong>构造函数</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">TorusGeometry</span>(<span class="attr">radius</span>: <span class="title class_">Float</span>, <span class="attr">tube</span>: <span class="title class_">Float</span>, <span class="attr">radialSegments</span>: <span class="title class_">Integer</span>, <span class="attr">tubularSegments</span>: <span class="title class_">Integer</span>, <span class="attr">arc</span>: <span class="title class_">Float</span>)</span><br></pre></td></tr></table></figure><ul><li><code>radius</code>：圆环的半径，从圆环的中心到管道（横截面）的中心。默认值是 <code>1</code>。</li><li><code>tube</code>：管道的半径，默认值为 <code>0.4</code>。</li><li><code>radialSegments</code>：圆环的分段数，默认值为 <code>8</code>。</li><li><code>tubularSegments</code>：管道的分段数，默认值为 <code>6</code>。</li><li><code>arc</code>：圆环的圆心角（单位是弧度），默认值为 <code>Math.PI * 2</code>。</li></ul><h4 id="💡-MeshLambertMaterial-非光泽表面材质"><a href="#💡-MeshLambertMaterial-非光泽表面材质" class="headerlink" title="💡 MeshLambertMaterial 非光泽表面材质"></a><code>💡</code> MeshLambertMaterial 非光泽表面材质</h4><p>一种非光泽表面的材质，没有镜面高光。该材质使用基于非物理的 <code>Lambertian</code> 模型来计算反射率。这可以很好地模拟一些表面（例如未经处理的木材或石材），但不能模拟具有镜面高光的光泽表面（例如涂漆木材）。</p><p><strong>构造函数</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">MeshLambertMaterial</span>(parameters : <span class="title class_">Object</span>)</span><br></pre></td></tr></table></figure><ul><li><code>parameters</code>：（可选）用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入。</li></ul><h3 id="创建旗帜"><a href="#创建旗帜" class="headerlink" title="创建旗帜"></a>创建旗帜</h3><p>旗面模型是从 sketchfab 下载的，还需要一个旗杆，可以在 <code>Blender</code>中添加了一个柱状立方体，并调整好合适的长宽高和旗面结合起来。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/21d2e80561024cb38a89dc75b3e09d50~tplv-k3u1fbpfcp-watermark.awebp"></p><p><strong>旗面贴图</strong>：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6a1fc0345766451a890ae2d19ef0ad38~tplv-k3u1fbpfcp-watermark.awebp"></p><p>旗面添加了动画，需要在代码中执行动画帧播放。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">loader.<span class="title function_">load</span>(flagModel, <span class="function"><span class="params">mesh</span> =&gt;</span> &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="function"><span class="params">child</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      child.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="comment">// 旗帜</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;mesh_0001&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.1</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">.1</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">map</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(flagTexture);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 旗杆</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;柱体&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.6</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">0</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">refractionRatio</span> = <span class="number">1</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">color</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="number">0xeeeeee</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">rotation</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">24</span>;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">2</span>, -<span class="number">7</span>, -<span class="number">1</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">  <span class="comment">// 动画</span></span><br><span class="line">  <span class="keyword">let</span> meshAnimation = mesh.<span class="property">animations</span>[<span class="number">0</span>];</span><br><span class="line">  mixer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AnimationMixer</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">  <span class="keyword">let</span> animationClip = meshAnimation;</span><br><span class="line">  <span class="keyword">let</span> clipAction = mixer.<span class="title function_">clipAction</span>(animationClip).<span class="title function_">play</span>();</span><br><span class="line">  animationClip = clipAction.<span class="title function_">getClip</span>();</span><br><span class="line">  scene.<span class="title function_">add</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="创建树木"><a href="#创建树木" class="headerlink" title="创建树木"></a>创建树木</h3><p>为了充实画面，营造冬日氛围，于是就添加了几棵松树 <code>🌲</code> 作为装饰。添加松树的时候用到一个技巧非常重要：我们知道因为树的模型非常复杂，有非常多的面数，面数太多会降低页面性能，造成卡顿。本文中使用两个如下图 <code>👇</code> 所示的两个交叉的面来作为树的基座，这样的话树只有两个面数，使用这个技巧可以和大程度上优化页面性能，而且树 <code>🌲</code> 的样子看起来也是有 <code>3D</code> 感的。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc12379da4b04b18a643b44ad7198408~tplv-k3u1fbpfcp-watermark.awebp"></p><p><strong>材质贴图</strong>：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b12aef79902b4607888d3e270bc3ee25~tplv-k3u1fbpfcp-watermark.awebp"></p><p>为了使树<strong>只在贴图透明部分透明、其他地方不透明</strong>，并且可以<strong>产生树状阴影而不是长方体阴影</strong>，需要给树模型添加如下 <code>MeshPhysicalMaterial</code>、<code>MeshDepthMaterial</code> 两种材质，两种材质使用同样的纹理贴图，其中 <code>MeshDepthMaterial</code> 添加到模型的 <code>custromMaterial</code> 属性上。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">let</span> treeMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshPhysicalMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(treeTexture),</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  <span class="attr">metalness</span>: <span class="number">.2</span>,</span><br><span class="line">  <span class="attr">roughness</span>: <span class="number">.8</span>,</span><br><span class="line">  <span class="attr">depthTest</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">skinning</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">fog</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">reflectivity</span>: <span class="number">0.1</span>,</span><br><span class="line">  <span class="attr">refractionRatio</span>: <span class="number">0</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">let</span> treeCustomDepthMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshDepthMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">depthPacking</span>: <span class="variable constant_">THREE</span>.<span class="property">RGBADepthPacking</span>,</span><br><span class="line">  <span class="attr">map</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(treeTexture),</span><br><span class="line">  <span class="attr">alphaTest</span>: <span class="number">0.5</span></span><br><span class="line">&#125;);</span><br><span class="line">loader.<span class="title function_">load</span>(treeModel, <span class="function"><span class="params">mesh</span> =&gt;</span> &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="function"><span class="params">child</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      child.<span class="property">material</span> = treeMaterial;</span><br><span class="line">      child.<span class="property">custromMaterial</span> = treeCustomDepthMaterial;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">14</span>, -<span class="number">9</span>, <span class="number">0</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">  <span class="comment">// 克隆另两棵树</span></span><br><span class="line">  <span class="keyword">let</span> tree2 = mesh.<span class="property">scene</span>.<span class="title function_">clone</span>();</span><br><span class="line">  tree2.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">10</span>, -<span class="number">8</span>, -<span class="number">15</span>);</span><br><span class="line">  tree2.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(tree2)</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>实现效果也可以从 <code>👆</code> 上面 <code>Banner</code> 图中可以看到，为了画面更好看，我取消了树的阴影显示。</p><blockquote><p><code>📌</code> 在 <code>3D</code> 功能开发中，一些不重要的装饰模型都可以采取这种策略来优化。</p></blockquote><h4 id="💡-MeshDepthMaterial-深度网格材质"><a href="#💡-MeshDepthMaterial-深度网格材质" class="headerlink" title="💡 MeshDepthMaterial 深度网格材质"></a><code>💡</code> MeshDepthMaterial 深度网格材质</h4><p>一种按深度绘制几何体的材质。深度基于相机远近平面，白色最近，黑色最远。</p><p><strong>构造函数</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">MeshDepthMaterial</span>(<span class="attr">parameters</span>: <span class="title class_">Object</span>)</span><br></pre></td></tr></table></figure><ul><li><code>parameters</code>：（可选）用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入。</li></ul><p><strong>特殊属性</strong>：</p><ul><li><code>.depthPacking[Constant]</code>：<code>depth packing</code> 的编码。默认为 <code>BasicDepthPacking</code>。</li><li><code>.displacementMap[Texture]</code>：位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象，以及充当真实的几何体。</li><li><code>.displacementScale[Float]</code>：位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为 <code>1</code>。</li><li><code>.displacementBias[Float]</code>：位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为 <code>0</code>。</li></ul><h4 id="💡-custromMaterial-自定义材质"><a href="#💡-custromMaterial-自定义材质" class="headerlink" title="💡 custromMaterial 自定义材质"></a><code>💡</code> custromMaterial 自定义材质</h4><p>给网格添加 <code>custromMaterial</code> 自定义材质属性，可以实现透明外围 <code>png</code> 图片贴图的内容区域阴影。</p><h3 id="创建雪花"><a href="#创建雪花" class="headerlink" title="创建雪花"></a>创建雪花</h3><p>创建雪花 <code>❄️</code>，就要用到<strong>粒子知识</strong>。<code>THREE.Points</code> 是用来创建点的类，也用来批量管理粒子。本例中创建了 <code>1500</code> 个雪花粒子，并为它们设置了限定三维空间的随机坐标及横向和竖向的随机移动速度。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 雪花贴图</span></span><br><span class="line"><span class="keyword">let</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(snowTexture);</span><br><span class="line"><span class="keyword">let</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Geometry</span>();</span><br><span class="line"><span class="keyword">let</span> range = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">let</span> pointsMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">size</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">opacity</span>: <span class="number">0.8</span>,</span><br><span class="line">  <span class="attr">map</span>: texture,</span><br><span class="line">  <span class="comment">// 背景融合</span></span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">  <span class="comment">// 景深衰弱</span></span><br><span class="line">  <span class="attr">sizeAttenuation</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">depthTest</span>: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">1500</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> vertice = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * range - range / <span class="number">2</span>, <span class="title class_">Math</span>.<span class="title function_">random</span>() * range * <span class="number">1.5</span>, <span class="title class_">Math</span>.<span class="title function_">random</span>() * range - range / <span class="number">2</span>);</span><br><span class="line">  <span class="comment">// 纵向移速</span></span><br><span class="line">  vertice.<span class="property">velocityY</span> = <span class="number">0.1</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() / <span class="number">3</span>;</span><br><span class="line">  <span class="comment">// 横向移速</span></span><br><span class="line">  vertice.<span class="property">velocityX</span> = (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) / <span class="number">3</span>;</span><br><span class="line">  <span class="comment">// 加入到几何</span></span><br><span class="line">  geometry.<span class="property">vertices</span>.<span class="title function_">push</span>(vertice);</span><br><span class="line">&#125;</span><br><span class="line">geometry.<span class="title function_">center</span>();</span><br><span class="line">points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, pointsMaterial);</span><br><span class="line">points.<span class="property">position</span>.<span class="property">y</span> = -<span class="number">30</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(points);</span><br></pre></td></tr></table></figure><h4 id="💡-Points-粒子"><a href="#💡-Points-粒子" class="headerlink" title="💡 Points 粒子"></a><code>💡</code> Points 粒子</h4><p><code>Three.js</code> 中，雨 <code>🌧️</code>、雪 <code>❄️</code>、云 <code>☁️</code>、星辰 <code>✨</code> 等生活中常见的粒子都可以使用 <code>Points</code> 来模拟实现。</p><p><strong>构造函数</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, material);</span><br></pre></td></tr></table></figure><ul><li>构造函数可以接受两个参数，一个几何体和一个材质，几何体参数用来制定粒子的位置坐标，材质参数用来格式化粒子；</li><li>可以基于简单几何体对象如 <code>BoxGeometry</code>、<code>SphereGeometry</code>等作为粒子系统的参数；</li><li>一般来讲，需要自己指定顶点来确定粒子的位置。</li></ul><h4 id="💡-PointsMaterial-点材质"><a href="#💡-PointsMaterial-点材质" class="headerlink" title="💡 PointsMaterial 点材质"></a><code>💡</code> PointsMaterial 点材质</h4><p>通过 <code>THREE.PointsMaterial</code> 可以设置粒子的属性参数，是 <code>Points</code> 使用的默认材质。</p><p><strong>构造函数</strong>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">PointsMaterial</span>(parameters : <span class="title class_">Object</span>)</span><br></pre></td></tr></table></figure><ul><li><code>parameters</code>：（可选）用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入。</li></ul><h4 id="💡-材质属性-blending"><a href="#💡-材质属性-blending" class="headerlink" title="💡 材质属性 .blending"></a><code>💡</code> 材质属性 .blending</h4><p>材质的<code>.blending</code> 属性主要控制纹理融合的叠加方式，<code>.blending</code> 属性的值包括：</p><ul><li><code>THREE.NormalBlending</code>：默认值</li><li><code>THREE.AdditiveBlending</code>：加法融合模式</li><li><code>THREE.SubtractiveBlending</code>：减法融合模式</li><li><code>THREE.MultiplyBlending</code>：乘法融合模式</li><li><code>THREE.CustomBlending</code>：自定义融合模式，与 <code>.blendSrc</code>, <code>.blendDst</code> 或 <code>.blendEquation</code> 属性组合使用</li></ul><h4 id="💡-材质属性-sizeAttenuation"><a href="#💡-材质属性-sizeAttenuation" class="headerlink" title="💡 材质属性 .sizeAttenuation"></a><code>💡</code> 材质属性 .sizeAttenuation</h4><p>粒子的大小是否会被相机深度衰减，默认为 <code>true</code>（仅限透视相机）。</p><h4 id="💡-Three-js-向量"><a href="#💡-Three-js-向量" class="headerlink" title="💡 Three.js 向量"></a><code>💡</code> Three.js 向量</h4><p>几维向量就有几个分量，二维向量 <code>Vector2</code> 有 <code>x</code> 和 <code>y</code> 两个分量，三维向量 <code>Vector3</code> 有<code>x</code>、<code>y</code>、<code>z</code> 三个分量，四维向量 <code>Vector4</code> 有 <code>x</code>、<code>y</code>、<code>z</code>、<code>w</code> 四个分量。</p><p><strong>相关 API</strong>：</p><ul><li><code>Vector2</code>：二维向量</li><li><code>Vector3</code>：三维向量</li><li><code>Vector4</code>：四维向量</li></ul><h3 id="镜头控制、缩放适配、动画"><a href="#镜头控制、缩放适配、动画" class="headerlink" title="镜头控制、缩放适配、动画"></a>镜头控制、缩放适配、动画</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">controls.<span class="property">target</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">controls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 禁用平移</span></span><br><span class="line">controls.<span class="property">enablePan</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 禁用缩放</span></span><br><span class="line">controls.<span class="property">enableZoom</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 垂直旋转角度限制</span></span><br><span class="line">controls.<span class="property">minPolarAngle</span> = <span class="number">1.4</span>;</span><br><span class="line">controls.<span class="property">maxPolarAngle</span> = <span class="number">1.8</span>;</span><br><span class="line"><span class="comment">// 水平旋转角度限制</span></span><br><span class="line">controls.<span class="property">minAzimuthAngle</span> = -<span class="number">.6</span>;</span><br><span class="line">controls.<span class="property">maxAzimuthAngle</span> = <span class="number">.6</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animate);</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  controls &amp;&amp; controls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="comment">// 旗帜动画更新</span></span><br><span class="line">  mixer &amp;&amp; mixer.<span class="title function_">update</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>().<span class="title function_">getDelta</span>());</span><br><span class="line">  <span class="comment">// 镜头动画</span></span><br><span class="line">  <span class="variable constant_">TWEEN</span> &amp;&amp; <span class="variable constant_">TWEEN</span>.<span class="title function_">update</span>();</span><br><span class="line">  <span class="comment">// 五环自转</span></span><br><span class="line">  fiveCyclesGroup &amp;&amp; (fiveCyclesGroup.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">.01</span>);</span><br><span class="line">  <span class="comment">// 顶点变动之后需要更新，否则无法实现雨滴特效</span></span><br><span class="line">  points.<span class="property">geometry</span>.<span class="property">verticesNeedUpdate</span> = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">// 雪花动画更新</span></span><br><span class="line">  <span class="keyword">let</span> vertices = points.<span class="property">geometry</span>.<span class="property">vertices</span>;</span><br><span class="line">  vertices.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">v</span>) &#123;</span><br><span class="line">    v.<span class="property">y</span> = v.<span class="property">y</span> - (v.<span class="property">velocityY</span>);</span><br><span class="line">    v.<span class="property">x</span> = v.<span class="property">x</span> - (v.<span class="property">velocityX</span>);</span><br><span class="line">    <span class="keyword">if</span> (v.<span class="property">y</span> &lt;= <span class="number">0</span>) v.<span class="property">y</span> = <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">if</span> (v.<span class="property">x</span> &lt;= -<span class="number">20</span> || v.<span class="property">x</span> &gt;= <span class="number">20</span>) v.<span class="property">velocityX</span> = v.<span class="property">velocityX</span> * -<span class="number">1</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>🔗</code> 完整代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RyYWdvbmlyLzNkL3RyZWUvbWFzdGVyL3NyYy9jb250YWluZXJzL09seW1waWM=">https://github.com/dragonir/3d/tree/master/src/containers/Olympic<i class="fa fa-external-link-alt"></i></span></p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>💡</code> 本文中主要包含的新知识点包括：</p><ul><li><code>TorusGeometry</code> 圆环面</li><li><code>MeshLambertMaterial</code> 非光泽表面材质</li><li><code>MeshDepthMaterial</code> 深度网格材质</li><li><code>custromMaterial</code> 自定义材质</li><li><code>Points</code> 粒子</li><li><code>PointsMaterial</code> 点材质</li><li>材质属性 <code>.blending</code>、<code>.sizeAttenuation</code></li><li><code>Three.js</code> 向量</li></ul><p><strong>进一步优化的空间</strong>:</p><ul><li>添加更多的交互功能、界面样式进一步优化；</li><li>吉祥物冰墩墩添加骨骼动画，并可以通过鼠标和键盘控制其移动和交互。</li></ul><hr><p>如此硬核的项目，真的是膜拜 <code>dragonir</code> 大牛。</p><blockquote><p>声明：本文转载自 dragonir，侵删致歉<br>原文链接：<span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MDYwMjkyOTQzNjA4ODA3NDYw">https://juejin.cn/post/7060292943608807460<i class="fa fa-external-link-alt"></i></span></p></blockquote>]]></content>
    
    
    <summary type="html">本文使用 Three.js + React 技术栈，实现冬日和奥运元素，制作了一个充满趣味和纪念意义的冬奥主题 3D 页面</summary>
    
    
    
    <category term="程序设计" scheme="https://pdpeng.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="编程语言" scheme="https://pdpeng.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>你还没有抢到冰墩墩?</title>
    <link href="https://pdpeng.github.io/2022/02/08/python-turtle-BingDwenDwen/"/>
    <id>https://pdpeng.github.io/2022/02/08/python-turtle-BingDwenDwen/</id>
    <published>2022-02-08T10:14:37.000Z</published>
    <updated>2022-02-09T05:29:54.046Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/PDPENG/jason-storage/blog-img/BeijingOlympics.png"></p><div class="note info"><p>近日，火爆全网的北京2022冬奥会吉祥物冰墩墩一度售罄，既然买不到，那就自己做一个吧！</p></div><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line">turtle.title(<span class="string">&#x27;BingDwenDwen&#x27;</span>)</span><br><span class="line"></span><br><span class="line">turtle.speed(<span class="number">100</span>)  </span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">177</span>, <span class="number">112</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;lightgray&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">3</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">80</span>)</span><br><span class="line">turtle.circle(-<span class="number">45</span>, <span class="number">200</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">23</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">182</span>, <span class="number">95</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.setheading(<span class="number">95</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(-<span class="number">37</span>, <span class="number">160</span>)</span><br><span class="line">turtle.circle(-<span class="number">20</span>, <span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">200</span>, <span class="number">30</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">73</span>, <span class="number">230</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;lightgray&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">3</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">20</span>)</span><br><span class="line">turtle.circle(-<span class="number">250</span>, <span class="number">35</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(<span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">42</span>, <span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(-<span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">190</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">320</span>, <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line">turtle.circle(<span class="number">120</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">12</span>)</span><br><span class="line">turtle.circle(-<span class="number">18</span>, <span class="number">85</span>)</span><br><span class="line">turtle.circle(-<span class="number">180</span>, <span class="number">23</span>)</span><br><span class="line">turtle.circle(-<span class="number">20</span>, <span class="number">110</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">115</span>)</span><br><span class="line">turtle.circle(<span class="number">100</span>, <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">15</span>, <span class="number">110</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">15</span>, <span class="number">70</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">35</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(-<span class="number">120</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">35</span>, <span class="number">200</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">23</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(<span class="number">86</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(<span class="number">122</span>)</span><br><span class="line">turtle.circle(-<span class="number">53</span>, <span class="number">160</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">130</span>, <span class="number">180</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">28</span>, <span class="number">160</span>)</span><br><span class="line">turtle.setheading(<span class="number">210</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">20</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">90</span>, <span class="number">230</span>)</span><br><span class="line">turtle.setheading(<span class="number">40</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(-<span class="number">30</span>, <span class="number">170</span>)</span><br><span class="line">turtle.setheading(<span class="number">125</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">23</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">180</span>, -<span class="number">55</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.setheading(-<span class="number">120</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">27</span>, <span class="number">200</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line">turtle.setheading(-<span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">300</span>, <span class="number">14</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">108</span>, -<span class="number">168</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(-<span class="number">115</span>)</span><br><span class="line">turtle.circle(<span class="number">110</span>, <span class="number">15</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">10</span>)</span><br><span class="line">turtle.circle(-<span class="number">18</span>, <span class="number">80</span>)</span><br><span class="line">turtle.circle(-<span class="number">180</span>, <span class="number">13</span>)</span><br><span class="line">turtle.circle(-<span class="number">20</span>, <span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">60</span>)</span><br><span class="line">turtle.setheading(<span class="number">42</span>)</span><br><span class="line">turtle.circle(-<span class="number">200</span>, <span class="number">29</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">38</span>, -<span class="number">210</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(-<span class="number">155</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">100</span>)</span><br><span class="line">turtle.circle(-<span class="number">10</span>, <span class="number">110</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">15</span>, <span class="number">65</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">15</span>)</span><br><span class="line">turtle.setheading(-<span class="number">14</span>)</span><br><span class="line">turtle.circle(-<span class="number">200</span>, <span class="number">27</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">64</span>, <span class="number">120</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">40</span>)</span><br><span class="line">turtle.circle(-<span class="number">35</span>, <span class="number">152</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">35</span>, <span class="number">130</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">47</span>, <span class="number">55</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">25</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">45</span>, <span class="number">62</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">45</span>, <span class="number">68</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">47</span>, <span class="number">86</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">51</span>, <span class="number">82</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">32</span>, <span class="number">152</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">55</span>)</span><br><span class="line">turtle.circle(-<span class="number">25</span>, <span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">120</span>, <span class="number">45</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">60</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">24</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">64</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">70</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">88</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">37</span>, <span class="number">80</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">130</span>)</span><br><span class="line">turtle.circle(-<span class="number">22</span>, <span class="number">100</span>)</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">130</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">15</span>, <span class="number">48</span>)</span><br><span class="line">turtle.setheading(-<span class="number">36</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(<span class="number">60</span>, <span class="number">70</span>)</span><br><span class="line">turtle.setheading(-<span class="number">132</span>)</span><br><span class="line">turtle.circle(-<span class="number">45</span>, <span class="number">100</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">135</span>, <span class="number">120</span>)</span><br><span class="line">turtle.pensize(<span class="number">5</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;cyan&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">165</span>, <span class="number">150</span>)</span><br><span class="line">turtle.circle(-<span class="number">130</span>, <span class="number">78</span>)</span><br><span class="line">turtle.circle(-<span class="number">250</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">138</span>, <span class="number">105</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">131</span>, <span class="number">116</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;slateblue&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">160</span>, <span class="number">144</span>)</span><br><span class="line">turtle.circle(-<span class="number">120</span>, <span class="number">78</span>)</span><br><span class="line">turtle.circle(-<span class="number">242</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">135</span>, <span class="number">105</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">127</span>, <span class="number">112</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;orangered&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">155</span>, <span class="number">136</span>)</span><br><span class="line">turtle.circle(-<span class="number">116</span>, <span class="number">86</span>)</span><br><span class="line">turtle.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">134</span>, <span class="number">103</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">123</span>, <span class="number">108</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;gold&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">136</span>)</span><br><span class="line">turtle.circle(-<span class="number">104</span>, <span class="number">86</span>)</span><br><span class="line">turtle.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">126</span>, <span class="number">102</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">120</span>, <span class="number">104</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;greenyellow&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">145</span>, <span class="number">136</span>)</span><br><span class="line">turtle.circle(-<span class="number">90</span>, <span class="number">83</span>)</span><br><span class="line">turtle.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">120</span>, <span class="number">100</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">220</span>, <span class="number">115</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">36</span>)</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">180</span>)</span><br><span class="line">turtle.circle(-<span class="number">60</span>, <span class="number">24</span>)</span><br><span class="line">turtle.setheading(<span class="number">110</span>)</span><br><span class="line">turtle.circle(-<span class="number">60</span>, <span class="number">24</span>)</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">180</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">5</span>, -<span class="number">170</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">10</span>, -<span class="number">170</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">25</span>, -<span class="number">170</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">2</span>, -<span class="number">175</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;lightgoldenrod&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">16</span>, -<span class="number">175</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line"></span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.goto(-<span class="number">16</span>, -<span class="number">160</span>)</span><br><span class="line">turtle.write(<span class="string">&quot;BEIJING 2022&quot;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">10</span>, <span class="string">&#x27;bold italic&#x27;</span>))</span><br><span class="line">turtle.hideturtle()</span><br><span class="line"></span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><p>实现效果如下，可爱的冰墩墩到手啦</p><img src="https://cdn.jsdelivr.net/gh/PDPENG/jason-storage/blog-img/bing-dwen-dwen.png" width="70%">]]></content>
    
    
    <summary type="html">2022北京冬奥会顶流冰墩儿在这里呀！</summary>
    
    
    
    <category term="程序设计" scheme="https://pdpeng.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="编程语言" scheme="https://pdpeng.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建个人博客——保姆级教程</title>
    <link href="https://pdpeng.github.io/2022/01/19/setup-personal-blog/"/>
    <id>https://pdpeng.github.io/2022/01/19/setup-personal-blog/</id>
    <published>2022-01-19T03:23:04.000Z</published>
    <updated>2022-03-01T13:40:19.717Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger"><p>本站点主题现已更换为 Next，文中除主题外的配置参数均不受影响</p></div><h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>偶然间，看到某乎上高赞的一个问题：怎么证明下计算机专业学生的能力？问题下面呢，也是有众多网友评论哈，我记得最清晰、也最现实的一条是：有什么能力的，为了装个 X 罢了</p><p><img src="https://img-blog.csdnimg.cn/ea2783af495240279e29d90c6db3dc5e.png"></p><p>看到这个我就不得不站出来说一句了，证明能力的方式也不是只有建网站这一种方式是吧，那毕竟还是“术业有专攻”呢，对吧。也不知道为什么锻炼下自己的实操能力，拓宽下学识就成了键盘侠下的装 X，咱也喷不过，求饶求饶啊</p><p>好了，回归正题，我建立个人网站呢，初衷其实非常简单，说不定你也想过，只是没去做而已。我是想：现在的网络中有好多的写作平台，比如我现在在用的C站，它已经非常成熟，社区讨论、问题发布、Blink动态等等，一应俱全。我在学完相关知识后，为什么不能自己写一个呢？也许更多的是我爱折腾罢了，哈哈</p><p><img src="https://img-blog.csdnimg.cn/ca8d2f14076a4376aef1c62f70b46c55.png"></p><p>最开始接触是在C站文章发布“板块自定义”模块中，输入几行代码，就能有漂亮的界面。当时因为还没有接触到CSS、Web前端这些，是从网上白嫖来的，更是激起了我深入学习的兴趣</p><p>什么是博客，博客是大家分享、交流的一个平台，我们可以从中吸取别人的经验，提升自己。对于看博客的人来说是这样，对于写博客的博主呢，更是对自己所学的总结，能理清自己的思路，便于日后复盘，养成良好的习惯。技术博客，能记录我们遇到的问题，更好的Bug处理方案，在我们日后开发的过程中遇到同样的问题，记忆会更加深刻</p><p>有了想法就要动手，当我真正动手去实现的时候，才发现并不是一些标题党发的文章，像“十分钟建立属于你的网站、你还不会自己建网站？”。等到自己真正看着他们的视频、文章去操作的时候，有的是真大神，他默认的一些东西你应该是会的，会写的简单一些。还有一些，就是“伟大的搬运工”了，完完全全就是发布了别人的文章，还不放原文链接那种</p><p>正是我没有发现一套完整的，能帮助新手开发一个网站的资源，所以决定写下 UP 建站的过程，分享我从初学到最后实现的一些经验。所以，如果你也想要拥有一个属于自己的网站，可以跟着上手操作下，过程中如果遇到问题可以私信或留言。下面，让我们一起开始吧</p><p>思考下，我们查资料用的最多的是什么？有些朋友就会说了：那还用问，必须是“在B站上大学“啦，亦或是搜索引擎了。没错，我想这正是我们大多数人学习新东西、不断探索向前时使用最多的工具了。那，我们搜些什么呢？比如，你可以这样：</p><p><img src="https://img-blog.csdnimg.cn/832f424d141a46cbbffdf9bb78f4efa5.png"></p><p>或许，你还可以这样：</p><p><img src="https://img-blog.csdnimg.cn/710508a41cf74abfae9034e86f4da8b3.png"></p><p>的确能搜到很多的视频、文章。但是在这部分，我以我是初学者的角度来描述下我的心路历程：因为这东西目前在我的脑子里就是一个初步的想法，我还不知道怎么去实现它。就像是一个人在山里迷路了，我只知道要出去，可我找不到路啊</p><p><img src="https://img-blog.csdnimg.cn/fa7494f0e63146d2ac35388ef35df12d.png"></p><p>这一 pa，我们就来聊一些建站，我应该准备什么。网上大多数教程啊，都是一个大长篇，鼠标滑好几下都不带滑完的那种。会给刚入门的朋友一种：”哇，好难啊，这么多东西啊“的感觉，所以这里我对各部分的内容进行了分类，你只要按照顺序，一步步往下走就好啦</p><h1 id="本地网站"><a href="#本地网站" class="headerlink" title="本地网站"></a>本地网站</h1><p>这里为什么要强调是”本地“呢，一开始啊，我也是看的教程，跟着别人的思路来走，像什么先买个域名，买台服务器啥的，我都踩过坑。这对刚入门的朋友在购买或者选择上会造成困难，我们莫不如换一种思考方式，现在我自己的电脑上建立一个网站，然后在”发送“出去，让别人都能看到。你看，这不就很明确了吗？</p><p>在自己的电脑上实现网站，必须的两个东西<strong>浏览器</strong>、<strong>开发工具</strong>，前者大家肯定是都有了，不做赘述（不然你拿什么看到的我这篇文章呢，嘿嘿），我们重点介绍后者</p><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><h3 id="WebStorm"><a href="#WebStorm" class="headerlink" title="WebStorm"></a>WebStorm</h3><p>WebStorm 是JetBrains公司旗下一款JavaScript 开发工具。已经被广大中国JS开发者誉为“Web前端开发神器”、“最强大的HTML5编辑器”、“最智能的JavaScript IDE”等。与IntelliJ IDEA同源，继承了IntelliJ IDEA强大的JS部分的功能</p><p>废话少说，来这里下载 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS93ZWJzdG9ybS8=">传送门<i class="fa fa-external-link-alt"></i></span></p><p><img src="https://img-blog.csdnimg.cn/a2e3c8a3ffc94521bf59282e28284cea.png"></p><p>这儿呢，有个小问题，这玩意是收费的，如果你是一名大学生，可以通过学生认证免费申请到教育账号，如果……（不多说奥，自己去问度娘，能找到方法），直接无脑下一步安装就行，不要慌</p><h3 id="Vscode"><a href="#Vscode" class="headerlink" title="Vscode"></a>Vscode</h3><p>Visual Studio Code（简称“VS Code” ）是Microsoft在2015年4月30日Build开发者大会上正式宣布一个运行于 Mac OS X、Windows和 Linux 之上的，针对于编写现代Web和云应用的跨平台源代码编辑器，可在桌面上运行，并且可用于Windows，macOS和Linux。它具有对JavaScript，TypeScript和Node.js的内置支持，并具有丰富的其他语言（例如C++，C＃，Java，Python，PHP，Go）和运行时（例如.NET和Unity）扩展的生态系统</p><p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v">传送门<i class="fa fa-external-link-alt"></i></span></p><p><img src="https://img-blog.csdnimg.cn/45fb2c8b80ef40538892f88fb09c5f31.png"></p><p>这两个工具具体来说就是：前者是全家桶（啥都有，不用你管，直接用就行），后者是一个空壳公司，需要各种员工（插件）去实现一些功能。所以如果你懒得去配置了，就直接下第一个，第二个可能在写博客<strong>Markdown</strong>语法上更方便一些，这个我后面会说到。此处如果你是新手，我建议你下<strong>WebStorm</strong>，后文的一些配置上，会更加方便</p><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>“框架”这是啥，懵了吧，嘿嘿。遇到事情不要慌，且听杰森娓娓道来。这里咱们看下某度词条的解释：</p><blockquote><p>框架（framework）是一个框子——指其约束性，也是一个架子——指其支撑性。是一个基本概念上的结构，用于去解决或者处理复杂的问题<br>框架这个广泛的定义使用的十分流行，尤其在软件概念。框架也能用于机械结构</p></blockquote><p>这东西相当于什么呢，比如咱们建房子，你说你怎么建？咱不能没有图纸、没有工人就开始吧，这不是“天方夜谭”嘛。首先肯定是需要设计师根据用户需求设计好这个图纸，然后工人再依据这张图纸开始建房子对吧。这里省略了很多，行业大咖求放过，举个栗子哈</p><p>我们搭建网站也一样如此，你真的以为那么多的网站，都是程序猿没日没夜一行一行从零开始写出来的吗？emmm，其实最开始对于这个问题，我的回答是：嗯，是的，那肯定得呀。直到我去实习的时候，才发现企业里的一些东西也并不是全部从零开始开发的。（开源大法好，哈哈哈）难道你想成为这样？</p><p><img src="https://img-blog.csdnimg.cn/ca5458a3fa854d45b7900dcb43468d74.png"></p><p>一个产品、项目、网站……只要是有前人做过的东西，我们都可以从中汲取经验啊，学习好的编码，开源的，别人已经实现的我们何必浪费时间再去搞一遍呢？尤其是下文要将的<strong>WordPress</strong>，简直就是“无脑式操作”，你可能都不知道自己做了什么，但一个属于你的网站就那么出来了</p><p><strong>博客框架</strong>通俗的说就是别人写好的一套源码，你拿过来会用就行，改一改自己的配置啊，配上想要的主题啊，这种就足够了（大佬请绕路）。所以下面我会给大家分享一些在搭建我的个人网站时，了解到的一些框架，并简单分析，供大家选择</p><p>还是老话，此专栏受众对象是刚接触的朋友，所以一些复杂，不需要知道的参数我并不会提及，只涉及到最关键的部分，方便大家快速找到适合自己的那一个</p><blockquote><p>提前声明，杰森用的框架是 &#x3D;&#x3D;Hexo&#x3D;&#x3D; ，各位可以和我选择不同，但配置不尽相同，同理可得的那种</p></blockquote><h3 id="Hexo（强烈推荐）"><a href="#Hexo（强烈推荐）" class="headerlink" title="Hexo（强烈推荐）"></a>Hexo（强烈推荐）</h3><p>Hexo 是一个快速、简单且功能强大的博客框架。你用Markdown（或其他标记语言）写帖子，Hexo 会在几秒钟内生成带有漂亮主题的静态文件。<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2luZGV4Lmh0bWw=">&gt;点我直达&lt;<i class="fa fa-external-link-alt"></i></span></p><p>Hexo特性：</p><ul><li>运行效果极佳，成本低</li><li>多平台：本地、云、PC、移动端通吃</li><li>支持多种<strong>CDN</strong>服务（开启可以提高网页的打卡速度）</li><li>各大搜索引擎对网站的收录及<strong>权重</strong>有较大优势（用户搜到你发布的内容可能性更大）</li></ul><p><img src="https://img-blog.csdnimg.cn/cc55ace4c77f4bd8a0038735dc0f69c7.png"></p><p>如果你喜欢配置，对代码操作后完成一定的配置，这款符合你胃口。放上配置截图供参考：</p><p><img src="https://img-blog.csdnimg.cn/e4fdf3733f1140b291cefc1ea382c8c1.png"></p><h3 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h3><p>WordPress是基于PHP和MySQL的免费开源内容管理系统（CMS）。 是全球使用最广泛的CMS软件，从最开始一款简单的博客系统，发展成为现在具有数千款插件，小工具和主题功能完整的CMS系统。<span class="exturl" data-url="aHR0cHM6Ly9jbi53b3JkcHJlc3Mub3JnLw==">&gt; 点我直达 &lt;<i class="fa fa-external-link-alt"></i></span><br>WordPress特性：</p><ul><li>商用范围广</li><li>方便后续备份和转移，有自带的工具支持</li><li>扩展性强大（此处可联想Google的插件商城）</li><li>对自定义用户非常友好（绝对可以打造出你想要的）</li></ul><p><img src="https://img-blog.csdnimg.cn/bf10fc73dc664e74bd343e85bae709dc.png"></p><p>如果你并不像看那些代码，可以用这款，<strong>WordPress</strong>自带后端管理，选择自己想要的主题，然后拖拽所需控件（比如你想实现显示时间这个功能，会有一个像手机端桌面小组件一样的东西，拖拽到想显示的位置即可实现）。<strong>另外最重要的是，使用它你需要先搞一台服务器</strong></p><p>为了大家能更快速的找到合适的，我不会给大家很多的可选项，更不会告诉大家还有什么（不然你会觉得，我现在的可能不是最好的，我要尝试更多的。倘若这样的话，不知不觉间你就会浪费很多时间，莫不如跟着一个先搭建下来，等日后熟悉了，再更换其他的。）等到自己独立上手时，也能有个清晰的思路，不至于在某一点上花太多时间</p><p><img src="https://img-blog.csdnimg.cn/a24e06bf834d4a5c901ceefc5ef9d090.png"></p><h2 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h2><p>这一块呢，不用过多的介绍，可以理解为我们建房子需要水泥、铲子等工具和原料一样，本地的环境就是我们用到的铲子，是工具。而<strong>Hexo</strong>的博客框架就是水泥这样的原材料，我们需要用工具才开始干活，不然你***用手干啊……</p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>简单描述下它用来做什么，Look Here：</p><blockquote><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持</p></blockquote><p>不必理会上面你从未听过的词汇，这么来。某度网盘用过吧，是不是有个自动备份，你选中本地的某个文件夹，当本地文件发生改变时，只要软件在后台运行，是不是云上也会和本地自动保持一致。过程就是这么个情况，但是<strong>git</strong>的操作目前你就可以相像成一个云，用一些命令你就可以把本地的代码“发送&#x2F;备份”到云上</p><p>我并未深入展开讲<strong>git</strong>的分布式特性，命令等内容，这里推荐入门的朋友可以<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9naXQvZ2l0LWJhc2ljLW9wZXJhdGlvbnMuaHRtbA==">&gt; 看这里 &lt;<i class="fa fa-external-link-alt"></i></span>的教程，方便快速入门</p><p>既然要使用Git，那么我们首先就要安装并配置Git的环境，<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">点击这里<i class="fa fa-external-link-alt"></i></span>下载（Windows操作系统），点击Download按钮即可</p><img src="https://oscimg.oschina.net/oscnet/2348e786eb7a4c2da133338a12aa6670.png" width="80%"><p>安装过程不再赘述，直接使用默认配置，一“Next(站)” 到底</p><p>下面我们配置环境变量信息，<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMjY5OTYxL2FydGljbGUvZGV0YWlscy8xMTg4NzU5Njc=">详情参考此处<i class="fa fa-external-link-alt"></i></span>，打开 Path 变量后，添加本地环境安装目录（确保文件位置到达 cmd ）</p><p><img src="https://img-blog.csdnimg.cn/3c49d776d6dd4ee4bc20bb3bde0cb9ba.png"></p><p>安装完成后，你可能没有看到桌面的快捷方式，不要着急。我们在Windows搜索框中搜索Git就可以看到这样几个图标</p><p><img src="https://img-blog.csdnimg.cn/ba1113bb892c45d6bbf5906242cf2de4.png"></p><p>可以直接点击 Git Bash 或者在桌面任意位置右键，打开 Git Bash Here 就可以使用啦</p><p><img src="https://img-blog.csdnimg.cn/1d89848f17c144a6a3823098892c6c44.png"></p><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">&gt; 下载直达 &lt;<i class="fa fa-external-link-alt"></i></span></p><p><img src="https://img-blog.csdnimg.cn/f0bf90b791614bc1b09cc6f94105b00c.png"></p><p>很多朋友纠结这两个版本，看下这个解释相信就知道需要哪个了，杰森用的是<strong>LTS版本</strong></p><blockquote><p><strong>LTS</strong>代表“Long Term Support（长期支持）”，Current代表“当前的”<br><strong>Current</strong>就代表最新发布的版本（每6个月一次的），它可能是奇数版本也可能是偶数版本</p></blockquote><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>桌面右击，打开<strong>git bash here</strong>输入命令安装（默认位置即可，方面后续配置，不建议修改）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这里我已经装过了，可能显示的和你的不一样，执行完后关闭窗口就行，此时本地已经有了<strong>hexo</strong>的环境。怎么样，是不是很简单呢？</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在你本地任意位置（但要记住路径）方便起见<strong>建议直接在除C盘的任意盘符下的跟目录新建</strong>，命名任意，比如我这里是在D盘新建的 hexo-jason-blog 文件夹，可以参考下</p><p>本来我想用自己已经搭好的本地环境给大家演示，但是为了能真实体现“新手”的操作环境，杰森决定重新建立，一步步重新操作，只为大家能走好每一步，直到成功</p><p>在该文件夹下打开 git bash here 输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/6922e3628acf441496d0d8a303cbc299.png"></p><p>此时你可能会遇到这个错误，不要慌张，是从<strong>GitHub</strong>克隆时网络原因，多试几次就好</p><p><img src="https://img-blog.csdnimg.cn/92bbacd9593b437990a8ef5d670349c2.png"></p><p>关于此类问题的解决方案请<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmFpcnlseWwvcC8xNTA1OTQzNy5odG1s">&gt; 参考这里 &lt;<i class="fa fa-external-link-alt"></i></span></p><p>成功效果：</p><p><img src="https://img-blog.csdnimg.cn/6f75f87ba4cf42fe85bd604fdfcb9277.png"></p><p>根文件目录下多了这些文件</p><p><img src="https://img-blog.csdnimg.cn/590bda80915546c1b3a904af3169057a.png"></p><p>简单介绍下hexo的文件结构：</p><ul><li>public  最终所见网页的所有内容 </li><li>node_modules  插件以及hexo所需node.js模块 </li><li>_config.yml  站点配置文件，设定一些公开信息等</li><li>package.json  应用程序信息，配置hexo运行所需js包</li><li>scaffolds   模板文件夹，新建文章，会默认包含对应模板内容</li><li>themes  存放主题文件，hexo根据主题生成静态网页（速度贼快）</li><li>source 用于存放用户资源（除 <em>posts 文件夹，其余命名方式为 “</em> + 文件名”的文件被忽略）</li></ul><p>我们日常写文的操作都在 source&#x2F;_post下，既然我们已经有了建房子时“和泥”的工具——WebStorm，为什么不用呢？</p><p>在WebStorm中打开根目录 hexo-jason-blog （直接将该文件拽到桌面WebStorm的快捷方式打开就行），打开终端并输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1c60954ce9994f08b87502fc05662446.png"></p><p>点击链接 <strong><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span></strong>（图中黄色下划线位置）进行本地预览，默认是hexo内置的landscape 主题</p><p><img src="https://img-blog.csdnimg.cn/166b60aaca844a45848981e4c34af06a.png"></p><p>光标停留在 Terminal 位置，组合键 <a class="btn" href="#">Ctrl</a> + <a class="btn" href="#">C</a> 停止本地预览，这就是本地最简单的一个网站啦</p><p>emmm，默认的页面朋友们也预览成功了，大概呢，就是这样，嘿：</p><p><img src="https://img-blog.csdnimg.cn/827a7d03aeec46a29e0fd9e315dc0fc2.gif"></p><p>但总感觉，还是差了点什么东西。没有一些博客、网站该有的东西，那怎么能让它更像一个网站呢？</p><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>这里我们介绍下<strong>主题</strong>和<strong>框架</strong>，我们现在使用的<strong>Hexo</strong>是一款快速、简单的博客框架，主题就是开发者根据此框架开发的功能更加完备、页面样式、栏目更多的一种”配件“。就像你用的手机，换上手机壳，选手机壳时需要匹配自己手机的型号，不然也不配套啊是吧</p><p>再举个“栗子”，像Android手机（IOS闭源，除非越狱），厂家生产时默认的桌面主题，在<strong>主题商店</strong>这个app里你能根据自己的喜好选择更好看的图标、背景、字体。就像是“换上新衣”，可以从这个角度理解我们下面要做的操作</p><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><p>提及主题，肯定就会有很多啦。还是那句话，大家根据自己的喜好选择就好，这里是<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=">官方主题库<i class="fa fa-external-link-alt"></i></span>，我比较喜欢<strong>Butterfly</strong>这款主题，下面带大家给自己的网站“换新衣”</p><h3 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h3><p>先给大家看下主题的页面</p><p>博客主页</p><p><img src="https://img-blog.csdnimg.cn/e875c1528ae748be83db91cf2058ad56.gif"></p><p>博文页面</p><p><img src="https://img-blog.csdnimg.cn/09ab60bd347540ca9bbe317babdaeaac.gif"></p><p>从主题的文档中看，作者也是一直在维护的，时间很近。正所谓好的产品必须要有好的文档嘛，作者也是相当用心，大家可以跟着文档一步一步配置，非常简单，只是把一些工具组成链条罢了</p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><ul><li>Terminal 输入命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/344b9b18ace74732b725f60bb3831e2a.png"></p><p>等待安装完成，<strong>themes</strong>文件夹下显示了<strong>butterfly</strong>主题的一些文件</p><p><img src="https://img-blog.csdnimg.cn/bd527d4926494ec8b27540dabb5cb0c2.png"></p><ul><li>安装插件</li></ul><p>安装 pug 以及 stylus 的渲染器，如果没有安装，预览界面是这样的</p><p><img src="https://img-blog.csdnimg.cn/f28ea972cbce4c788723f02ba0adaba8.png"></p><p>控制台输入命令，回车等待安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><p> 网站根目录下找到**_config.yml<strong>文件，修改主题为</strong>butterfly<strong>（注意</strong>yml**文件格式）</p><p><img src="https://img-blog.csdnimg.cn/38d2cd795f084129b9d9ce2022dc0af2.png"></p><ul><li>本地预览</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //执行此命令后继续下一条</span><br><span class="line">hexo g //生成博客目录</span><br><span class="line">hexo s //本地预览</span><br></pre></td></tr></table></figure><p>效果图</p><p><img src="https://img-blog.csdnimg.cn/9d5acea822264f5d92d866944a0ae7d0.gif"></p><p>可能看上去还是那么的“简陋”，额，这个问题呢，会涉及到后续的”主题美化“（其实就是加上了一些好看的图片而已，也很简单）。我的博客也没有优化的很细节，非常粗糙，时间有限，后面再说吧，可以看下，留个”念想“，相信你做的会比我更好</p><p><img src="https://img-blog.csdnimg.cn/1dbf897a90c54e19b4bbe4f5b45fedf5.gif"></p><h1 id="正式上线"><a href="#正式上线" class="headerlink" title="正式上线"></a>正式上线</h1><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>这是个ma玩意啊？？？不要慌，大家不是看咱们默认主题的网站一点儿都不好看么，那是因为没图片啊，你要是给它换上一套配图，优化一下，是不是就好多了呢？那在网络中我们引用图片一种是本地上传，代码里放上路径引用；另一种则是通过网址，显然后者更方便（如果类比到后面要用到的服务器上，随着图片量日渐增多、存储空间慢慢减少，每次发文都需要连同图片一起上传，那得占用多大的空间呐）</p><p>然而，如果我们自己有一个地方，能把本地图片转换成链接（人人通过这个链接都能访问到你发布的照片）是不是就很棒了nie。<strong>Picgo</strong>和一些其他插件就能实现</p><p>前些时候更新过一片文章，使用<strong>GitHub</strong>和<strong>SM.MS</strong>。如果有不能类比操作的朋友，<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNjIyMzk1">&gt; 看这里 &lt;<i class="fa fa-external-link-alt"></i></span>由于<strong>GitHub</strong>毕竟是国外的，访问速度上会有点儿慢，<strong>SM.MS</strong>倒是一个运行了很久的老牌子了，但它俩在访问速度上都略慢</p><p>杰森强烈推荐国内的<strong>码云（Gitee）</strong>，配合<strong>Picgo</strong>使用。稳定、快速，还不容易丢失。（ps：此处就会有些朋友问了，我公开了我的仓库，里面全放的是我的照片，会不会隐私存在隐私泄露什么的）对于这类问题，我只能说</p><p><img src="https://img-blog.csdnimg.cn/27e0e65793664211a2893681263089a0.gif"></p><p>谁天天闲的没事去看你仓库啊？？再者说，你能上传到仓库里XXX（自行想象）照片么？？所以说，放心用，不要想辣么多真的是</p><p>另外，友情提示：<strong>Gitee对免费版账户存储容量最大为5G，仓库满了记得从软件中改下路径，使用后不要乱改自己Gitee账户的名称（不是昵称，英文那个名称），不然就等404吧</strong></p><h2 id="Butterfly配置"><a href="#Butterfly配置" class="headerlink" title="Butterfly配置"></a>Butterfly配置</h2><p>直接放上<span class="exturl" data-url="aHR0cHM6Ly9idXR0ZXJmbHkuanMub3JnL3Bvc3RzLzRhYThhYmJlLw==">官方文档<i class="fa fa-external-link-alt"></i></span>，朋友们可以先配置一下，非常简单。你看到的页面可能是繁体中文，不要用浏览器自带的翻译引擎（可能翻译后，部分内容不显示）贴心的作者，早已想到了，我们只要在网站右下角设置中切换一下就好</p><p><img src="https://img-blog.csdnimg.cn/ac0eb14b282649578572db051a27f47f.png"></p><p>杰森在后面会专门出一期，来讲下主题配置中的一些问题，相信看到这里的小伙伴已经迫不及待想要把自己的网站发不到网上了吧，我们重点讲这个问题</p><h2 id="GitHub-Pages配置"><a href="#GitHub-Pages配置" class="headerlink" title="GitHub Pages配置"></a>GitHub Pages配置</h2><p><strong>GitHub Pages</strong>是一种由<strong>GitHub</strong>中的仓库&#x2F;项目直接创建的网页。管理简单，在本地编辑仓库中的内容，上传到GitHub上，GitHub Pages就能快速完成更新，重点是<strong>不花钱，不花钱，不花钱</strong></p><p><img src="https://img-blog.csdnimg.cn/513ac1b27a354b1fba32011318edbf9f.png"></p><p>新建仓库，填写内容如下，<strong>特别注意红框位置</strong></p><p><img src="https://img-blog.csdnimg.cn/c4f6cb765a774149a1231ee3479d3606.png"></p><p>保证仓库<strong>public</strong>，名称填写正确<strong>用户名.github.io</strong>，系统自动变更为<strong>Pages</strong></p><p>在仓库设置中找到<strong>Pages</strong></p><p><img src="https://img-blog.csdnimg.cn/e780856e478c4e72b51ac048b6cddea1.png"></p><p>记住仓库地址，我们会将本地的文件上传到仓库</p><p><img src="https://img-blog.csdnimg.cn/30700a47e4cb4c1680c7036a3ab3d944.png"></p><p>如果你是在电脑上第一次使用<strong>git</strong>，请先配置<strong>SSH公钥</strong>（一种安全协议，你可以理解为登陆某网站需要的验证码）</p><p>在<strong>WebStorm</strong>中链接到远程，添加仓库地址，这里<strong>不是发布网站需要的仓库</strong>（非“用户名”+github.io仓库，新建一个，为了管理本地代码）</p><p><img src="https://img-blog.csdnimg.cn/9a6b98e6fc2147ceb39a16c932d1fa49.png"></p><p>因为这里都是基本的<strong>git</strong>命令，前面也提到过，不清楚的小伙伴可以看这个专栏里的资料，都是一些基础操作，非常容易上手</p><p>修改网站部署设置</p><p><img src="https://img-blog.csdnimg.cn/9ac139c8fb2841cdaf4b206c1b15dc6a.png"></p><p>在网站本地<strong>根目录</strong>下打开 git bash here 依次执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //执行此命令后继续下一条</span><br><span class="line">hexo g //生成博客目录</span><br><span class="line">hexo s //本地预览</span><br><span class="line">hexo d //部署项目</span><br></pre></td></tr></table></figure><p>执行完毕后，所有人就能通过<strong>你的用户名+github.io</strong>这个域名访问你的网站了。到这儿，我们就成功上线了自己的网站</p><p>如果感觉<strong>GitHub</strong>访问速度慢（嗯，其实就是慢，还会有打不开的情况）可以部署到<strong>Gitee</strong>，都是一样的操作，还是中文，不要太简单ei</p><p>额，发布确实是发布了，那你觉得像<strong>用户名+github.io</strong>这样的名称方便记忆吗？？我想，如果是一个新手（可能都不知道<strong>GitHub</strong>是什么的用户，肯定是很困难了）</p><p>那，怎么样方便记忆，而且足够个性化呢？</p><p><img src="https://img-blog.csdnimg.cn/2457d271a3b7408d95bb092f6a585cae.png"></p><p>当然，这部分肯定是不免费的了，哪儿有什么都白嫖的道理呢？对吧，推荐在<strong>阿里云</strong>或<strong>腾讯云</strong>完成下面的操作哦，如果你使用其他的平台，不是不行，但是建议购买域名和服务器都在相同的平台，方便管理</p><p>国内的大厂，都有保障，无脑冲就可以啦。从经济性角度来看，哪个有活动，更实惠就选哪个，杰森是看到了<strong>阿里云</strong>当时的活动比<strong>腾讯云</strong>更实惠，so~~</p><h2 id="服务器选购攻略"><a href="#服务器选购攻略" class="headerlink" title="服务器选购攻略"></a>服务器选购攻略</h2><p>收到有些朋友反应：那么多入口，都找不到从哪里买&#x2F;找不到活动入口。这里讲下怎么查看最新的活动，平台会有哪些优惠，入口在哪里</p><h3 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h3><h4 id="学生专享"><a href="#学生专享" class="headerlink" title="学生专享"></a>学生专享</h4><p>账号中心完成学生认证购买更优惠</p><h4 id="活动专享"><a href="#活动专享" class="headerlink" title="活动专享"></a>活动专享</h4><p>最新活动 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9hY3Rpdml0eT9zcG09NTE3Ni4xOTcyMDI1OC5KXzgwNTg4MDMyNjAuMi4zNmY4MmM0YUxKREc4RQ==">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span></p><p><img src="https://img-blog.csdnimg.cn/de9c6fba2bed4ff78d3bee37ea4e680f.png"></p><h3 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h3><p>不得不说，两家界面基本一致，熟悉一个就行，所以位置差不多都一样</p><h4 id="学生专享-1"><a href="#学生专享-1" class="headerlink" title="学生专享"></a>学生专享</h4><p>学生党查看这里 <span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9hY3QvY2FtcHVzP3V0bV9zb3VyY2U9cWNsb3VkJnV0bV9tZWRpdW09bmF2aWdhdGlvbiZ1dG1fY2FtcGFpZ249Y2FtcHVz">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span></p><p><img src="https://img-blog.csdnimg.cn/c0b733075577441185e137f9aebbf171.png"></p><h4 id="活动专享-1"><a href="#活动专享-1" class="headerlink" title="活动专享"></a>活动专享</h4><p>最新活动 <span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9hY3Q=">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span><br><img src="https://img-blog.csdnimg.cn/2a0d06a2636b48b99bb23e78edfad445.png"></p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><blockquote><p>域名（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）<br>由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串</p></blockquote><p>如果你没有看懂，没关系，那听杰森细细道来。简单来说，在公网上访问的资源都有其固定地址<strong>IP</strong>，但是如果你要访问特定的<strong>IP</strong>，就需要记住它。但是呢，它不方便记忆，人们就想出了<strong>域名</strong>这东西</p><p>给<strong>IP</strong>起了一个个性化的名称，比如攻城狮杰森是全称，朋友们喊我森森、阿森、小森，都是别名，但都指向“攻城狮杰森”这个人。那在网络中如何实现起别名呢？这里介绍下<strong>DNS</strong>，它是互联网中的一项服务，实<strong>域名</strong>和<strong>IP</strong>的相互映射，也就是说，你输入域名访问的就是域名所对应的<strong>IP地址</strong></p><h3 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h3><p>既然理解了什么是<strong>域名</strong>，那我们先来买个域名吧！<br><span class="exturl" data-url="aHR0cHM6Ly93YW53YW5nLmFsaXl1bi5jb20vP3NwbT01MTc2LjIxMjEzMzAzLjExNTgwODEuMy43ZmY2M2VkYWhTRjRrVSZzY209MjAxNDA3MjIuU19jYXJkQEAlRTUlOEQlQTElRTclODklODdAQDU4MS5fLklEX2NhcmRAQCVFNSU4RCVBMSVFNyU4OSU4N0BANTgxLVJMXyVFNSU5RiU5RiVFNSU5MCU4RCVFOCVCNCVBRCVFNCVCOSVCMC1PUl9zZXItVl8yLVAwXzA=">&gt; 点击此处 &lt; <i class="fa fa-external-link-alt"></i></span>查询你想要的域名</p><p>举个栗子，输入后查询，选好后加入清单，付款购买即可。不同的后缀价格不同，凭个人喜好</p><blockquote><p>域名后缀，亦被称为顶级域名，是指代表一个域名类型的符号。 不同后缀的域名有不同的含义。域名共分为两类：国别域名（ccTLD），例如中国的.cn、美国的.us、俄罗斯的.ru、以及国际通用域名（gTLD），例如.com、.xyz、.top、.wang、pub、.xin、.net等1000多种，所有域名后缀作用无差异，仅外观和本身含义不同，但只有少数例如举例中的域名后缀可以在国内支持网站的备案</p></blockquote><p>更多域名后缀信息，<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOUYlOUYlRTUlOTAlOEQlRTUlOTAlOEUlRTclQkMlODAvNjY3NjQxIzp+OnRleHQ9JUU0JUI4JThEJUU1JTkwJThDJTIwJUU1JTkwJThFJUU3JUJDJTgwJTIwJUU3JTlBJTg0JUU1JTlGJTlGJUU1JTkwJThEJUU2JTlDJTg5JUU0JUI4JThEJUU1JTkwJThDJUU3JTlBJTg0JUU1JTkwJUFCJUU0JUI5JTg5JUUzJTgwJTgyJTIwJUU1JTlGJTlGJUU1JTkwJThEJUU1JTg1JUIxJUU1JTg4JTg2JUU0JUI4JUJBJUU0JUI4JUE0JUU3JUIxJUJCJUVGJUJDJTlBJTIwJUU1JTlCJUJEJUU1JTg4JUFCJUU1JTlGJTlGJUU1JTkwJThEJTIwJUVGJUJDJTg4Y2NUTEQlRUYlQkMlODklRUYlQkMlOEMlRTQlQkUlOEIlRTUlQTYlODIlRTQlQjglQUQlRTUlOUIlQkQlRTclOUElODQlMjAuY24lMjAlRTMlODAlODElRTclQkUlOEUlRTUlOUIlQkQlRTclOUElODQsLndhbmclMjAlRTMlODAlODFwdWIlRTMlODAlODElMjAueGluJTIwJUUzJTgwJTgxJTIwLm5ldCUyMCVFNyVBRCU4OTEwMDAlRTUlQTQlOUElRTclQTclOEQlRUYlQkMlOEMlRTYlODklODAlRTYlOUMlODklRTUlOUYlOUYlRTUlOTAlOEQlRTUlOTAlOEUlRTclQkMlODAlRTQlQkQlOUMlRTclOTQlQTglRTYlOTclQTAlRTUlQjclQUUlRTUlQkMlODIlRUYlQkMlOEMlRTQlQkIlODUlRTUlQTQlOTYlRTglQTclODIlRTUlOTIlOEMlRTYlOUMlQUMlRTglQkElQUIlRTUlOTAlQUIlRTQlQjklODklRTQlQjglOEQlRTUlOTAlOEMlRUYlQkMlOEMlRTQlQkQlODYlRTUlOEYlQUElRTYlOUMlODklRTUlQjAlOTElRTYlOTUlQjAlRTQlQkUlOEIlRTUlQTYlODIlRTQlQjglQkUlRTQlQkUlOEIlRTQlQjglQUQlRTclOUElODQlRTUlOUYlOUYlRTUlOTAlOEQlRTUlOTAlOEUlRTclQkMlODAlRTUlOEYlQUYlRTQlQkIlQTUlRTUlOUMlQTglRTUlOUIlQkQlRTUlODYlODUlRTYlOTQlQUYlRTYlOEMlODElRTclQkQlOTElRTclQUIlOTklRTclOUElODQlRTUlQTQlODclRTYlQTElODglMjAlNUIxJTVEJTIwJUUzJTgwJTgy">查看这里<i class="fa fa-external-link-alt"></i></span></p><p><img src="https://img-blog.csdnimg.cn/35738d502013404cb72b871d0217770b.png"></p><h3 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h3><h4 id="添加域名"><a href="#添加域名" class="headerlink" title="添加域名"></a>添加域名</h4><p>因为我们现在已经有了<strong>用户名.github.io</strong>这样一个网站，为了简单易记，我们将“用户名.github.io“解析”到所购买的域名，这样，网站就有了<strong>所有域名</strong>和<strong>username.github.io</strong>两个网址了</p><p>打开仓库，找到设置，进入pages设置，添加域名</p><p><img src="https://img-blog.csdnimg.cn/f6c18b9194714a92bd45f9470a611bb9.png"></p><p>你还可以使用免费的<strong>强制HTTPS</strong></p><blockquote><p>HTTPS （全称：Hyper Text Transfer Protocol over SecureSocket Layer），是以安全为目标的 HTTP 通道，在HTTP的基础上通过传输加密和身份认证保证了传输过程的安全性<br>HTTPS 在HTTP 的基础下加入SSL，HTTPS 的安全基础是 SSL【SSL(Secure Sockets Layer 安全套接字协议),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与SSL在传输层与应用层之间对网络连接进行加密】<br>因此加密的详细内容就需要 SSL。 HTTPS 存在不同于 HTTP 的默认端口及一个加密&#x2F;身份验证层（在 HTTP与 TCP 之间）。这个系统提供了身份验证与加密通讯方法。它被广泛用于万维网上安全敏感的通讯，例如交易支付等方面</p></blockquote><p>打开这个选项</p><p><img src="https://img-blog.csdnimg.cn/615067c0e3b24bb3aa0ce864556f6eb4.png"></p><h4 id="添加解析记录"><a href="#添加解析记录" class="headerlink" title="添加解析记录"></a>添加解析记录</h4><p>在<span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS8/c3BtPWEyYzFkLjgyNTE4OTIudG9wLW5hdi5kbG9nby41NjdhNWI3NnhNaXI2Uw==">阿里云官网<i class="fa fa-external-link-alt"></i></span>进入域名控制台</p><p><img src="https://img-blog.csdnimg.cn/0aa958e53b3e411ebc6f25b3ac4b3b74.png"></p><p>若没有，在此处搜索</p><p><img src="https://img-blog.csdnimg.cn/109db46dbaf34bb0bf981356039cd1fc.png"></p><p>找到需要与username.github.io绑定的域名，点击“解析”</p><p><img src="https://img-blog.csdnimg.cn/5135e84c1069461a806c5c28126f4e2a.png"></p><p>进入后，点击“添加记录”，需添加两次记录</p><p>第一次</p><p><img src="https://img-blog.csdnimg.cn/d202b956b5d1495f8205441325700c8c.png"></p><p>第二次</p><p><img src="https://img-blog.csdnimg.cn/4126b4b3299e4eb79e0214f77adaf573.png"></p><p>DNS解析需要时间，稍等片刻后，若在浏览框中输入你的域名，正常访问则解析成功</p><p>这里为什么要说是正式上线呢，毕竟网站到了服务器看得才，才正规一点儿是吧，像<strong>GitHub Pages</strong>，倒是免费，但是在国内，DNS解析后需要时间，总会有无法访问或者断连的情况，太不方便</p><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>先来看看，<strong>服务器</strong>是何方神圣？</p><blockquote><p>服务器是计算机的一种，它比普通计算机运行更快、负载更高、价格更贵。服务器在网络中为其它客户机（如PC机、智能手机、ATM等终端甚至是火车系统等大型设备）提供计算或者应用服务。服务器具有高速的CPU运算能力、长时间的可靠运行、强大的I&#x2F;O外部数据吞吐能力以及更好的扩展性<br>根据服务器所提供的服务，一般来说服务器都具备承担响应服务请求、承担服务、保障服务的能力。服务器作为电子设备，其内部的结构十分的复杂，但与普通的计算机内部结构相差不大，如：cpu、硬盘、内存，系统、系统总线等</p></blockquote><p>简单理解：一台不断电，有空间的主题在“天上（云端）”一直在为你放置（部署）上去的资源而服务，能处理各种请求（比如你在导航栏输入域名访问网站）</p><p>有两种类型的服务器<strong>国内</strong>和<strong>国外</strong>的，根据我国法律规定，中国大陆的网站需要备案，等待的时间可能会长一点。国外的到时不需要备案，但是稳定性和访问速度就不敢保证了，各位小伙伴自己衡量，杰森用的是<strong>阿里云的轻应用服务器</strong>部署的个人博客网站</p><h3 id="购买-1"><a href="#购买-1" class="headerlink" title="购买"></a>购买</h3><p>这是我的服务器配置，大家可以参考下</p><p><img src="https://img-blog.csdnimg.cn/c556344556d3449aabdc784454d3782e.png"></p><p>如果你是初学者，这个入门级的配置已经足够学生机，可免费领取，具体规则详见社区 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9wbGFuL2dyb3ctdXA/c3BtPTUxNzYuMTk3MjAyNTguSl84MDU4ODAzMjYwLjE4LjM2ZjgyYzRhTEpERzhF">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span></p><p>开发者-&gt; 成长计划</p><p><img src="https://img-blog.csdnimg.cn/f0f7b43eec49453fab77544b10825110.png"></p><p>学生专享（体验后即可得到半月免费ECS服务器，社区内发表使用感受（发一篇博客）可免费续费两月），具体规则请查看官网</p><p><img src="https://img-blog.csdnimg.cn/bb6086eaa76340cb8662ca19b22c22c0.png"></p><p>账号中心-&gt; 基本信息位置完成学生认证即可</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9hY3Rpdml0eT9zcG09NTE3Ni4xOTcyMDI1OC5KXzgwNTg4MDMyNjAuMi41MWZmMmM0YVpldXFOTA==">最新活动 <i class="fa fa-external-link-alt"></i></span>位置购买优惠力度会更大</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="密码设定"><a href="#密码设定" class="headerlink" title="密码设定"></a>密码设定</h4><p>在图示位置出更改远程连接密码，保存好</p><p><img src="https://img-blog.csdnimg.cn/52be94e8cd38411a85dc935ed43408a5.png"></p><p>虽然可以用浏览器<strong>远程连接</strong>，但是并不建议，因为有一些键盘上的快捷键会被系统误认为是对浏览器的操作，而不是对话框</p><h4 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h4><p>为避免这样的问题出现，我们选择使用第三方工具<strong>Putty</strong>，具体操作步骤，阿里云的<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmFsaXl1bi5jb20vZG9jdW1lbnRfZGV0YWlsLzU5MDgzLmh0bWw/c3BtPTUxNzYuMTAxNzMyODkuaGVscC5kZXh0ZXJuYWwuNTRhMzJlNzdYcG5SYTYjd2luZG93cw==">帮助文档<i class="fa fa-external-link-alt"></i></span>已经非常详细，这里不再重复</p><p>从这里开始看，根据提示完成操作</p><p><img src="https://img-blog.csdnimg.cn/5c50fd8a5db4409585807e0413ce9ac3.png"></p><p>启动<strong>Putty</strong>工具，链接服务器，登陆用户名为<strong>root</strong>，密码就是在服务器位置设置的密码（Linux操作系统中输入密码为了安全不显示，不必担心）出现以下界面时，说明配置正常，继续下一步即可</p><p><img src="https://img-blog.csdnimg.cn/5f0160fa45044dddbc0552b570b25497.png"></p><h4 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h4><p>1.输入命令，安装<strong>git</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>中途如果暂停，则根据提示输入 yes &#x2F; y &#x2F; Y，表示继续安装，知道最后出现complete表示安装成功</p><p><img src="https://img-blog.csdnimg.cn/f8e16d644d0a4904a1771a6495e45125.png"></p><p>2.创建git账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure><p>3.添加git账户权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1623aaf5c2164ddeb853a6ab804d3098.png"></p><p>4.执行最后一条命令后，点击键盘 <a class="btn" href="#">i</a>键进入编辑模式，找到图示位置代码</p><p><img src="https://img-blog.csdnimg.cn/7cc4471c3be14ee79be9404be2e6f7af.png"><br>在下面加入一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git     ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e233a87b04434ab29e2022146c1bc1f9.png"></p><p>按 <a class="btn" href="#">Esc</a> 键并输入 &#x3D;&#x3D;:wq&#x3D;&#x3D;（含义：保存后退出）</p><p><img src="https://img-blog.csdnimg.cn/8f83ceeef59340ca85095d2db4169ca8.png"><br>5.回改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 400 /etc/sudoers</span><br></pre></td></tr></table></figure><p>6.设置git账户密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure><p>输入命令回车后连续输入两次密码即可（不显示，正常），出现图示即成功</p><p><img src="https://img-blog.csdnimg.cn/f0cfdaee37d044bbb05f47ba6877b260.png"></p><p>7.切换至git账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure><p>创建 ~&#x2F;.ssh 和 ~&#x2F;.ssh&#x2F;authorized_keys 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>点击键盘 <a class="btn" href="#">i</a> 键进入编辑模式，粘贴本地电脑生成的<strong>SSH公钥</strong>，文件位置如图</p><p><img src="https://img-blog.csdnimg.cn/2102e7ed1cc74076b912126da1a480e0.png"></p><p>粘贴后，按 <a class="btn" href="#">Esc</a> 键并输入 &#x3D;&#x3D;:wq&#x3D;&#x3D;（含义：保存后退出）</p><p>赋予权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /home/git/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 700 /home/git/.ssh</span><br></pre></td></tr></table></figure><p>8.本地 git bash here 中测试是否免密登陆成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@服务器公网IP</span><br></pre></td></tr></table></figure><p>出现图示内容表示连接成功</p><p><img src="https://img-blog.csdnimg.cn/28fc21232ec945af92ef992e7b384113.png"></p><p>9.服务器中创建仓库并完成配置<br>切换到<strong>root</strong>账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su root</span><br></pre></td></tr></table></figure><p>创建repo仓库目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /www/repo</span><br></pre></td></tr></table></figure><p>赋予权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R git:git /www/repo</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /www/repo</span><br></pre></td></tr></table></figure><p>建立网站根目录<strong>hexo</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /www/hexo</span><br></pre></td></tr></table></figure><p>赋予权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git /www/hexo</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /www/hexo</span><br></pre></td></tr></table></figure><p>新建空白的git仓库并初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /www/repo</span><br><span class="line">git init --bare hexo.git</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/84cc23976bd54622910092704b6ab5c5.png"></p><p>10.创建 Git 钩子，用于自动部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /www/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>同上，进入编辑模式，粘贴下面代码并保存退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/www/hexo --git-dir=/www/repo/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>修改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git /www/repo/hexo.git/hooks/post-receive</span><br><span class="line"><span class="built_in">chmod</span> +x /www/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>仓库建立完毕</p><h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><blockquote><p>Nginx是一款轻量级的Web 服务器&#x2F;反向代理服务器及电子邮件（IMAP&#x2F;POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好<br>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP&#x2F;POP3&#x2F;SMTP服务，其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>中途输入 y，表示继续安装（和上面一样）等待安装完成，会显示登陆网址和初始密码</p><p><img src="https://img-blog.csdnimg.cn/3a5a73b6f96145de8922cdc263d44fce.png"></p><p>注意红框位置，如果两个网址都无法访问，请在服务器安全组 &#x2F; 防火墙中放行8888端口</p><p><img src="https://img-blog.csdnimg.cn/a524dc5b1160414d9896be2f3460759a.png"></p><p>输入初始账户名、密码登陆</p><p><img src="https://img-blog.csdnimg.cn/6d65cd9a9d0f4be8b2ec098d8023d955.png"></p><p>进入后，搜索<strong>Nginx</strong>点击安装（我这里已经装过了）</p><p><img src="https://img-blog.csdnimg.cn/16253457c6a64c19ae6efeba3fb90f6b.png"></p><p>网站–&gt; 添加站点，域名形式<strong>xxx.com 无需任何前缀</strong></p><p><img src="https://img-blog.csdnimg.cn/c2983bc486a441289d401356afada3e8.png"></p><p>设置–&gt; 配置文件，修改红框内容</p><p><img src="https://img-blog.csdnimg.cn/17cf31a29db54e7eb96f653d790bfca7.png"></p><p>设置–&gt; 网站目录，修改为 &#x3D;&#x3D;&#x2F;www&#x2F;hexo&#x3D;&#x3D; 并保存</p><p><img src="https://img-blog.csdnimg.cn/f31bb768ecc446c2ae819f28fe2c17cb.png"></p><p>服务器终端，重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service bt restart</span><br></pre></td></tr></table></figure><p>至此，服务器端配置完成</p><h4 id="Hexo配置修改"><a href="#Hexo配置修改" class="headerlink" title="Hexo配置修改"></a>Hexo配置修改</h4><p>进入本地博客根目录，修改 <strong>_config.yml</strong> 文件部署位置</p><p>GitHub Pages 设定</p><p><img src="https://img-blog.csdnimg.cn/b1b9f368e30e4d68b12a59daf70840ce.png"></p><p>服务器设置</p><p><img src="https://img-blog.csdnimg.cn/5a5d15e6528f436ab6e333016cf1bbca.png"></p><p>源码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy: </span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@你的域名:/www/repo/hexo.git</span><br><span class="line">  branch: master <span class="comment"># 注意此处分支设定,需在仓库中选择默认的分支</span></span><br></pre></td></tr></table></figure><p>打开<strong>Putty</strong>工具，连接服务器赋予权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git /www/repo/</span><br><span class="line"><span class="built_in">chown</span> -R git:git /www/hexo/</span><br></pre></td></tr></table></figure><p>本地根目录下打开 git bash here执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除缓存</span><br><span class="line">hexo d -g //快速部署</span><br></pre></td></tr></table></figure><p>出现图示内容表示部署成功，等到备案完成后就可以通过域名访问了</p><p><img src="https://img-blog.csdnimg.cn/c2eb2e1df4844367b6087158a38a9429.png"></p><h2 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h2><p>杰森的网站也是最近才备案下来，所以如果你等不及，就另寻他路吧，在国内，咱可不敢造次啊啊啊<br>你会经历以下几个阶段</p><p><img src="https://img-blog.csdnimg.cn/963c621501214b2f90812cac44557cd2.png"></p><p>购买服务器后，绑定域名后系统会提示你没有备案，根据提示完成即可</p><p><img src="https://img-blog.csdnimg.cn/4af64685da5349c4b53b6b4402669d2b.png"></p><h3 id="ICP"><a href="#ICP" class="headerlink" title="ICP"></a>ICP</h3><blockquote><p>英文全称：Internet Content Provider，中文全称：网络内容提供商<br>ICP可以理解为向广大用户提供互联网信息业务和增值业务的电信运营商，是经国家主管部门批准的正式运营企业或部门</p></blockquote><h3 id="联网备案"><a href="#联网备案" class="headerlink" title="联网备案"></a>联网备案</h3><p><span class="exturl" data-url="aHR0cDovL3d3dy5iZWlhbi5nb3YuY24v">进入官网<i class="fa fa-external-link-alt"></i></span> 在阿里云完成<strong>ICP</strong>备案后，系统也会提示你操作</p><p>部署完成后，选择<strong>联网备案登陆</strong></p><p><img src="https://img-blog.csdnimg.cn/0590308ca7d644d7b48ceec2b2ea6951.png"></p><p>提交网站所有人信息和一些基本材料等待审核通过，最后在网页底部插入代码即可，效果如图</p><p><img src="https://img-blog.csdnimg.cn/e977ba93e0b246739ccb3ff83b602e06.png"></p><hr><p>到这里，你的个人网站就成功上线了，也部署到了服务器。内容会根据大家的反馈情况持续更新！！！</p><p>最后，放上杰森的小破站地址，欢迎到访 haha</p><div class="link-grid"><div class="link-grid-container"><object class="link-grid-image" data="/images/head_portrait.png"></object><p>Jason's Blog</p><p>A blacksmith must be strong</p><a href="https://coder-jason.cn"></a></div></div><p><img src="https://img-blog.csdnimg.cn/6ee456fd0b11484a9b4d55f7d073bca7.png"></p><hr><p>参考资料</p><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL2RvY3Mvc2hhcmUvODNhYmIxMTQtNDk0Ny00YWFhLWIzOGUtMWFjOWFjZDRiZGFlI3RqcUtM">技术小白如何建站<i class="fa fa-external-link-alt"></i></span> </p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNjIyMzk1">Picgo+Gitee搭建个人免费图床<i class="fa fa-external-link-alt"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmFpcnlseWwvcC8xNTA1OTQzNy5odG1s">Git 错误：OpenSSL SSL_read: Connection was reset, errno 10054<i class="fa fa-external-link-alt"></i></span></p></li></ul>]]></content>
    
    
    <summary type="html">谈谈本站的建设过程，主要开发环境：Hexo、git、Nodejs、Hexo、弹性 ECS、JavaScript、GitHub Pages</summary>
    
    
    
    <category term="网站建设" scheme="https://pdpeng.github.io/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="Hexo" scheme="https://pdpeng.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>用代码绘制圣诞树</title>
    <link href="https://pdpeng.github.io/2021/12/14/code-draw-christmas-tree/"/>
    <id>https://pdpeng.github.io/2021/12/14/code-draw-christmas-tree/</id>
    <published>2021-12-14T08:54:15.000Z</published>
    <updated>2022-02-04T03:15:17.232Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>马上圣诞节了，祝大家圣诞快乐，快来看看程序员的圣诞节都做了什么</p></blockquote><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://img-blog.csdnimg.cn/4805d7a5daf0487192f813c5dab13b5e.gif"></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Author: coder-jason</span></span><br><span class="line"><span class="string">Date: 2021-12-14 15:49:17</span></span><br><span class="line"><span class="string">LastEditTime: 2021-12-14 16:21:45</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random </span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">n = <span class="number">94.0</span> <span class="comment"># main line height</span></span><br><span class="line"></span><br><span class="line">speed(<span class="string">&quot;normal&quot;</span>) <span class="comment"># setting speeds: fast slow fastest slowest</span></span><br><span class="line">setup(<span class="number">700</span>,<span class="number">650</span>)  <span class="comment"># setting window size</span></span><br><span class="line">screensize(bg=<span class="string">&#x27;seashell&#x27;</span>)</span><br><span class="line">left(<span class="number">90</span>)</span><br><span class="line">forward(<span class="number">3</span> * n)</span><br><span class="line">color(<span class="string">&quot;orange&quot;</span>, <span class="string">&quot;yellow&quot;</span>)</span><br><span class="line">begin_fill()</span><br><span class="line">left(<span class="number">126</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    forward(n / <span class="number">5</span>)</span><br><span class="line">    right(<span class="number">144</span>)</span><br><span class="line">    forward(n / <span class="number">5</span>)</span><br><span class="line">    left(<span class="number">72</span>)</span><br><span class="line">end_fill()</span><br><span class="line">right(<span class="number">126</span>)</span><br><span class="line"></span><br><span class="line">color(<span class="string">&quot;dark green&quot;</span>)</span><br><span class="line">backward(n * <span class="number">4.8</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tree</span>(<span class="params">d, s</span>):</span><br><span class="line">    <span class="keyword">if</span> d &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    forward(s)</span><br><span class="line">    tree(d - <span class="number">1</span>, s * <span class="number">.8</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    tree(d - <span class="number">3</span>, s * <span class="number">.5</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    tree(d - <span class="number">3</span>, s * <span class="number">.5</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    backward(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tree(<span class="number">15</span>, n)</span><br><span class="line">backward(n / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    a = <span class="number">200</span> - <span class="number">400</span> * random.random()</span><br><span class="line">    b = <span class="number">10</span> - <span class="number">20</span> * random.random()</span><br><span class="line">    up()</span><br><span class="line">    forward(b)</span><br><span class="line">    left(<span class="number">90</span>)</span><br><span class="line">    forward(a)</span><br><span class="line">    down()</span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">0</span>, <span class="number">1</span>) == <span class="number">0</span>:</span><br><span class="line">        color(<span class="string">&#x27;tomato&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        color(<span class="string">&#x27;wheat&#x27;</span>)</span><br><span class="line">    circle(<span class="number">2</span>)</span><br><span class="line">    up()</span><br><span class="line">    backward(a)</span><br><span class="line">    right(<span class="number">90</span>)</span><br><span class="line">    backward(b)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">60</span>)</span><br></pre></td></tr></table></figure><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h2><p><img src="https://img-blog.csdnimg.cn/9c40fb51e6f64a669fc74f1e1b181405.gif"></p><h2 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h2><h3 id="Start-类"><a href="#Start-类" class="headerlink" title="Start 类"></a>Start 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: coder-jason</span></span><br><span class="line"><span class="comment"> * @Date: 2021-12-14 15:26:49</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2021-12-14 16:43:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.christmasTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Start</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Frame</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Frame-类"><a href="#Frame-类" class="headerlink" title="Frame 类"></a>Frame 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: coder-jason</span></span><br><span class="line"><span class="comment"> * @Date: 2021-12-14 15:26:49</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2021-12-14 16:43:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.christmasTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Frame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    Panel p;</span><br><span class="line"></span><br><span class="line">    Frame() &#123;</span><br><span class="line">        p = <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        add(p);</span><br><span class="line">        setBounds(<span class="number">200</span>, <span class="number">200</span>, <span class="number">650</span>, <span class="number">500</span>); <span class="comment">//设置窗口尺寸和位置 x,y坐标 width,height窗口宽高</span></span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        validate();</span><br><span class="line">        setDefaultCloseOperation(Frame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Panel-类"><a href="#Panel-类" class="headerlink" title="Panel 类"></a>Panel 类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.christmasTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.applet.Applet;</span><br><span class="line"><span class="keyword">import</span> java.applet.AudioClip;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Panel</span> <span class="keyword">extends</span> <span class="title class_">JPanel</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    JButton onOff;</span><br><span class="line">    Timer time;</span><br><span class="line">    <span class="type">boolean</span> flag;</span><br><span class="line">    <span class="type">boolean</span> color;</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;your music location&quot;</span>);</span><br><span class="line">    <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">URI</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">AudioClip</span> <span class="variable">clip</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    Panel() &#123;</span><br><span class="line">        setLayout(<span class="literal">null</span>);</span><br><span class="line">        <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;off.png&quot;</span>);</span><br><span class="line">        icon.setImage(icon.getImage().getScaledInstance(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>));</span><br><span class="line">        onOff = <span class="keyword">new</span> <span class="title class_">JButton</span>();</span><br><span class="line">        onOff.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        onOff.setIcon(icon);</span><br><span class="line">        onOff.setBorder(<span class="literal">null</span>);</span><br><span class="line">        onOff.setContentAreaFilled(<span class="literal">false</span>);</span><br><span class="line">        onOff.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">        add(onOff);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        color = <span class="literal">true</span>;</span><br><span class="line">        time = <span class="keyword">new</span> <span class="title class_">Timer</span>(<span class="number">300</span>, <span class="built_in">this</span>);</span><br><span class="line">        time.stop();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            uri = file.toURI();</span><br><span class="line">            url = uri.toURL();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e1) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        clip = Applet.newAudioClip(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintComponent</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        x = <span class="number">380</span>;</span><br><span class="line">        y = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            <span class="type">ImageIcon</span> <span class="variable">image1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;star1.png&quot;</span>);</span><br><span class="line">            g.drawImage(image1.getImage(), x - <span class="number">3</span>, y - <span class="number">25</span>, <span class="number">28</span>, <span class="number">26</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ImageIcon</span> <span class="variable">image1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;star2.png&quot;</span>);</span><br><span class="line">            g.drawImage(image1.getImage(), x - <span class="number">3</span>, y - <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Color</span> <span class="variable">red</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="type">Color</span> <span class="variable">yellow</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">241</span>, <span class="number">0</span>);</span><br><span class="line">        drawTree(<span class="number">1</span>, <span class="number">4</span>, g);</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">6</span>, yellow, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">8</span>, red, g);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">6</span>, red, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">8</span>, yellow, g);</span><br><span class="line">        &#125;</span><br><span class="line">        x = <span class="number">380</span> - <span class="number">2</span> * <span class="number">22</span>;</span><br><span class="line">        drawTree(<span class="number">3</span>, <span class="number">6</span>, g);</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">10</span>, yellow, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">12</span>, red, g);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">10</span>, red, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">12</span>, yellow, g);</span><br><span class="line">        &#125;</span><br><span class="line">        x = <span class="number">380</span> - <span class="number">4</span> * <span class="number">22</span>;</span><br><span class="line">        drawTree(<span class="number">5</span>, <span class="number">8</span>, g);</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">14</span>, yellow, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">16</span>, red, g);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">14</span>, red, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">16</span>, yellow, g);</span><br><span class="line">        &#125;</span><br><span class="line">        x = <span class="number">380</span> - <span class="number">1</span> * <span class="number">22</span>;</span><br><span class="line">        drwaRoot(g);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">drawTree</span><span class="params">(<span class="type">int</span> from, <span class="type">int</span> to, Graphics g)</span> &#123;</span><br><span class="line">        <span class="type">Color</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">9</span>, <span class="number">124</span>, <span class="number">37</span>);</span><br><span class="line">        g.setColor(c);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> from; i &lt;= to; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; (i * <span class="number">2</span> - <span class="number">1</span>); j++) &#123;</span><br><span class="line">                g.fillRect(x, y, <span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">                x += <span class="number">22</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            x = <span class="number">380</span> - i * <span class="number">22</span>;</span><br><span class="line">            y += <span class="number">22</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">drawDecoration</span><span class="params">(<span class="type">int</span> tx, <span class="type">int</span> ty, <span class="type">int</span> num, Color c, Graphics g)</span> &#123;</span><br><span class="line">        g.setColor(c);</span><br><span class="line">        g.fillRoundRect(tx, ty, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>);</span><br><span class="line">        g.fillRoundRect(tx + num * <span class="number">22</span>, ty, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">drwaRoot</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        <span class="type">Color</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">131</span>, <span class="number">78</span>, <span class="number">0</span>);</span><br><span class="line">        g.setColor(c);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                g.fillRect(x, y, <span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">                x += <span class="number">22</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            x = <span class="number">380</span> - <span class="number">1</span> * <span class="number">22</span>;</span><br><span class="line">            y += <span class="number">22</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.getSource() == onOff) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;on.png&quot;</span>);</span><br><span class="line">                icon.setImage(icon.getImage().getScaledInstance(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>));</span><br><span class="line">                onOff.setIcon(icon);</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                clip.loop();</span><br><span class="line">                time.restart();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;off.png&quot;</span>);</span><br><span class="line">                icon.setImage(icon.getImage().getScaledInstance(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>));</span><br><span class="line">                onOff.setIcon(icon);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                time.stop();</span><br><span class="line">                clip.stop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.getSource() == time) &#123;</span><br><span class="line">            repaint();</span><br><span class="line">            color = !color;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/5b03a8744c8c42f69d1bacf73fbf7cc2.png"></p>]]></content>
    
    
    <summary type="html">圣诞树源码，两种生成方式，分别用Java和Python实现。按钮及音频素材来源于网络，自行下载即可</summary>
    
    
    
    <category term="程序设计" scheme="https://pdpeng.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="编程语言" scheme="https://pdpeng.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Idea Ultimate 连接 MySQL 数据库</title>
    <link href="https://pdpeng.github.io/2021/12/08/idea-ultimate-connect-mysql/"/>
    <id>https://pdpeng.github.io/2021/12/08/idea-ultimate-connect-mysql/</id>
    <published>2021-12-08T14:21:35.000Z</published>
    <updated>2022-02-04T03:15:17.280Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>开始链接前，请确保本机上安装的 idea 是 Ultimate 专业版，<span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS96aC1jbi9pZGVhL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=">点我下载<i class="fa fa-external-link-alt"></i></span>，JetBrains 旗下 Community 社区版本并未集成数据库开发工具，这一点我们从官网两个版本的下载介绍上也能看到</p><p><img src="https://img-blog.csdnimg.cn/90999657caf84e5a980dbc08d4dd6ec7.png"></p><h1 id="配置-MySQL"><a href="#配置-MySQL" class="headerlink" title="配置 MySQL"></a>配置 MySQL</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>一般来说，安装V5左右的版本就足够，版本号越大占用后台资源会更多，我们根据实际开发需求，选择合适的就好，这里演示 5.7 版本的安装过程（其他版本基本一致，按钮位置可能有所不同）</p><p>进入<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv">官方网站<i class="fa fa-external-link-alt"></i></span>后，点击 Looking for previous GA versions 切换到早期版本</p><p><img src="https://img-blog.csdnimg.cn/e108c33c8acf4af1acb35569bfb5ff66.png"></p><p>在线安装就看你的网速质量了，第二个是完整安装文件，直接下载就好（如果需要验证，登陆 Oracle 账号校验即可）</p><p><img src="https://img-blog.csdnimg.cn/e9f3349c85744e848847c253d3abe751.png"></p><p>详细的安装教程<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xODg0MTY2MDc=">请看这里<i class="fa fa-external-link-alt"></i></span>，这里主要讲下配置过程</p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><div class="note info"><p>右键【此电脑】-&gt;【属性】-&gt;【高级系统设置】-&gt;【环境变量】</p></div><p>添加<mark class="label ">MYSQL_HOME</mark>变量，变量值为电脑 MySQL 的安装位置</p><p><img src="https://img-blog.csdnimg.cn/1f70e66fd28e4e51b486021b1190eef7.png"></p><p>添加 Path 系统变量</p><p><img src="https://img-blog.csdnimg.cn/e4bea0bc3dde48a3a0d07b07c5526a1e.png"></p><h2 id="检查配置"><a href="#检查配置" class="headerlink" title="检查配置"></a>检查配置</h2><a class="btn" href="#">Windows</a>+<a class="btn" href="#">R</a> 打开命令行，键入 <mark class="label ">cmd</mark> 打开命令行，输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my sql -uroot -p //root表示用户名，-p表示输入用户密码</span><br></pre></td></tr></table></figure><p>输入安装 MySQL 时的账户密码，出现图示信息则配置正确</p><p><img src="https://img-blog.csdnimg.cn/f09c0f1c0da44c2592c9759dbba45fb5.png"></p><h1 id="MysQL服务状态"><a href="#MysQL服务状态" class="headerlink" title="MysQL服务状态"></a>MysQL服务状态</h1><p>以<mark class="label ">管理员身份</mark>打开命令行，分别输入以下命令</p><h2 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql    //开启服务</span><br></pre></td></tr></table></figure><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql  //关闭服务</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/4e33172853414cbf824ebd9e67bdc08f.png"></p><h1 id="在idea-Ultimate中建立连接"><a href="#在idea-Ultimate中建立连接" class="headerlink" title="在idea Ultimate中建立连接"></a>在idea Ultimate中建立连接</h1><h2 id="引入-Drivers-驱动"><a href="#引入-Drivers-驱动" class="headerlink" title="引入 Drivers 驱动"></a>引入 Drivers 驱动</h2><p>建立项目后，添加 MysQL数据源</p><p><img src="https://img-blog.csdnimg.cn/0a2d856ba370412b99c25dc771a7c2ab.png"></p><p>找到驱动路径</p><p><img src="https://img-blog.csdnimg.cn/2ff951992f364082a794f4e611b1b0eb.png"></p><p>引入外部库中</p><p><img src="https://img-blog.csdnimg.cn/f99953fac0c64d318181847251dfcaa1.png"></p><p>成功后，项目结构中也会显示</p><p><img src="https://img-blog.csdnimg.cn/9959bcf45fb04a4f9802514530150cad.png"></p><h2 id="添加表"><a href="#添加表" class="headerlink" title="添加表"></a>添加表</h2><h3 id="创建-schema-架构"><a href="#创建-schema-架构" class="headerlink" title="创建 schema 架构"></a>创建 schema 架构</h3><p><img src="https://img-blog.csdnimg.cn/18cace6a270741588183484b882d4735.png"></p><p><img src="https://img-blog.csdnimg.cn/1f566f2e3e464ae6bf95d504a60e3885.png"></p><h3 id="创建-Table-表"><a href="#创建-Table-表" class="headerlink" title="创建 Table 表"></a>创建 Table 表</h3><p><img src="https://img-blog.csdnimg.cn/234df321fdec4b4fa898d805856ce3e6.png"></p><p>添加属性</p><p><img src="https://img-blog.csdnimg.cn/7ebd2bdaf4f348a589b92fc8ad61b355.png"></p><h2 id="写入数据信息"><a href="#写入数据信息" class="headerlink" title="写入数据信息"></a>写入数据信息</h2><p>方式1：可视化，图形界面操作</p><p><img src="https://img-blog.csdnimg.cn/f8244f091ec945bdbdfa0aaea1243897.png"></p><p>方式2：sql 语句添加</p><p><img src="https://img-blog.csdnimg.cn/a288d0e71dc04bba8e40805ae113e258.png"></p><p>执行结果</p><p><img src="https://img-blog.csdnimg.cn/bab61d00a26a447abc8e48f99d6094c3.png"></p><h1 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h1><p>请根据注释位置，修改配置信息后再 Execute 执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="comment">// MySQL 8.0 以下版本 - JDBC 驱动名称及数据库 URL</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JDBC_DRIVER</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DB_URL</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/your schema&quot;</span>; <span class="comment">// ‘/’后写入你的架构名称</span></span><br><span class="line">    <span class="comment">// 数据库的用户名与密码</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">USER</span> <span class="operator">=</span> <span class="string">&quot;your sql account&quot;</span>; <span class="comment">//你的数据库“用户名”</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PASS</span> <span class="operator">=</span> <span class="string">&quot;your sql password&quot;</span>;<span class="comment">//你的数据库密码</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 注册 JDBC 驱动</span></span><br><span class="line">            Class.forName(JDBC_DRIVER);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 打开链接</span></span><br><span class="line">            System.out.println(<span class="string">&quot;数据库建立链接中...&quot;</span>);</span><br><span class="line">            conn = DriverManager.getConnection(DB_URL,USER,PASS);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行查询</span></span><br><span class="line">            System.out.println(<span class="string">&quot;正在实例化Statement对象...&quot;</span>);</span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            String sql;</span><br><span class="line">            sql = <span class="string">&quot;SELECT * FROM information&quot;</span>;</span><br><span class="line">            <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 展开结果集数据库</span></span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                <span class="comment">// 通过字段检索</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;age&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 输出数据</span></span><br><span class="line">                System.out.print(<span class="string">&quot;ID: &quot;</span> + id);</span><br><span class="line">                System.out.print(<span class="string">&quot;, 姓名: &quot;</span> + name);</span><br><span class="line">                System.out.print(<span class="string">&quot;, 年龄: &quot;</span> + age);</span><br><span class="line">                System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 操作完成后关闭</span></span><br><span class="line">            rs.close();</span><br><span class="line">            stmt.close();</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException se)&#123;</span><br><span class="line">            <span class="comment">// 处理 JDBC 错误</span></span><br><span class="line">            se.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            <span class="comment">// 处理 Class.forName 错误</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">// 释放资源</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(stmt!=<span class="literal">null</span>) stmt.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException se2)&#123;</span><br><span class="line">            &#125;<span class="comment">// 不进行任何操作</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(conn!=<span class="literal">null</span>) conn.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException se)&#123;</span><br><span class="line">                se.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;数据库链接释放!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类执行结果</p><p><img src="https://img-blog.csdnimg.cn/816f8113ae29458d95c980ee532dec57.png"></p><hr><p>参考资料：</p><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xODg0MTY2MDc=">MySQL的详细安装教程<i class="fa fa-external-link-alt"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGFuZGFseS9wLzExNzM4Nzg5Lmh0bWwjOn46dGV4dD1NeXNxbCVFNSU5MCVBRiVFNSU4QSVBOCVFNSU5MCU4RSVFNSU4MSU5QyVFNiVBRCVBMiVFNyU5QSU4NCVFOCVBNyVBMyVFNSU4NiVCMyVFNiU5NiVCOSVFNiVCMyU5NSUyMCVFNSVBRSU4OSVFOCVBMyU4NW15c3FsJUU1JTkwJThFJUVGJUJDJThDJUU2JTlDJThEJUU1JThBJUExJUU2JTk3JUEwJUU2JUIzJTk1JUU2JUFEJUEzJUU1JUI4JUI4JUU1JTkwJUFGJUU1JThBJUE4JUVGJUJDJThDJUU2JThBJUE1JUU5JTk0JTk5JUU1JUE2JTgyJUU0JUI4JThCJUVGJUJDJTlBJTIwJUU4JUE3JUEzJUU2JUIzJTk1JUU2JTk2JUI5JUU2JUIzJTk1JUVGJUJDJTlBJTIwMSUyMCVFNCVCQiVBNSVFNyVBRSVBMSVFNyU5MCU4NiVFNSU5MSU5OCVFOCVCQSVBQiVFNCVCQiVCRCVFOCVCRiU5MCVFOCVBMSU4QyVFNSU5MSVCRCVFNCVCQiVBNCVFNiU4RiU5MCVFNyVBNCVCQSVFNyVBQyVBNiUyMDIlMjAlRTclOTQlQTglRTUlOTElQkQlRTQlQkIlQTQlRTglQkYlOUIlRTglQTElOENteXNxbCVFNSVBRSU4OSVFOCVBMyU4NSVFNyU5QiVBRSVFNSVCRCU5NSVFNyU5QSU4NGJpbiVFNyU5QiVBRSVFNSVCRCU5NSVFRiVCQyU5QSUyMGNkLCVFOCVCRiU5MCVFOCVBMSU4QyVFNSU4OCU5RCVFNSVBNyU4QiVFNSU4QyU5Nm15c3FsJUU2JTlDJThEJUU1JThBJUExJUU1JTkxJUJEJUU0JUJCJUE0JUVGJUJDJTlBJTIwMSUyMG15c3FsZCUyMC0taW5pdGlhbGl6ZS1pbnNlY3VyZSUyMC0tdXNlciUzRG15c3FsJTIwNiUyMCVFOCVCRiU5MCVFOCVBMSU4QyVFNiU5QiVCNCVFNiU5NiVCMCVFOSU4NSU4RCVFNyVCRCVBRSVFNiU5NiU4NyVFNCVCQiVCNiVFNSU5MSVCRCVFNCVCQiVBNCVFRiVCQyU5QSUyMDE=">Mysql启动后停止的解决方法<i class="fa fa-external-link-alt"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoX251bS9hcnRpY2xlL2RldGFpbHMvNzE0MDI4MDE=">MySQL修改root密码的4种方法<i class="fa fa-external-link-alt"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9iYnMuY3Nkbi5uZXQvdG9waWNzLzM3MDA4OTY2OQ==">姓名 性别 密码等在mysql中都保存为什么类型<i class="fa fa-external-link-alt"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2FydGljbGUvNDUyMzQwNy5odG1s">通过IntelliJ IDEA软件实现Java项目连接MySQL的详细过程<i class="fa fa-external-link-alt"></i></span></p></li></ul>]]></content>
    
    
    <summary type="html">关于 idea 开发工具连接 MySQL 数据库的教程</summary>
    
    
    
    <category term="程序设计" scheme="https://pdpeng.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="MySQL" scheme="https://pdpeng.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>命令行推送代码</title>
    <link href="https://pdpeng.github.io/2021/09/18/cmd-push-code/"/>
    <id>https://pdpeng.github.io/2021/09/18/cmd-push-code/</id>
    <published>2021-09-18T12:05:33.000Z</published>
    <updated>2022-02-04T03:15:17.170Z</updated>
    
    <content type="html"><![CDATA[<p>配置环境完成后，使用下面的命令快速完成代码推送</p><h1 id="git命令推送步骤"><a href="#git命令推送步骤" class="headerlink" title="git命令推送步骤"></a>git命令推送步骤</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git init//初始化本地仓库</span><br><span class="line"></span><br><span class="line">git remote add origin URL//添加远程</span><br><span class="line"></span><br><span class="line">git add .//添加所有文件到暂存区,add后可跟单个文件</span><br><span class="line"></span><br><span class="line">git commit -m<span class="string">&quot;注释&quot;</span>    //提交,提交备注</span><br><span class="line"></span><br><span class="line">git push  --set-upstream origin master    //第一次需配置分支</span><br><span class="line"></span><br><span class="line">git push    //推送到远程</span><br></pre></td></tr></table></figure><h1 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f --set-upstream origin master</span><br></pre></td></tr></table></figure><p>如果是协同开发，为了避免后期出现问题，还是不要用的好<br>！！！出问题别找我，跑路喽，哈哈！！！</p>]]></content>
    
    
    <summary type="html">使用命令行推送代码，基本命令要熟悉，莫忘</summary>
    
    
    
    <category term="版本控制" scheme="https://pdpeng.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="git" scheme="https://pdpeng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git push 忽略 idea 文件</title>
    <link href="https://pdpeng.github.io/2021/09/18/gitpush-ignore-idea-file/"/>
    <id>https://pdpeng.github.io/2021/09/18/gitpush-ignore-idea-file/</id>
    <published>2021-09-18T11:56:03.000Z</published>
    <updated>2022-02-04T03:15:17.253Z</updated>
    
    <content type="html"><![CDATA[<p>我们在上传项目时，肯定会有一些不需要上传到远程仓库的文件，<strong>idea</strong>工具的一些生成文件便是如此，例如：</p><p><img src="https://img-blog.csdnimg.cn/944043c0cb5d44688571880c354a9fc8.png"></p><p>显然这些东西不需要 push 到远程，我们直接 KO 掉</p><p><img src="https://img-blog.csdnimg.cn/06bf8e9fe51c40e598c577d560233254.png"></p><p>加入<mark class="label ">.idea</mark>项后，push 的时候 git 就会忽略它了，而且项目中也没有了 idea 文件，很简洁嘛，嘿嘿</p>]]></content>
    
    
    <summary type="html">配置开发工具在使用 Git 向远程推送代码时自动忽略 idea 文件</summary>
    
    
    
    <category term="版本控制" scheme="https://pdpeng.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="git" scheme="https://pdpeng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>私有图床搭建</title>
    <link href="https://pdpeng.github.io/2021/09/05/setup-image-storage/"/>
    <id>https://pdpeng.github.io/2021/09/05/setup-image-storage/</id>
    <published>2021-09-05T13:42:15.000Z</published>
    <updated>2022-02-04T03:23:13.409Z</updated>
    
    <content type="html"><![CDATA[<p>文章开始前，先给大家科普下 Typora 和 SM.MS 是什么，当然，对于经常写博客的小伙伴并不陌生</p><h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><image src="https://img-blog.csdnimg.cn/fb30d63fee9f4d4c8c0cd55881e60edf.gif" width="80%"><p><span class="exturl" data-url="aHR0cHM6Ly90eXBvcmEuaW8vIw==">Typora<i class="fa fa-external-link-alt"></i></span> 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>，拥有 OS X、Windows、Linux 三大平台版本，且完全免费</p><p>它的功能巨多，进入 “偏好设置” 选项卡中，你就会知道这款编辑器设计的有多么地人性化，多么地细节，简直是众多 Markdown 编辑器里的领头羊，像打字机模式、专注模式、源代码模式、实时预览、文件&#x2F;大纲侧边栏等一系列功能应有尽有</p><p>官方特性介绍：Typora为您提供了一个无缝的体验，作为读者和作者。它删除了预览窗口，模式切换器，markdown源代码的语法符号，和所有其他不必要的干扰。相反 ,它提供了一个真实的实时预览功能，以帮助您集中精力于内容本身</p><p>对于经常写博客的小伙伴，特别是在多平台分享的朋友，拥有这样一个 “利器” ，搭配上程序猿们忠爱的 GitHub 主题，那感觉简直不要太爽</p><h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><p>举个栗子，这篇博客里你所看到的图片，它们存放的位置是哪里呢？图片在我电脑的某个磁盘里，你是怎么看到的呢？显然，你看到的是 “网上” 的图片，图床就是储存图片的服务器，我们发朋友圈、空间、微博里的图片都上传到了各个平台自家的图床，供天涯海角的小伙伴查看</p><p>图床有国内和国外之分：国外的图床由于网络、距离等因素访问速度较慢，严重影响图片显示速度，国内也分为单线空间、多线空间和 <span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DRE4vNDIwOTUx">CDN加速<i class="fa fa-external-link-alt"></i></span> 三种</p><h1 id="Typora配置图床"><a href="#Typora配置图床" class="headerlink" title="Typora配置图床"></a>Typora配置图床</h1><p>打开 Typora 中的 “偏好设置”，下载 PicGo（一个用于快速上传图片并获取图片 URL 链接的工具）</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ceeb8d6c3df2318db880f34b6bb798c9.png"></p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz">GitHub地址<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMV9rNlFmZ19helBYUFNobGlDZ0Y3YWc=">网盘地址<i class="fa fa-external-link-alt"></i></span>，提取码：peng</p><p>设定图片插入规则</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a18233ac2882580a6a36c85b549271a6.png"></p><p>软件主界面</p><p><img src="https://img-blog.csdnimg.cn/6a4c1678e8a142a7bd7eb846a90fcd52.png"></p><p>图床这个东西，还是稳定的好，选择一些老牌子，服务运行久的较为可靠，不然没几天停服可是</p><p><img src="https://img-blog.csdnimg.cn/img_convert/fda8da72cd8dbc977dd4a32535de1784.png"></p><h1 id="SM-MS图床"><a href="#SM-MS图床" class="headerlink" title="SM.MS图床"></a>SM.MS图床</h1><p>打开 <span class="exturl" data-url="aHR0cHM6Ly9zbS5tcy8=">SM.MS<i class="fa fa-external-link-alt"></i></span> ，获取Token</p><div class="note info"><p>Token，就是汉语 “令牌” 的意思，是服务端生成的一串字符串，作为客户端进行请求的一个令牌，当第一次登录后，服务器生成一个 Token 便将此 Token 返回到客户端，日后客户端只需要附带此 Token 前来请求数据即可，无需再次带上用户名和密码</p></div><p><img src="https://img-blog.csdnimg.cn/img_convert/7054f4088da597f4c0fb3a49ddb496c9.png"></p><p>进入 <span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9hcGkvMTAxNTQ=">API<i class="fa fa-external-link-alt"></i></span> Token</p><p><img src="https://img-blog.csdnimg.cn/img_convert/1bd6a4fc11be2d356439d31a46b6a5a2.png"></p><p>打开图床设置，粘贴 SM.MS 图床的 Token</p><p><img src="https://img-blog.csdnimg.cn/c6fc2bc7f73a4a2ebbf9cd5bede70539.png"></p><p>好了，现在就可以使用 Typora 这款神仙级 Markdown 编辑器记笔记、写博客了，再也没有发布文章需要一张张重新上传图片的烦恼了</p><h1 id="GitHub图床"><a href="#GitHub图床" class="headerlink" title="GitHub图床"></a>GitHub图床</h1><p>有时候我们总会在想这些图床的服务器到底靠不靠谱，能不能长时间维护，万一哪天崩了，作为使用者的我们岂不是凉凉。这里还有一个方法，那就是用代码托管仓库来建立图床，国内的<strong>Gitee</strong>在图片上传速度上可能更具优势，但是<strong>PicGo</strong>工具对于码云的配置更为繁琐，需要安装插件，比较简单的还是直接上手<strong>GitHub</strong>吧</p><p>新建仓库</p><p><img src="https://img-blog.csdnimg.cn/677b881224ca42b4bba5f4954532d2d9.png"></p><p>获取<strong>Token</strong></p><p><img src="https://img-blog.csdnimg.cn/ec78dbafed114d488680ff8e31687ecd.png"></p><p>创建<strong>Token</strong></p><p><img src="https://img-blog.csdnimg.cn/ff8fb263fd1d40d3a364316e53beeda5.png"></p><p>创建成功后，注意：<strong>Token只显示一次，可以记录在文档中保存下来，忘记的话重新Get一个就好</strong></p><p>设置PicGo</p><p><img src="https://img-blog.csdnimg.cn/1fcfabbe56d4473b977c1a01597544c7.png"></p><p>测试上传</p><p><img src="https://img-blog.csdnimg.cn/119bbe3bbdb949c79c9b9a5adeb806c6.png"></p><p><img src="https://img-blog.csdnimg.cn/61aabbbaf47349e9a82c95138d32261d.png"></p><hr><p>参考资料</p><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9waWNnby5naXRodWIuaW8vUGljR28tRG9jL3poL2d1aWRlLyMlRTUlQkElOTQlRTclOTQlQTglRTYlQTYlODIlRTglQkYlQjA=">PicGo | PicGo<i class="fa fa-external-link-alt"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80MDQ5OQ==">图片就交给它了<i class="fa fa-external-link-alt"></i></span></p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjg3NTI0NS9hcnRpY2xlL2RldGFpbHMvMTA4NTU0OTI2">Typora + PicGo 图床配置以及 PicGo 上传失败的解决方案<i class="fa fa-external-link-alt"></i></span></p></li></ul>]]></content>
    
    
    <summary type="html">OSS太贵？流量超限？带你白嫖图床，永久免费</summary>
    
    
    
    <category term="经验分享" scheme="https://pdpeng.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="云存储" scheme="https://pdpeng.github.io/tags/%E4%BA%91%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>idea 更新项目后丢失本地文件</title>
    <link href="https://pdpeng.github.io/2021/09/01/idea-update-lose-file/"/>
    <id>https://pdpeng.github.io/2021/09/01/idea-update-lose-file/</id>
    <published>2021-09-01T14:47:39.000Z</published>
    <updated>2022-02-04T03:15:17.421Z</updated>
    
    <content type="html"><![CDATA[<p>早上刚刚提交的代码，怎么过了个周末就不见了，真是吓得我出了一身冷汗</p><p>还好找了回来，记录一下，免得以后再次遇到</p><p><img src="https://img-blog.csdnimg.cn/6cdb202220a947d8a70dabb2e198e6fa.png"></p><p>项目名称位置右键找到本地历史，选中修改的版本完成回退，还好没丢咦</p>]]></content>
    
    
    <summary type="html">解决 idea 更新后本地代码丢失问题</summary>
    
    
    
    <category term="版本控制" scheme="https://pdpeng.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="git" scheme="https://pdpeng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Git版本更新</title>
    <link href="https://pdpeng.github.io/2021/09/01/git-version-update/"/>
    <id>https://pdpeng.github.io/2021/09/01/git-version-update/</id>
    <published>2021-09-01T09:06:15.000Z</published>
    <updated>2022-02-04T03:15:17.122Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger"><p>操作平台：windows</p></div><p>打开 Git bash 工具</p><p><img src="https://img-blog.csdnimg.cn/6f65025ba2cc44bfaf293190aab936e3.jpg"></p><p>查看当前 git 版本信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git update //旧版</span><br><span class="line">git update-git-for-windows //新版</span><br></pre></td></tr></table></figure><p>等待完成即可</p><p><img src="https://img-blog.csdnimg.cn/86337057ac794a0f8cee3c545fba46f1.png"></p>]]></content>
    
    
    <summary type="html">Windows 系统更新 Git 版本</summary>
    
    
    
    <category term="版本控制" scheme="https://pdpeng.github.io/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="git" scheme="https://pdpeng.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>彻底卸载 Visual Studio 2019</title>
    <link href="https://pdpeng.github.io/2021/09/01/uninstall-visualstudio-entirly/"/>
    <id>https://pdpeng.github.io/2021/09/01/uninstall-visualstudio-entirly/</id>
    <published>2021-09-01T07:52:36.000Z</published>
    <updated>2022-02-04T03:23:13.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Visual-Studio"><a href="#Visual-Studio" class="headerlink" title="Visual Studio"></a>Visual Studio</h1><p><img src="https://img-blog.csdnimg.cn/cf0417ff7a21496c99b51a8ad4680c09.png"></p><p>不得不说，VS这款宇宙第一IDE的实力属实强劲。但也正是它如此强大的能力，才让我有些 “无法驾驭”，完全卸载便是其中之一。</p><p>既然你看到了这篇博客，说明你已经遇到了常规方法不能解决的问题，这里我们直接给出正常卸载无法进行的解决方案。</p><h1 id="卸载步骤"><a href="#卸载步骤" class="headerlink" title="卸载步骤"></a>卸载步骤</h1><ol><li>尝试运行 InstallCleanup.exe，程序路径：<code>%programfiles(x86)%\Microsoft Visual Studio\Installer\resources\app\layout\InstallCleanup.exe”</code>；</li><li>使用微软官方 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9WaXN1YWxTdHVkaW9Vbmluc3RhbGxlci9yZWxlYXNlcw==">清理工具<i class="fa fa-external-link-alt"></i></span> ，<a href="%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://pan.baidu.com/s/1bw2_zPk4Azhj3ZArjO5bNA">传送门</a> 密码：peng，管理员身份运行程序 Setup.ForcedUninstall.exe，输入 y 开始卸载；</li><li>尝试使用清理工具 <span class="exturl" data-url="aHR0cHM6Ly9nZWVrdW5pbnN0YWxsZXIuY29tL2Rvd25sb2Fk">Geek Uninstaller<i class="fa fa-external-link-alt"></i></span> 强制删除；</li><li>若VS安装在C盘，找到安装路径，删除路径下所有文件，其他盘符请忽略；</li><li>在C盘下搜索 visual studio，删除所有匹配文件（如果机器同时安装有VSC，请注意区分），可用 <span class="exturl" data-url="aHR0cHM6Ly9kcC1qc29uLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzExOTQ2NDI3Mg==">Everthing<i class="fa fa-external-link-alt"></i></span> 工具条件搜索；</li><li>C盘下继续搜索 visualstudio（无空格），删除匹配文件；</li><li>组合键 <a class="btn" href="#">Win</a> +<a class="btn" href="#">R</a> ，输入 regedit 打开注册表，删除文件夹<br><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio</code>；</li></ol><hr><p>工作还得继续啊！不聊了，马上重装继续找错去了，bai~~<br><image src="https://img-blog.csdnimg.cn/9e55aba6adbb46548cdca2768d1bfca0.jpg" width="50%"></p>]]></content>
    
    
    <summary type="html">你是否因为卸载 VS 不当而重装系统？你是否不能完全卸载 VS，本篇即为 VS 最强终结者，完全删除，不留痕迹（温和不刺激）</summary>
    
    
    
    <category term="程序设计" scheme="https://pdpeng.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="解决方案" scheme="https://pdpeng.github.io/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>Dos运行Java版HelloWorld</title>
    <link href="https://pdpeng.github.io/2021/08/30/dos-java-helloworld/"/>
    <id>https://pdpeng.github.io/2021/08/30/dos-java-helloworld/</id>
    <published>2021-08-30T14:41:22.000Z</published>
    <updated>2022-02-04T03:23:13.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>写给刚刚入坑 Java 的各位，无论你是计算机领域从业者，亦或是科班出身的专业人才。当然也包括我在内，Hello World 相信大家都不陌生，找了好久才找到我入行以来的第一段程序</p><image src="https://img-blog.csdnimg.cn/68bda6e17f79487e825d2e0d13c87438.png" width="50%"><p>有没有让你回想起当年用 VC ++ 6.0 码代码的日子呢？像 Python、C、C++、VB 等编程语言，它们有着不同的语法结构，实现方式各不相同，今天使用 Dos命令实现 Java 版 Hello World</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>在这之前请确保设备已安装好 <span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9qZGsvMTAxMQ==">JDK<i class="fa fa-external-link-alt"></i></span>，配置详情<span class="exturl" data-url="aHR0cHM6Ly9kcC1qc29uLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzExODg3NTk2Nw==">参阅这里<i class="fa fa-external-link-alt"></i></span><br>D盘下建立 HelloWorld.txt 文件，输入代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另存文件格式为 <mark class="label ">.java</mark></p><image src="https://img-blog.csdnimg.cn/6d9c585f1af44388af9572a89483836e.png" width="65%"><p>组合键 <a class="btn" href="#">Windows</a>+<a class="btn" href="#">R</a>，输入 cmd 打开命令提示工具 cmd.exe</p><image src="https://img-blog.csdnimg.cn/383d0fffa9ca4ff1aad0aacb4e15657a.png" width="40%"><p>依次输入命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d:                         <span class="comment">//切换到该目录下</span></span><br><span class="line">javac HelloWorld.java      <span class="comment">//javac:编译器,将程序转换成字节码</span></span><br><span class="line">java HelloWorld            <span class="comment">//java:运行编译后的java程序(文件后缀.class)</span></span><br></pre></td></tr></table></figure><h1 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h1><image src="https://img-blog.csdnimg.cn/419c6eb0be714bf88cf460f7b5f7f875.png" width="50%">]]></content>
    
    
    <summary type="html">使用 Dos 命令运行 Java 版本的 Hello World，Java 程序设计入门篇</summary>
    
    
    
    <category term="程序设计" scheme="https://pdpeng.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="dos" scheme="https://pdpeng.github.io/tags/dos/"/>
    
  </entry>
  
  <entry>
    <title>练习14-元素求和</title>
    <link href="https://pdpeng.github.io/2021/08/30/exercise14/"/>
    <id>https://pdpeng.github.io/2021/08/30/exercise14/</id>
    <published>2021-08-30T00:34:06.000Z</published>
    <updated>2022-02-04T03:15:17.280Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote><p>从键盘输入n (个数不限)个整形数字，放入数组PArray， 调用函数 int *Calc(int *PA,int Num); 计算数组中所有元素的和返回到 main 函数，输出计算结果。</p></blockquote><h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote><p>（1）定义数组、变量；<br>（2）接收设定值；<br>（3）分配内存空间；<br>（4）元素求和；<br>（5）输出；</p></blockquote><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="title function_">Calc</span><span class="params">(<span class="type">int</span> *PA, <span class="type">int</span> Num)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += PA[i];</span><br><span class="line">    &#125;</span><br><span class="line">    PA[<span class="number">0</span>] = sum;</span><br><span class="line">    <span class="keyword">return</span> PA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *PArray = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> Total = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;enter the number of elements in arrays:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;Total);</span><br><span class="line">    PArray = (<span class="type">int</span> *)<span class="built_in">malloc</span>(Total * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;give %d element assignment:\n&quot;</span>, Total);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Total; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;PArray[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    PArray = Calc(PArray, Total);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sum=%d\n&quot;</span>, *PArray);</span><br><span class="line">    <span class="built_in">free</span>(PArray);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote><ol><li>使用指针，及时初始化；</li><li>动态分配内存空间，包含头文件<code>&lt;stdlib.h&gt;</code>，函数原型<code>void* malloc (size_t size); </code>返回值类型是<code>void *</code>，void 表示返回未知指针类型。</li><li>通常，<code>malloc()</code>使用时需要进行强制类型转换，如<code>(int *)malloc(Total * sizeof(int)); </code>修改 void 指针为所需类型；</li><li><code>Calc()</code>为指针类型函数，值 sum 返回主函数时不可直接返回。将 sum 值存入数组首地址，也就是作为第一个元素，返回数组首地址即可；</li><li>动态申请的内存空间最后要使用<code>free()</code>释放；</li></ol></blockquote>]]></content>
    
    
    <summary type="html">算法训练日常</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://pdpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="ACM" scheme="https://pdpeng.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>练习13-几何求算</title>
    <link href="https://pdpeng.github.io/2021/08/29/exercise13/"/>
    <id>https://pdpeng.github.io/2021/08/29/exercise13/</id>
    <published>2021-08-29T13:59:29.000Z</published>
    <updated>2022-02-04T03:15:17.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote><p>设圆半径 r&#x3D;1.5，圆柱高 h&#x3D;3，求圆周长、圆面积、圆球表面积、圆球体积、圆柱体积。取小数点后2位数字，请编写程序。</p></blockquote><h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote><p>（1）变量、常量定义；<br>（2）函数定义；<br>（3）函数调用；<br>（4）输出结果；</p></blockquote><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">CirclePerimeter</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * PI * radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">CircleArea</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> PI * <span class="built_in">pow</span>(radius, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">SphereSurfaceArea</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span> * PI * <span class="built_in">pow</span>(radius, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">SphereVolume</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span> / <span class="number">3</span> * PI * <span class="built_in">pow</span>(radius, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">CylinderVolume</span><span class="params">(<span class="type">float</span> radius, <span class="type">float</span> height)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> PI * <span class="built_in">pow</span>(radius, <span class="number">2</span>) * height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> r = <span class="number">1.5</span>, h = <span class="number">3</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;CirclePerimeter=%.2f\n&quot;</span>, CirclePerimeter(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;CircleArea=%.2f\n&quot;</span>, CircleArea(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;SphereSurfaceArea=%.2f\n&quot;</span>, SphereSurfaceArea(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;SphereVolume=%.2f\n&quot;</span>, SphereVolume(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;CylinderVolume=%.2f\n&quot;</span>, CylinderVolume(r, h));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote><ol><li>对需求进行拆分，在一个个函数中 “逐个击破”，“分而治之”思想；</li><li>使用C语言中<code>&lt;math.h&gt;</code>头文件下的数学函数<code>pow()</code>计算次方，例如<code>pow(x,y)</code>表示 x 的 y 次方；</li></ol></blockquote>]]></content>
    
    
    <summary type="html">算法训练日常</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://pdpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="ACM" scheme="https://pdpeng.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>练习12-统计特定字符个数</title>
    <link href="https://pdpeng.github.io/2021/08/29/exercise12/"/>
    <id>https://pdpeng.github.io/2021/08/29/exercise12/</id>
    <published>2021-08-29T10:17:20.000Z</published>
    <updated>2022-02-04T03:15:17.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote><p>输入一行字符，分别统计出其中英文字母，空格，数字和其他字符的个数。</p></blockquote><h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote><p>（1）定义变量接收输入；<br>（2）定义特定变量；<br>（3）循环计算；<br>（4）多分支结构判断；<br>（5）输出结果；</p></blockquote><h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> input; </span><br><span class="line"><span class="type">int</span> word = <span class="number">0</span>, num = <span class="number">0</span>, blank = <span class="number">0</span>, other = <span class="number">0</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please enter the character and press enter to confirm:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (; (input = getchar()) != <span class="string">&#x27;\n&#x27;</span>;) <span class="comment">//注意括号位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((input &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; input &lt;= <span class="string">&#x27;z&#x27;</span>) || (input &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; input &lt;= <span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">word++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (input &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; input &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (input == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">blank++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">other++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;word=%d,num=%d,blank=%d,other=%d\n&quot;</span>, word, num, blank, other);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote><ol><li>C语言中没有字符串变量，因此一次只能接收一个字符并放入缓存区中；</li><li>这里我们接收用户输入的一行字符，并不知道用户输入的长度以及开始位置是什么，所以 for 循环中循环变量的声明和更新都无需设定，即从开始位置进入，结束位置输出。</li></ol></blockquote>]]></content>
    
    
    <summary type="html">算法训练日常</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://pdpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="ACM" scheme="https://pdpeng.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>练习11-计算器实现</title>
    <link href="https://pdpeng.github.io/2021/08/29/exercise11/"/>
    <id>https://pdpeng.github.io/2021/08/29/exercise11/</id>
    <published>2021-08-29T09:30:47.000Z</published>
    <updated>2022-02-04T03:15:17.201Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><image src="https://img-blog.csdnimg.cn/1abc14782f09498baebf11f48a750508.png" width="90%"><h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote><p>（1）分别定义不同功能变量；<br>（2）输出主页面；<br>（3）分功能实现；<br>（4）使用系统函数；<br>（5）分类输出计算结果；</p></blockquote><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">displayMenu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       欢迎进入计算器\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          1.加法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          2.减法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          3.乘法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          4.除法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          5.求余         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          6.阶乘         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          7.累加         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          8.结束         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入计算类型编号:&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">function</span><span class="params">(<span class="type">int</span> e)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (e == <span class="number">1</span> || e == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> e * function(e - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> user, y;</span><br><span class="line">    <span class="type">int</span> input, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;是否进入计算器,y/n(是/否):&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;user);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        displayMenu();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (user == <span class="string">&#x27;n&#x27;</span>) </span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);         </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入有误,请重新输入&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input); <span class="comment">//接收计算类型参数</span></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (input)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d\n&quot;</span>, a, b, a + b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d-%d=%d\n&quot;</span>, a, b, a - b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d\n&quot;</span>, a, b, a * b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d\n&quot;</span>, a, b, a / b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d mold %d=%d\n&quot;</span>, a, b, a % b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> e = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d!=%d\n&quot;</span>, e, function(e));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> input1;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;退出请按任意键,计算请按M键:&quot;</span>); </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;input1);</span><br><span class="line">            <span class="keyword">if</span> (input1 == <span class="string">&#x27;M&#x27;</span> || input1 == <span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> c, d;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;c, &amp;d);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;result=%d\n&quot;</span>, result += (c + d)); </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;谢谢使用,再见!&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error,please try again!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现图"><a href="#实现图" class="headerlink" title="实现图"></a>实现图</h2><p><img src="https://img-blog.csdnimg.cn/f886098ca0434247a2b37eca0abc5153.png"></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote><ol><li>完整包含所使用函数的头文件；</li><li>“阶乘” 功能使用递归思想解决，找到计算过程中的递归体 <code>e * function(e - 1)</code>，并注意特殊位置的处理，如 0 和 1；</li><li>定义<code>char</code>类型变量时，若参与比较，本质是比较其 ASCII码 值大小，使用<code>==</code>符号判断是否相等时需要加单引号<code>‘’</code>；</li><li>“累加“ 功能实现中，第一次及第二次接收数据合并处理，都放入循环。否则输出结果和实际运算结果存在偏差，且差值为第一次数据计算结果，此处使用<code>result += (c + d)</code>保留上次计算结果。</li></ol></blockquote><hr><p>不知道机智的你有没有发现，如果按照题目的要求，我们只需要输出界面，很easy。额，后知后觉，写完才发现，权当练手啦！</p>]]></content>
    
    
    <summary type="html">算法训练日常</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://pdpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="ACM" scheme="https://pdpeng.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>完美解决罗技 GHub 驱动长时间加载/初始化</title>
    <link href="https://pdpeng.github.io/2021/08/20/ghub-drive-cyclic-loading/"/>
    <id>https://pdpeng.github.io/2021/08/20/ghub-drive-cyclic-loading/</id>
    <published>2021-08-20T08:59:54.000Z</published>
    <updated>2022-02-04T03:23:13.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前几天收到大哥的礼物，一只罗技 G502 Lightspeed 鼠标，对这款鼠标不大了解。但使用一段时间后感觉这个宏定义还是蛮不错的，成功让我打造成了开发利器，快来看我的C-V大法</p><image src="https://img-blog.csdnimg.cn/f1b0779264d54ad587c42d0d4b8b8ebe.jpg" width="85%"><p>唉，可惜好景不长，没几天我就发现鼠标驱动软件出了问题。客服让我致电罗技售后，结果可想而知，无奈只好自己解决</p><h1 id="驱动加载“死循环”"><a href="#驱动加载“死循环”" class="headerlink" title="驱动加载“死循环”"></a>驱动加载“死循环”</h1><image src="https://img-blog.csdnimg.cn/6c6abb962871468fb469b317be6e8947.gif" width="85%"><p>刚刚接触的我，以为它就是需要加载，还在想是不是电脑配置较低引起的，后来发现根本不是……</p><h1 id="快速解决"><a href="#快速解决" class="headerlink" title="快速解决"></a>快速解决</h1><div class="note info"><p>关闭驱动后台服务项，管理员运行升级文件后重启驱动<br>“治标不治本”的方法——卸载重装</p></div><p>如果你像我一样也是刚刚接触罗技或者是小白，请参阅下方详细教程</p><h1 id="驱动下载"><a href="#驱动下载" class="headerlink" title="驱动下载"></a>驱动下载</h1><p><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0LmxvZ2kuY29tL2hjL3poLWNuL2FydGljbGVzLzM2MDAyNTI5ODEzMw==">下载直达<i class="fa fa-external-link-alt"></i></span><br>网络原因可能导致加载缓慢，备用<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTk1YVp2M2dFb0YyXzV1bVdKaTNWaVE=">下载地址<i class="fa fa-external-link-alt"></i></span>，提取码：peng<br>首先确保是从官网下载的驱动软件，<span class="exturl" data-url="aHR0cHM6Ly93d3cubG9naXRlY2guY29tLmNuL3poLWNu">官方网站<i class="fa fa-external-link-alt"></i></span>，进入产品支持主页</p><image src="https://img-blog.csdnimg.cn/43cf5464b9994c7183a10347e2f38487.jpg" width="85%"><p>进入下载</p><image src="https://img-blog.csdnimg.cn/794e3509819541e4b507fdb630c103ec.jpg" width="85%"><p>找到 Logitech G HUB 驱动程序</p><image src="https://img-blog.csdnimg.cn/0534c59dcb41494c8fe16343e0b7412c.jpg" width="85%"><p>选择合适的版本点击 Download Now下载，默认版本为 Windows 10</p><image src="https://img-blog.csdnimg.cn/ff195345f42b48de91d7562351483050.jpg" width="65%"><h1 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h1><p>进入图示目录</p><image src="https://img-blog.csdnimg.cn/d8f9d3c952ed45e297d6e49e17419bb9.jpg" width="85%"><p>修改①为管理员方式运行</p><image src="https://img-blog.csdnimg.cn/55c4352de5784366a993e9991abab883.jpg" width="85%"><p>然后按顺序①-③依次运行程序，失败请尝试下述解决方案</p><h1 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h1><p>组合键 <a class="btn" href="#">Ctrl</a>+<a class="btn" href="#">Alt</a>+<a class="btn" href="#">.</a> 打开任务管理器找到服务项</p><image src="https://img-blog.csdnimg.cn/aa2b5bc3c8da44afb9f03dcd52149840.jpg" width="70%"><p>右键尝试启动，正常开启，重启驱动解决</p><image src="https://img-blog.csdnimg.cn/10fcafdd9b294649ad1ec6d34c3504fb.jpg" width="70%"><p>若启动失败，请设置服务项自启动</p><image src="https://img-blog.csdnimg.cn/f5d34cf5320a45cea52ae428d40e2af8.jpg" width="85%"><p>等待片刻重启驱动解决</p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><mark class="label ">进入驱动后，不要关闭自启</mark>，鼠标宏需要驱动支持<p>进入设置</p><image src="https://img-blog.csdnimg.cn/a9144f04359d4248bd0b69ae957c4c94.jpg" width="85%"><p>打开自启</p><image src="https://img-blog.csdnimg.cn/30d7202e178d492fa2d98849d518e4e9.jpg" width="85%">]]></content>
    
    
    <summary type="html">关于 Logitech GHub 驱动长时间加载的解决方案</summary>
    
    
    
    <category term="经验分享" scheme="https://pdpeng.github.io/categories/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="解决方案" scheme="https://pdpeng.github.io/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>练习10-素数判断</title>
    <link href="https://pdpeng.github.io/2021/08/17/exercise10/"/>
    <id>https://pdpeng.github.io/2021/08/17/exercise10/</id>
    <published>2021-08-17T10:08:11.000Z</published>
    <updated>2022-02-04T03:15:17.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote><p>编写一个判断素数的函数，在主函数输入一个整数，输出该数是否为素数的信息。</p></blockquote><h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote><p>（1）函数思想；<br>（2）素数定义；<br>（3）变量定义；<br>（4）接收用户输入；<br>（5）判断输出；</p></blockquote><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> input)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> (<span class="type">int</span>) Math.sqrt(input);</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="number">1</span> || input &lt;= <span class="number">0</span>)</span><br><span class="line">            System.out.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (input % i == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> input;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.print(<span class="string">&quot;please enter an integer:&quot;</span>);</span><br><span class="line">        input = user.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (isPrime(input))</span><br><span class="line">            System.out.println(input + <span class="string">&quot; is prime&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(input + <span class="string">&quot; not prime&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote><ol><li>调用数学函数<code>sqrt()</code>时，注意不同数据类型之间的转换；</li><li>使用布尔型函数判断是否为素数，注意这时的返回值不再是 0 和 1，而是<code>true</code>和<code>false</code>。</li></ol></blockquote><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> input)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="number">1</span> || input &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> n = <span class="built_in">sqrt</span>(input);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (input % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//若条件满足,能被其他数整除,不是素数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> input, i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter the data:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">    <span class="keyword">if</span> (isPrime(input))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d is prime&quot;</span>, input);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d not prime&quot;</span>, input);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><h3 id="素数定义："><a href="#素数定义：" class="headerlink" title="素数定义："></a>素数定义：</h3><blockquote><p>素数又名质数，是指一个大于1的自然数，除了1及其自身外，不能整除其他自然数的数。</p></blockquote><h3 id="判断思想："><a href="#判断思想：" class="headerlink" title="判断思想："></a>判断思想：</h3><blockquote><ol><li>判断一个自然数是否为素数，我们可以这么想：什么样的数不是素数？答案是：负数、0、1以及任何“除1和它本身外还能被其他数整除的数”；</li><li>这样我们的条件就非常明确：排除负数、0、1，利用“不是素数的数都满足<strong>小因数&lt;&#x3D;sqrt(n)&lt;&#x3D;大因数</strong>“这个条件进行判断，其中，n 是待判断的数；</li><li>只需要判断一个数能否被小于或等于<strong>sqrt(n)</strong> 的数整除即可，降低了算法的时间复杂度。</li></ol></blockquote>]]></content>
    
    
    <summary type="html">算法训练日常</summary>
    
    
    
    <category term="数据结构与算法" scheme="https://pdpeng.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="ACM" scheme="https://pdpeng.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>七夕❤️朋友圈—炸锅了</title>
    <link href="https://pdpeng.github.io/2021/08/14/qixi-festival-love-code/"/>
    <id>https://pdpeng.github.io/2021/08/14/qixi-festival-love-code/</id>
    <published>2021-08-14T07:34:53.000Z</published>
    <updated>2022-02-04T03:23:13.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大事件"><a href="#大事件" class="headerlink" title="大事件"></a>大事件</h1><p>今早起来，逛逛朋友圈，看到的全是各种秀。唉，图片咱就不放了，难免戳中某位朋友瘦小的心灵，主要我也怕，你们知道叭</p><img src="https://img-blog.csdnimg.cn/d6ccc21554a24a7eb515e9f4f2b98c1e.jpg" width="45%"><p>这种时候怎么能让我们的朋友圈是白茫茫的一片呢？必须怼回去，这气可不能受，下面的操作学会了，这波气势也不输，还不快快学起来~~</p><h1 id="文件建立"><a href="#文件建立" class="headerlink" title="文件建立"></a>文件建立</h1><p>桌面右击，新建文本文档</p><img src="https://img-blog.csdnimg.cn/578b5db60c9d4abc80c60b582ce2930e.png" width="60%"><p>将文件命名格式修改为 <strong>.css</strong> ，保存， <strong>js</strong> 文件建立同理</p><img src="https://img-blog.csdnimg.cn/67c18f43a51846438d6e551c711df4a4.png" width="60%"><h1 id="3D立体相册"><a href="#3D立体相册" class="headerlink" title="3D立体相册"></a>3D立体相册</h1><h2 id="demo-css"><a href="#demo-css" class="headerlink" title="demo.css"></a>demo.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">80deg</span>);</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: rotate <span class="number">20s</span> infinite;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> rotate &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0deg</span>) <span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">360deg</span>) <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pic</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_front</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_back</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">100px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_left</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_right</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_top</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_bottom</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: bloack;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_pic</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_front</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_back</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">50px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_left</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_right</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_top</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_bottom</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_front</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_back</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">200px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_left</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_right</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_top</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_bottom</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://img-blog.csdnimg.cn/d01dc2e4ddf74f20a8596017dcbb0e35.gif#pic_center"></p><h1 id="爱心表白"><a href="#爱心表白" class="headerlink" title="爱心表白"></a>爱心表白</h1><h2 id="test-css"><a href="#test-css" class="headerlink" title="test.css"></a>test.css</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-love</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.body_left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">98</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.love</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">520px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">440px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">260px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">220px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.love</span> <span class="selector-class">.block</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.love</span> <span class="selector-class">.block</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;../image/love.jpg&quot;</span>) no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: contain;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> border &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">5%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">5%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">10%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">15%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">15%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">20%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">25%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">30%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">35%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">35%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">40%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">45%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">45%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">50%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">55%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">55%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">60%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">65%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">65%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">70%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">75%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">80%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">85%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">90%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">95%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.border</span> <span class="selector-class">.border-top</span> &#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">3px</span> solid black;</span><br><span class="line">    <span class="attribute">transform-origin</span>: left center;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: border <span class="number">312</span> linear;</span><br><span class="line">    -o-<span class="attribute">animation</span>: border <span class="number">12s</span> linear;</span><br><span class="line">    <span class="attribute">animation</span>: border <span class="number">12s</span> linear;</span><br><span class="line">    <span class="attribute">animation-fill-mode</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.border</span> <span class="selector-class">.border-bottom</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">3px</span> solid red;</span><br><span class="line">    <span class="attribute">transform-origin</span>: right center;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: border <span class="number">7s</span> linear <span class="number">12s</span>;</span><br><span class="line">    -o-<span class="attribute">animation</span>: border <span class="number">7s</span> linear <span class="number">12s</span>;</span><br><span class="line">    <span class="attribute">animation</span>: border <span class="number">7s</span> linear <span class="number">12s</span>;</span><br><span class="line">    <span class="attribute">animation-fill-mode</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.copyright</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">div</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: dimgray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mylove-js"><a href="#Mylove-js" class="headerlink" title="Mylove.js"></a>Mylove.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> blk_pitn = &#123;</span><br><span class="line">    <span class="attr">block1</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block2</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block3</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block4</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block5</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block6</span>: [[<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block7</span>: [[-<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block8</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block9</span>: [[<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block10</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block11</span>: [[<span class="number">2</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block12</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block13</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block14</span>: [[<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block15</span>: [[<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block16</span>: [[-<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block17</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block18</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block19</span>: [[<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block20</span>: [[<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block21</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block22</span>: [[<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block23</span>: [[<span class="number">0</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">&#125;,</span><br><span class="line">    offset_pitn = &#123;</span><br><span class="line">        <span class="attr">block1</span>: [<span class="number">5</span>, <span class="number">3</span>],</span><br><span class="line">        <span class="attr">block2</span>: [<span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">        <span class="attr">block3</span>: [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">        <span class="attr">block4</span>: [<span class="number">3</span>, <span class="number">2</span>],</span><br><span class="line">        <span class="attr">block5</span>: [<span class="number">3</span>, -<span class="number">1</span>],</span><br><span class="line">        <span class="attr">block6</span>: [<span class="number">2</span>, <span class="number">5</span>],</span><br><span class="line">        <span class="attr">block7</span>: [<span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">        <span class="attr">block8</span>: [<span class="number">1</span>, -<span class="number">1</span>],</span><br><span class="line">        <span class="attr">block9</span>: [<span class="number">1</span>, -<span class="number">3</span>],</span><br><span class="line">        <span class="attr">block10</span>: [<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">        <span class="attr">block11</span>: [<span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line">        <span class="attr">block12</span>: [<span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="attr">block13</span>: [-<span class="number">1</span>, -<span class="number">4</span>],</span><br><span class="line">        <span class="attr">block14</span>: [<span class="number">0</span>, -<span class="number">2</span>],</span><br><span class="line">        <span class="attr">block15</span>: [-<span class="number">2</span>, <span class="number">4</span>],</span><br><span class="line">        <span class="attr">block16</span>: [-<span class="number">2</span>, <span class="number">2</span>],</span><br><span class="line">        <span class="attr">block17</span>: [-<span class="number">2</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="attr">block18</span>: [-<span class="number">3</span>, -<span class="number">2</span>],</span><br><span class="line">        <span class="attr">block19</span>: [-<span class="number">4</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="attr">block20</span>: [-<span class="number">3</span>, <span class="number">5</span>],</span><br><span class="line">        <span class="attr">block21</span>: [-<span class="number">5</span>, <span class="number">3</span>],</span><br><span class="line">        <span class="attr">block22</span>: [-<span class="number">4</span>, <span class="number">1</span>],</span><br><span class="line">        <span class="attr">block23</span>: [-<span class="number">6</span>, <span class="number">1</span>]</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> blocks = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;block&quot;</span>),</span><br><span class="line">    block = blocks[<span class="number">0</span>],</span><br><span class="line">    love = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;love&quot;</span>)[<span class="number">0</span>],</span><br><span class="line">    timer = <span class="literal">null</span>,</span><br><span class="line">    index = <span class="number">0</span>,</span><br><span class="line">    clone_block;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">block.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&quot;50%&quot;</span>;</span><br><span class="line">block.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&quot;50%&quot;</span>;</span><br><span class="line">block.<span class="property">style</span>.<span class="property">margin</span> = <span class="string">&quot;-20px 0 0 -20px&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> block_left = <span class="built_in">parseFloat</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(block, <span class="literal">null</span>).<span class="property">left</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">2</span>)),</span><br><span class="line">    block_top = <span class="built_in">parseFloat</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(block, <span class="literal">null</span>).<span class="property">top</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Next</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (++index &gt;= <span class="number">24</span>) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line"></span><br><span class="line">        <span class="title class_">Rise</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    block.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">&quot;visible&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    block.<span class="property">style</span>.<span class="property">left</span> = block_left + <span class="number">40</span> * offset_pitn[<span class="string">&quot;block&quot;</span> + index][<span class="number">0</span>] + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    block.<span class="property">style</span>.<span class="property">top</span> = block_top - <span class="number">40</span> * offset_pitn[<span class="string">&quot;block&quot;</span> + index][<span class="number">1</span>] + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; block.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        block.<span class="property">children</span>[i].<span class="property">style</span>.<span class="property">left</span> = blk_pitn[<span class="string">&quot;block&quot;</span> + index][i][<span class="number">0</span>] * -<span class="number">40</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">        block.<span class="property">children</span>[i].<span class="property">style</span>.<span class="property">top</span> = blk_pitn[<span class="string">&quot;block&quot;</span> + index][i][<span class="number">1</span>] * -<span class="number">40</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    clone_block = block.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span><br><span class="line">    love.<span class="title function_">appendChild</span>(clone_block);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (love.<span class="property">children</span>.<span class="property">length</span> &gt;= <span class="number">24</span>) &#123;</span><br><span class="line">        blocks[blocks.<span class="property">length</span> - <span class="number">1</span>].<span class="property">children</span>[<span class="number">2</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">        block.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Rise</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;begin&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> timer2 = <span class="literal">null</span>,</span><br><span class="line">        distance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> target = <span class="number">120</span>,</span><br><span class="line">        speed = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> love_top = <span class="built_in">parseFloat</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(love, <span class="literal">null</span>).<span class="property">top</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    timer2 = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        distance += speed;</span><br><span class="line">        <span class="keyword">if</span> (distance &gt;= target) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer2);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;over&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        love.<span class="property">style</span>.<span class="property">top</span> = (love_top - distance) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title class_">Next</span>();</span><br><span class="line">        &#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;, <span class="number">12000</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="效果展示-1"><a href="#效果展示-1" class="headerlink" title="效果展示"></a>效果展示<img src="https://img-blog.csdnimg.cn/622b4df993fd4ee2abe147c0d78e02b4.gif#pic_center"></h2><hr><p>xdm，师弟只能带你到这里了，剩下的修行就靠你们自己了，我先行一步，暂且告退……</p><img src="https://img-blog.csdnimg.cn/a0d0da040e0942da922b80dd30fb8596.png" width="40%">]]></content>
    
    
    <summary type="html">快看，你的“单身汪”程序员朋友在情人节搞事情</summary>
    
    
    
    <category term="程序设计" scheme="https://pdpeng.github.io/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="编程语言" scheme="https://pdpeng.github.io/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
</feed>
