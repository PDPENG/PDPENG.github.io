<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>命令行推送代码</title>
    <url>/2021/09/18/cmd-push-code/</url>
    <content><![CDATA[<p>配置环境完成后，使用下面的命令快速完成代码推送</p>
<h1 id="git命令推送步骤"><a href="#git命令推送步骤" class="headerlink" title="git命令推送步骤"></a>git命令推送步骤</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init	//初始化本地仓库</span><br><span class="line"></span><br><span class="line">git remote add origin URL	//添加远程</span><br><span class="line"></span><br><span class="line">git add .	//添加所有文件到暂存区,add后可跟单个文件</span><br><span class="line"></span><br><span class="line">git commit -m<span class="string">&quot;注释&quot;</span>    //提交,提交备注</span><br><span class="line"></span><br><span class="line">git push  --set-upstream origin master    //第一次需配置分支</span><br><span class="line"></span><br><span class="line">git push    //推送到远程</span><br></pre></td></tr></table></figure>
<h1 id="强制推送"><a href="#强制推送" class="headerlink" title="强制推送"></a>强制推送</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -f --set-upstream origin master</span><br></pre></td></tr></table></figure>
<p>如果是协同开发，为了避免后期出现问题，还是不要用的好<br>！！！出问题别找我，跑路喽，哈哈！！！</p>
]]></content>
      <categories>
        <category>版本控制</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>超震撼！裸眼3D看冬奥</title>
    <url>/2022/02/10/3D-Olympics/</url>
    <content><![CDATA[<p>大家好，我是杰森。北京 2022 冬奥会备受瞩目，吉祥物冰墩墩更是圈粉无数。</p>
<p>不知道你有没有抢到一只呢？</p>
<p><img src="https://cdn.jsdelivr.net/gh/PDPENG/jason-storage/blog-img/bingdwendwen.png"></p>
<p>本文使用 <code>Three.js + React</code> 技术栈，实现冬日和奥运元素，制作了一个充满趣味和纪念意义的冬奥主题 <code>3D</code> 页面。</p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>实现效果如以下 <code>👇</code> 动图所示，页面主要由 <code>2022</code> 冬奥会吉祥物 <code>冰墩墩</code> 、奥运五环、舞动的旗帜 <code>🚩</code>、树木 <code>🌲</code> 以及下雪效果 <code>❄️</code> 等组成。按住鼠标左键移动可以改为相机位置，获得不同视图。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcb9253a007d4a4a9b749569428036f1~tplv-k3u1fbpfcp-watermark.awebp"></p>
<blockquote>
<p><code>👀</code> 在线预览：<span class="exturl" data-url="aHR0cHM6Ly9kcmFnb25pci5naXRodWIuaW8vM2QvIy9vbHltcGljJUVGJUJDJTg4JUU5JTgzJUE4JUU3JUJEJUIyJUU1JTlDJUE4">https://dragonir.github.io/3d/#/olympic（部署在<i class="fa fa-external-link-alt"></i></span> <code>GitHub</code>，加载速度可能会有点慢 <code>😓</code>）</p>
</blockquote>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>本文涉及到的知识点主要包括：<code>TorusGeometry</code> 圆环面、<code>MeshLambertMaterial</code> 非光泽表面材质、<code>MeshDepthMaterial</code> 深度网格材质、<code>custromMaterial</code> 自定义材质、<code>Points</code> 粒子、<code>PointsMaterial</code> 点材质等。</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="引入资源"><a href="#引入资源" class="headerlink" title="引入资源"></a>引入资源</h3><p>首先引入开发页面所需要的库和外部资源，<code>OrbitControls</code> 用于镜头轨道控制、<code>TWEEN</code> 用于补间动画实现、<code>GLTFLoader</code> 用于加载 <code>glb</code> 或 <code>gltf</code> 格式的 <code>3D</code> 模型、以及一些其他模型、贴图等资源。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/controls/OrbitControls&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">TWEEN</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/libs/tween.module.min.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">GLTFLoader</span> &#125; <span class="keyword">from</span> <span class="string">&quot;three/examples/jsm/loaders/GLTFLoader&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> bingdundunModel <span class="keyword">from</span> <span class="string">&#x27;./models/bingdundun.glb&#x27;</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure>

<h3 id="页面-DOM-结构"><a href="#页面-DOM-结构" class="headerlink" title="页面 DOM 结构"></a>页面 DOM 结构</h3><p>页面 <code>DOM</code> 结构非常简单，只有渲染 <code>3D</code> 元素的 <code>#container</code> 容器和显示加载进度的 <code>.olympic_loading</code>元素。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &#123;<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">loadingProcess</span> === <span class="number">100</span> ? <span class="string">&#x27;&#x27;</span> : (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;olympic_loading&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;box&quot;</span>&gt;</span>&#123;this.state.loadingProcess&#125; %<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="场景初始化"><a href="#场景初始化" class="headerlink" title="场景初始化"></a>场景初始化</h3><p>初始化渲染容器、场景、相机。关于这部分内容的详细知识点，可以查阅我往期的文章，本文中不再赘述。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;container&#x27;</span>);</span><br><span class="line">renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123; <span class="attr">antialias</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">renderer.<span class="title function_">setPixelRatio</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span>);</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">renderer.<span class="property">shadowMap</span>.<span class="property">enabled</span> = <span class="literal">true</span>;</span><br><span class="line">container.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>);</span><br><span class="line">scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>();</span><br><span class="line">scene.<span class="property">background</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(skyTexture);</span><br><span class="line">camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">60</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">0.1</span>, <span class="number">1000</span>);</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">30</span>, <span class="number">100</span>);</span><br><span class="line">camera.<span class="title function_">lookAt</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br></pre></td></tr></table></figure>

<h3 id="添加光源"><a href="#添加光源" class="headerlink" title="添加光源"></a>添加光源</h3><p>本示例中主要添加了两种光源：<code>DirectionalLight</code> 用于产生阴影，调节页面亮度、<code>AmbientLight</code> 用于渲染环境氛围。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 直射光</span></span><br><span class="line"><span class="keyword">const</span> light = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>(<span class="number">0xffffff</span>, <span class="number">1</span>);</span><br><span class="line">light.<span class="property">intensity</span> = <span class="number">1</span>;</span><br><span class="line">light.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">16</span>, <span class="number">16</span>, <span class="number">8</span>);</span><br><span class="line">light.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">mapSize</span>.<span class="property">width</span> = <span class="number">512</span> * <span class="number">12</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">mapSize</span>.<span class="property">height</span> = <span class="number">512</span> * <span class="number">12</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">top</span> = <span class="number">40</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">bottom</span> = -<span class="number">40</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">left</span> = -<span class="number">40</span>;</span><br><span class="line">light.<span class="property">shadow</span>.<span class="property">camera</span>.<span class="property">right</span> = <span class="number">40</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(light);</span><br><span class="line"><span class="comment">// 环境光</span></span><br><span class="line"><span class="keyword">const</span> ambientLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>(<span class="number">0xcfffff</span>);</span><br><span class="line">ambientLight.<span class="property">intensity</span> = <span class="number">1</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(ambientLight);</span><br></pre></td></tr></table></figure>

<h3 id="加载进度管理"><a href="#加载进度管理" class="headerlink" title="加载进度管理"></a>加载进度管理</h3><p>使用 <code>THREE.LoadingManager</code> 管理页面模型加载进度，在它的回调函数中执行一些与加载进度相关的方法。本例中的页面加载进度就是在 <code>onProgress</code> 中完成的，当页面加载进度为 <code>100%</code> 时，执行 <code>TWEEN</code> 镜头补间动画。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> manager = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LoadingManager</span>();</span><br><span class="line">manager.<span class="property">onStart</span> = <span class="function">(<span class="params">url, loaded, total</span>) =&gt;</span> &#123;&#125;;</span><br><span class="line">manager.<span class="property">onLoad</span> = <span class="function">() =&gt;</span> &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Loading complete!&#x27;</span>)&#125;;</span><br><span class="line">manager.<span class="property">onProgress</span> = <span class="function">(<span class="params">url, loaded, total</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">floor</span>(loaded / total * <span class="number">100</span>) === <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">loadingProcess</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(loaded / total * <span class="number">100</span>) &#125;);</span><br><span class="line">    <span class="comment">// 镜头补间动画</span></span><br><span class="line">    <span class="title class_">Animations</span>.<span class="title function_">animateCamera</span>(camera, controls, &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: -<span class="number">1</span>, <span class="attr">z</span>: <span class="number">20</span> &#125;, &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">0</span> &#125;, <span class="number">3600</span>, <span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setState</span>(&#123; <span class="attr">loadingProcess</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(loaded / total * <span class="number">100</span>) &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="创建地面"><a href="#创建地面" class="headerlink" title="创建地面"></a>创建地面</h3><p>本示例中凹凸起伏的地面是使用 <code>Blender</code> 构建模型，然后导出 <code>glb</code> 格式加载创建的。当然也可以只使用 <code>Three.js</code> 自带平面网格加凹凸贴图也可以实现类似的效果。使用 <code>Blender</code> 自建模型的优点在于可以自由可视化地调整地面的起伏效果。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> loader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">GLTFLoader</span>(manager);</span><br><span class="line">loader.<span class="title function_">load</span>(landModel, <span class="keyword">function</span> (<span class="params">mesh</span>) &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="keyword">function</span> (<span class="params">child</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.1</span>;</span><br><span class="line">      child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">.8</span>;</span><br><span class="line">      <span class="comment">// 地面</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;Mesh_2&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.5</span>;</span><br><span class="line">        child.<span class="property">receiveShadow</span> = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">rotation</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">4</span>;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">15</span>, -<span class="number">20</span>, <span class="number">0</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">.9</span>, <span class="number">.9</span>, <span class="number">.9</span>);</span><br><span class="line">  land = mesh.<span class="property">scene</span>;</span><br><span class="line">  scene.<span class="title function_">add</span>(land);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79b71ebf1cfc4e95a8fb3f64461108c8~tplv-k3u1fbpfcp-watermark.awebp"></p>
<h3 id="创建冬奥吉祥物冰墩墩"><a href="#创建冬奥吉祥物冰墩墩" class="headerlink" title="创建冬奥吉祥物冰墩墩"></a>创建冬奥吉祥物冰墩墩</h3><p>现在添加可爱的冬奥会吉祥物熊猫冰墩墩 <code>🐼</code>，冰墩墩同样是使用 <code>glb</code> 格式模型加载的。它的原始模型来源于这里，从这个网站免费现在模型后，原模型是使用 <code>3D max</code> 建的我发现并不能直接用在网页中，需要在 <code>Blender</code> 中转换模型格式，还需要调整调整模型的贴图法线，才能还原渲染图效果。</p>
<p><strong>原模型</strong>：</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40de3d65b202431bac1f0673f9f3882e~tplv-k3u1fbpfcp-watermark.awebp"></p>
<p><strong>冰墩墩贴图</strong>:</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/78bba0afd14345bfbfdbb5ffa44aecb3~tplv-k3u1fbpfcp-watermark.awebp"></p>
<p><strong>转换成 Blender 支持的模型，并在 Blender 中调整模型贴图法线、并添加贴图</strong>:</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8881a2307d2a40e1abef87201a26ec9d~tplv-k3u1fbpfcp-watermark.awebp"></p>
<p><strong>导出 glb 格式</strong>:</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/55b45df468634f3c9670c4b4d03fe6c9~tplv-k3u1fbpfcp-watermark.awebp"></p>
<blockquote>
<p><code>📖</code> 在 <code>Blender</code> 中给模型添加贴图教程传送门：在 Blender 中怎么给模型贴图</p>
</blockquote>
<p>仔细观察<code>冰墩墩 🐼</code>可以发现，它的外面有一层<strong>透明塑料或玻璃质感外壳</strong>，这个效果可以通过修改模型的透明度、金属度、粗糙度等材质参数实现，最后就可以渲染出如 <code>👆 banner图</code> 所示的那种效果，具体如以下代码所示。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">loader.<span class="title function_">load</span>(bingdundunModel, <span class="function"><span class="params">mesh</span> =&gt;</span> &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="function"><span class="params">child</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      <span class="comment">// 内部</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;oldtiger001&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.5</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">.8</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 半透明外壳</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;oldtiger002&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">transparent</span> = <span class="literal">true</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">opacity</span> = <span class="number">.5</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.2</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">0</span></span><br><span class="line">        child.<span class="property">material</span>.<span class="property">refractionRatio</span> = <span class="number">1</span></span><br><span class="line">        child.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">rotation</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">24</span>;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(-<span class="number">8</span>, -<span class="number">12</span>, <span class="number">0</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">24</span>, <span class="number">24</span>, <span class="number">24</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="创建奥运五环"><a href="#创建奥运五环" class="headerlink" title="创建奥运五环"></a>创建奥运五环</h3><p>奥运五环由基础几何模型圆环面 <code>TorusGeometry</code> 来实现，创建五个圆环面，并调整它们的材质颜色和位置来构成<strong>蓝黑红黄绿</strong>顺序的五环结构。五环材质使用的是 <code>MeshLambertMaterial</code>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fiveCycles = [</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_0&#x27;</span>, <span class="attr">color</span>: <span class="number">0x0885c2</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: -<span class="number">250</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">0</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_1&#x27;</span>, <span class="attr">color</span>: <span class="number">0x000000</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: -<span class="number">10</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">5</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_2&#x27;</span>, <span class="attr">color</span>: <span class="number">0xed334e</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: <span class="number">230</span>, <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">z</span>: <span class="number">0</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_3&#x27;</span>, <span class="attr">color</span>: <span class="number">0xfbb132</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: -<span class="number">125</span>, <span class="attr">y</span>: -<span class="number">100</span>, <span class="attr">z</span>: -<span class="number">5</span> &#125;&#125;,</span><br><span class="line">  &#123; <span class="attr">key</span>: <span class="string">&#x27;cycle_4&#x27;</span>, <span class="attr">color</span>: <span class="number">0x1c8b3c</span>, <span class="attr">position</span>: &#123; <span class="attr">x</span>: <span class="number">115</span>, <span class="attr">y</span>: -<span class="number">100</span>, <span class="attr">z</span>: <span class="number">10</span> &#125;&#125;</span><br><span class="line">];</span><br><span class="line">fiveCycles.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> cycleMesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TorusGeometry</span>(<span class="number">100</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">50</span>), <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshLambertMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">color</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(item.<span class="property">color</span>),</span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span></span><br><span class="line">  &#125;));</span><br><span class="line">  cycleMesh.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">  cycleMesh.<span class="property">position</span>.<span class="title function_">set</span>(item.<span class="property">position</span>.<span class="property">x</span>, item.<span class="property">position</span>.<span class="property">y</span>, item.<span class="property">position</span>.<span class="property">z</span>);</span><br><span class="line">  meshes.<span class="title function_">push</span>(cycleMesh);</span><br><span class="line">  fiveCyclesGroup.<span class="title function_">add</span>(cycleMesh);</span><br><span class="line">&#125;);</span><br><span class="line">fiveCyclesGroup.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">.036</span>, <span class="number">.036</span>, <span class="number">.036</span>);</span><br><span class="line">fiveCyclesGroup.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">10</span>, -<span class="number">8</span>);</span><br><span class="line">scene.<span class="title function_">add</span>(fiveCyclesGroup);</span><br></pre></td></tr></table></figure>

<h4 id="💡-TorusGeometry-圆环面"><a href="#💡-TorusGeometry-圆环面" class="headerlink" title="💡 TorusGeometry 圆环面"></a><code>💡</code> TorusGeometry 圆环面</h4><p><code>TorusGeometry</code> 一个用于生成圆环几何体的类。</p>
<p><strong>构造函数</strong>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">TorusGeometry</span>(<span class="attr">radius</span>: <span class="title class_">Float</span>, <span class="attr">tube</span>: <span class="title class_">Float</span>, <span class="attr">radialSegments</span>: <span class="title class_">Integer</span>, <span class="attr">tubularSegments</span>: <span class="title class_">Integer</span>, <span class="attr">arc</span>: <span class="title class_">Float</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><code>radius</code>：圆环的半径，从圆环的中心到管道（横截面）的中心。默认值是 <code>1</code>。</li>
<li><code>tube</code>：管道的半径，默认值为 <code>0.4</code>。</li>
<li><code>radialSegments</code>：圆环的分段数，默认值为 <code>8</code>。</li>
<li><code>tubularSegments</code>：管道的分段数，默认值为 <code>6</code>。</li>
<li><code>arc</code>：圆环的圆心角（单位是弧度），默认值为 <code>Math.PI * 2</code>。</li>
</ul>
<h4 id="💡-MeshLambertMaterial-非光泽表面材质"><a href="#💡-MeshLambertMaterial-非光泽表面材质" class="headerlink" title="💡 MeshLambertMaterial 非光泽表面材质"></a><code>💡</code> MeshLambertMaterial 非光泽表面材质</h4><p>一种非光泽表面的材质，没有镜面高光。该材质使用基于非物理的 <code>Lambertian</code> 模型来计算反射率。这可以很好地模拟一些表面（例如未经处理的木材或石材），但不能模拟具有镜面高光的光泽表面（例如涂漆木材）。</p>
<p><strong>构造函数</strong>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">MeshLambertMaterial</span>(parameters : <span class="title class_">Object</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><code>parameters</code>：（可选）用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入。</li>
</ul>
<h3 id="创建旗帜"><a href="#创建旗帜" class="headerlink" title="创建旗帜"></a>创建旗帜</h3><p>旗面模型是从 sketchfab 下载的，还需要一个旗杆，可以在 <code>Blender</code>中添加了一个柱状立方体，并调整好合适的长宽高和旗面结合起来。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/21d2e80561024cb38a89dc75b3e09d50~tplv-k3u1fbpfcp-watermark.awebp"></p>
<p><strong>旗面贴图</strong>：</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6a1fc0345766451a890ae2d19ef0ad38~tplv-k3u1fbpfcp-watermark.awebp"></p>
<p>旗面添加了动画，需要在代码中执行动画帧播放。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">loader.<span class="title function_">load</span>(flagModel, <span class="function"><span class="params">mesh</span> =&gt;</span> &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="function"><span class="params">child</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      child.<span class="property">castShadow</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="comment">// 旗帜</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;mesh_0001&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.1</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">.1</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">map</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(flagTexture);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 旗杆</span></span><br><span class="line">      <span class="keyword">if</span> (child.<span class="property">name</span> === <span class="string">&#x27;柱体&#x27;</span>) &#123;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">metalness</span> = <span class="number">.6</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">roughness</span> = <span class="number">0</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">refractionRatio</span> = <span class="number">1</span>;</span><br><span class="line">        child.<span class="property">material</span>.<span class="property">color</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="number">0xeeeeee</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">rotation</span>.<span class="property">y</span> = <span class="title class_">Math</span>.<span class="property">PI</span> / <span class="number">24</span>;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">2</span>, -<span class="number">7</span>, -<span class="number">1</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">4</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">  <span class="comment">// 动画</span></span><br><span class="line">  <span class="keyword">let</span> meshAnimation = mesh.<span class="property">animations</span>[<span class="number">0</span>];</span><br><span class="line">  mixer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AnimationMixer</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">  <span class="keyword">let</span> animationClip = meshAnimation;</span><br><span class="line">  <span class="keyword">let</span> clipAction = mixer.<span class="title function_">clipAction</span>(animationClip).<span class="title function_">play</span>();</span><br><span class="line">  animationClip = clipAction.<span class="title function_">getClip</span>();</span><br><span class="line">  scene.<span class="title function_">add</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="创建树木"><a href="#创建树木" class="headerlink" title="创建树木"></a>创建树木</h3><p>为了充实画面，营造冬日氛围，于是就添加了几棵松树 <code>🌲</code> 作为装饰。添加松树的时候用到一个技巧非常重要：我们知道因为树的模型非常复杂，有非常多的面数，面数太多会降低页面性能，造成卡顿。本文中使用两个如下图 <code>👇</code> 所示的两个交叉的面来作为树的基座，这样的话树只有两个面数，使用这个技巧可以和大程度上优化页面性能，而且树 <code>🌲</code> 的样子看起来也是有 <code>3D</code> 感的。</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc12379da4b04b18a643b44ad7198408~tplv-k3u1fbpfcp-watermark.awebp"></p>
<p><strong>材质贴图</strong>：</p>
<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b12aef79902b4607888d3e270bc3ee25~tplv-k3u1fbpfcp-watermark.awebp"></p>
<p>为了使树<strong>只在贴图透明部分透明、其他地方不透明</strong>，并且可以<strong>产生树状阴影而不是长方体阴影</strong>，需要给树模型添加如下 <code>MeshPhysicalMaterial</code>、<code>MeshDepthMaterial</code> 两种材质，两种材质使用同样的纹理贴图，其中 <code>MeshDepthMaterial</code> 添加到模型的 <code>custromMaterial</code> 属性上。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">let</span> treeMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshPhysicalMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(treeTexture),</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  <span class="attr">metalness</span>: <span class="number">.2</span>,</span><br><span class="line">  <span class="attr">roughness</span>: <span class="number">.8</span>,</span><br><span class="line">  <span class="attr">depthTest</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">depthWrite</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">skinning</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">fog</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">reflectivity</span>: <span class="number">0.1</span>,</span><br><span class="line">  <span class="attr">refractionRatio</span>: <span class="number">0</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">let</span> treeCustomDepthMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshDepthMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">depthPacking</span>: <span class="variable constant_">THREE</span>.<span class="property">RGBADepthPacking</span>,</span><br><span class="line">  <span class="attr">map</span>: <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(treeTexture),</span><br><span class="line">  <span class="attr">alphaTest</span>: <span class="number">0.5</span></span><br><span class="line">&#125;);</span><br><span class="line">loader.<span class="title function_">load</span>(treeModel, <span class="function"><span class="params">mesh</span> =&gt;</span> &#123;</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="title function_">traverse</span>(<span class="function"><span class="params">child</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (child.<span class="property">isMesh</span>) &#123;</span><br><span class="line">      child.<span class="property">material</span> = treeMaterial;</span><br><span class="line">      child.<span class="property">custromMaterial</span> = treeCustomDepthMaterial;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">14</span>, -<span class="number">9</span>, <span class="number">0</span>);</span><br><span class="line">  mesh.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(mesh.<span class="property">scene</span>);</span><br><span class="line">  <span class="comment">// 克隆另两棵树</span></span><br><span class="line">  <span class="keyword">let</span> tree2 = mesh.<span class="property">scene</span>.<span class="title function_">clone</span>();</span><br><span class="line">  tree2.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">10</span>, -<span class="number">8</span>, -<span class="number">15</span>);</span><br><span class="line">  tree2.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>);</span><br><span class="line">  scene.<span class="title function_">add</span>(tree2)</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>实现效果也可以从 <code>👆</code> 上面 <code>Banner</code> 图中可以看到，为了画面更好看，我取消了树的阴影显示。</p>
<blockquote>
<p><code>📌</code> 在 <code>3D</code> 功能开发中，一些不重要的装饰模型都可以采取这种策略来优化。</p>
</blockquote>
<h4 id="💡-MeshDepthMaterial-深度网格材质"><a href="#💡-MeshDepthMaterial-深度网格材质" class="headerlink" title="💡 MeshDepthMaterial 深度网格材质"></a><code>💡</code> MeshDepthMaterial 深度网格材质</h4><p>一种按深度绘制几何体的材质。深度基于相机远近平面，白色最近，黑色最远。</p>
<p><strong>构造函数</strong>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">MeshDepthMaterial</span>(<span class="attr">parameters</span>: <span class="title class_">Object</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><code>parameters</code>：（可选）用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入。</li>
</ul>
<p><strong>特殊属性</strong>：</p>
<ul>
<li><code>.depthPacking[Constant]</code>：<code>depth packing</code> 的编码。默认为 <code>BasicDepthPacking</code>。</li>
<li><code>.displacementMap[Texture]</code>：位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象，以及充当真实的几何体。</li>
<li><code>.displacementScale[Float]</code>：位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为 <code>1</code>。</li>
<li><code>.displacementBias[Float]</code>：位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为 <code>0</code>。</li>
</ul>
<h4 id="💡-custromMaterial-自定义材质"><a href="#💡-custromMaterial-自定义材质" class="headerlink" title="💡 custromMaterial 自定义材质"></a><code>💡</code> custromMaterial 自定义材质</h4><p>给网格添加 <code>custromMaterial</code> 自定义材质属性，可以实现透明外围 <code>png</code> 图片贴图的内容区域阴影。</p>
<h3 id="创建雪花"><a href="#创建雪花" class="headerlink" title="创建雪花"></a>创建雪花</h3><p>创建雪花 <code>❄️</code>，就要用到<strong>粒子知识</strong>。<code>THREE.Points</code> 是用来创建点的类，也用来批量管理粒子。本例中创建了 <code>1500</code> 个雪花粒子，并为它们设置了限定三维空间的随机坐标及横向和竖向的随机移动速度。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 雪花贴图</span></span><br><span class="line"><span class="keyword">let</span> texture = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>().<span class="title function_">load</span>(snowTexture);</span><br><span class="line"><span class="keyword">let</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Geometry</span>();</span><br><span class="line"><span class="keyword">let</span> range = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">let</span> pointsMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">size</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">opacity</span>: <span class="number">0.8</span>,</span><br><span class="line">  <span class="attr">map</span>: texture,</span><br><span class="line">  <span class="comment">// 背景融合</span></span><br><span class="line">  <span class="attr">blending</span>: <span class="variable constant_">THREE</span>.<span class="property">AdditiveBlending</span>,</span><br><span class="line">  <span class="comment">// 景深衰弱</span></span><br><span class="line">  <span class="attr">sizeAttenuation</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">depthTest</span>: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">1500</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> vertice = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * range - range / <span class="number">2</span>, <span class="title class_">Math</span>.<span class="title function_">random</span>() * range * <span class="number">1.5</span>, <span class="title class_">Math</span>.<span class="title function_">random</span>() * range - range / <span class="number">2</span>);</span><br><span class="line">  <span class="comment">// 纵向移速</span></span><br><span class="line">  vertice.<span class="property">velocityY</span> = <span class="number">0.1</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() / <span class="number">3</span>;</span><br><span class="line">  <span class="comment">// 横向移速</span></span><br><span class="line">  vertice.<span class="property">velocityX</span> = (<span class="title class_">Math</span>.<span class="title function_">random</span>() - <span class="number">0.5</span>) / <span class="number">3</span>;</span><br><span class="line">  <span class="comment">// 加入到几何</span></span><br><span class="line">  geometry.<span class="property">vertices</span>.<span class="title function_">push</span>(vertice);</span><br><span class="line">&#125;</span><br><span class="line">geometry.<span class="title function_">center</span>();</span><br><span class="line">points = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, pointsMaterial);</span><br><span class="line">points.<span class="property">position</span>.<span class="property">y</span> = -<span class="number">30</span>;</span><br><span class="line">scene.<span class="title function_">add</span>(points);</span><br></pre></td></tr></table></figure>

<h4 id="💡-Points-粒子"><a href="#💡-Points-粒子" class="headerlink" title="💡 Points 粒子"></a><code>💡</code> Points 粒子</h4><p><code>Three.js</code> 中，雨 <code>🌧️</code>、雪 <code>❄️</code>、云 <code>☁️</code>、星辰 <code>✨</code> 等生活中常见的粒子都可以使用 <code>Points</code> 来模拟实现。</p>
<p><strong>构造函数</strong>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(geometry, material);</span><br></pre></td></tr></table></figure>

<ul>
<li>构造函数可以接受两个参数，一个几何体和一个材质，几何体参数用来制定粒子的位置坐标，材质参数用来格式化粒子；</li>
<li>可以基于简单几何体对象如 <code>BoxGeometry</code>、<code>SphereGeometry</code>等作为粒子系统的参数；</li>
<li>一般来讲，需要自己指定顶点来确定粒子的位置。</li>
</ul>
<h4 id="💡-PointsMaterial-点材质"><a href="#💡-PointsMaterial-点材质" class="headerlink" title="💡 PointsMaterial 点材质"></a><code>💡</code> PointsMaterial 点材质</h4><p>通过 <code>THREE.PointsMaterial</code> 可以设置粒子的属性参数，是 <code>Points</code> 使用的默认材质。</p>
<p><strong>构造函数</strong>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">PointsMaterial</span>(parameters : <span class="title class_">Object</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><code>parameters</code>：（可选）用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入。</li>
</ul>
<h4 id="💡-材质属性-blending"><a href="#💡-材质属性-blending" class="headerlink" title="💡 材质属性 .blending"></a><code>💡</code> 材质属性 .blending</h4><p>材质的<code>.blending</code> 属性主要控制纹理融合的叠加方式，<code>.blending</code> 属性的值包括：</p>
<ul>
<li><code>THREE.NormalBlending</code>：默认值</li>
<li><code>THREE.AdditiveBlending</code>：加法融合模式</li>
<li><code>THREE.SubtractiveBlending</code>：减法融合模式</li>
<li><code>THREE.MultiplyBlending</code>：乘法融合模式</li>
<li><code>THREE.CustomBlending</code>：自定义融合模式，与 <code>.blendSrc</code>, <code>.blendDst</code> 或 <code>.blendEquation</code> 属性组合使用</li>
</ul>
<h4 id="💡-材质属性-sizeAttenuation"><a href="#💡-材质属性-sizeAttenuation" class="headerlink" title="💡 材质属性 .sizeAttenuation"></a><code>💡</code> 材质属性 .sizeAttenuation</h4><p>粒子的大小是否会被相机深度衰减，默认为 <code>true</code>（仅限透视相机）。</p>
<h4 id="💡-Three-js-向量"><a href="#💡-Three-js-向量" class="headerlink" title="💡 Three.js 向量"></a><code>💡</code> Three.js 向量</h4><p>几维向量就有几个分量，二维向量 <code>Vector2</code> 有 <code>x</code> 和 <code>y</code> 两个分量，三维向量 <code>Vector3</code> 有<code>x</code>、<code>y</code>、<code>z</code> 三个分量，四维向量 <code>Vector4</code> 有 <code>x</code>、<code>y</code>、<code>z</code>、<code>w</code> 四个分量。</p>
<p><strong>相关 API</strong>：</p>
<ul>
<li><code>Vector2</code>：二维向量</li>
<li><code>Vector3</code>：三维向量</li>
<li><code>Vector4</code>：四维向量</li>
</ul>
<h3 id="镜头控制、缩放适配、动画"><a href="#镜头控制、缩放适配、动画" class="headerlink" title="镜头控制、缩放适配、动画"></a>镜头控制、缩放适配、动画</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>);</span><br><span class="line">controls.<span class="property">target</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">controls.<span class="property">enableDamping</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 禁用平移</span></span><br><span class="line">controls.<span class="property">enablePan</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 禁用缩放</span></span><br><span class="line">controls.<span class="property">enableZoom</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 垂直旋转角度限制</span></span><br><span class="line">controls.<span class="property">minPolarAngle</span> = <span class="number">1.4</span>;</span><br><span class="line">controls.<span class="property">maxPolarAngle</span> = <span class="number">1.8</span>;</span><br><span class="line"><span class="comment">// 水平旋转角度限制</span></span><br><span class="line">controls.<span class="property">minAzimuthAngle</span> = -<span class="number">.6</span>;</span><br><span class="line">controls.<span class="property">maxAzimuthAngle</span> = <span class="number">.6</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>();</span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>);</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animate);</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera);</span><br><span class="line">  controls &amp;&amp; controls.<span class="title function_">update</span>();</span><br><span class="line">  <span class="comment">// 旗帜动画更新</span></span><br><span class="line">  mixer &amp;&amp; mixer.<span class="title function_">update</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Clock</span>().<span class="title function_">getDelta</span>());</span><br><span class="line">  <span class="comment">// 镜头动画</span></span><br><span class="line">  <span class="variable constant_">TWEEN</span> &amp;&amp; <span class="variable constant_">TWEEN</span>.<span class="title function_">update</span>();</span><br><span class="line">  <span class="comment">// 五环自转</span></span><br><span class="line">  fiveCyclesGroup &amp;&amp; (fiveCyclesGroup.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">.01</span>);</span><br><span class="line">  <span class="comment">// 顶点变动之后需要更新，否则无法实现雨滴特效</span></span><br><span class="line">  points.<span class="property">geometry</span>.<span class="property">verticesNeedUpdate</span> = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">// 雪花动画更新</span></span><br><span class="line">  <span class="keyword">let</span> vertices = points.<span class="property">geometry</span>.<span class="property">vertices</span>;</span><br><span class="line">  vertices.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">v</span>) &#123;</span><br><span class="line">    v.<span class="property">y</span> = v.<span class="property">y</span> - (v.<span class="property">velocityY</span>);</span><br><span class="line">    v.<span class="property">x</span> = v.<span class="property">x</span> - (v.<span class="property">velocityX</span>);</span><br><span class="line">    <span class="keyword">if</span> (v.<span class="property">y</span> &lt;= <span class="number">0</span>) v.<span class="property">y</span> = <span class="number">60</span>;</span><br><span class="line">    <span class="keyword">if</span> (v.<span class="property">x</span> &lt;= -<span class="number">20</span> || v.<span class="property">x</span> &gt;= <span class="number">20</span>) v.<span class="property">velocityX</span> = v.<span class="property">velocityX</span> * -<span class="number">1</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>🔗</code> 完整代码：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RyYWdvbmlyLzNkL3RyZWUvbWFzdGVyL3NyYy9jb250YWluZXJzL09seW1waWM=">https://github.com/dragonir/3d/tree/master/src/containers/Olympic<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>💡</code> 本文中主要包含的新知识点包括：</p>
<ul>
<li><code>TorusGeometry</code> 圆环面</li>
<li><code>MeshLambertMaterial</code> 非光泽表面材质</li>
<li><code>MeshDepthMaterial</code> 深度网格材质</li>
<li><code>custromMaterial</code> 自定义材质</li>
<li><code>Points</code> 粒子</li>
<li><code>PointsMaterial</code> 点材质</li>
<li>材质属性 <code>.blending</code>、<code>.sizeAttenuation</code></li>
<li><code>Three.js</code> 向量</li>
</ul>
<p><strong>进一步优化的空间</strong>:</p>
<ul>
<li>添加更多的交互功能、界面样式进一步优化；</li>
<li>吉祥物冰墩墩添加骨骼动画，并可以通过鼠标和键盘控制其移动和交互。</li>
</ul>
<hr>
<p>如此硬核的项目，真的是膜拜 <code>dragonir</code> 大牛。</p>
<blockquote>
<p>声明：本文转载自 dragonir，侵删致歉<br>原文链接：<span class="exturl" data-url="aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC83MDYwMjkyOTQzNjA4ODA3NDYw">https://juejin.cn/post/7060292943608807460<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>C++课程设计：图书管理系统</title>
    <url>/2021/07/15/c++course-design-BMS/</url>
    <content><![CDATA[<h3 id="课程设计目的"><a href="#课程设计目的" class="headerlink" title="课程设计目的"></a>课程设计目的</h3><div class="note info"><p>作为软件工程和计算机科学与技术专业的基本课程，课程设计不仅涵盖了C++语言的知识体系，又与工程的实际需要切实相关。通过课程设计的综合性训练，对开发者解决实际问题能力，编程能力，动手能力有很大的提升，更有助于样成良好的编程习惯</p>
</div>
<h3 id="图书管理系统需求分析"><a href="#图书管理系统需求分析" class="headerlink" title="图书管理系统需求分析"></a>图书管理系统需求分析</h3><p>某高校为更好的管理图书馆，现需设计一简易图书管理系统，实现新书录入，图书资料查询，显示总图书信息功能。要求开发的系统需要具备以下功能：</p>
<div class="note info"><p>1.实现读者借阅图书；<br>2.实现读者归还图书；<br>3.实现对图书信息的综合管理： （设置二级子目录实现信息的增，删，改，查等操作）<br>4.实现对读者信息的综合管理： （设置二级子目录实现信息的增，删，改，查等操作）<br>5.显示用户信息：显示所有用户信息，含学号、姓名、借阅状况等信息；<br>6.返回主界面；</p>
</div>

<h3 id="设计实现"><a href="#设计实现" class="headerlink" title="设计实现"></a>设计实现</h3><div class="note info"><p>本部分设计内容包括：类的设计、数据成员设计、成员函数设计，以及主程序设计（模块函数实现，主函数） 【源码中详细解释，此处不作赘述】</p>
</div>

<h4 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h4><ul>
<li><em><strong>book.h</strong></em></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once   <span class="comment">//包含此语句的文件只会被编译一次,表示在编译时, 该文件只被包含一次, 减少整个编译过程中打开该文件次数</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//图书管理模块</span></span><br><span class="line"><span class="comment">//图书类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">book</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> no;            <span class="comment">//图书编号</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];     <span class="comment">//图书名称</span></span><br><span class="line">    <span class="type">int</span> b_flag;        <span class="comment">//1:在架 2:借出</span></span><br><span class="line">    <span class="type">int</span> b_del;         <span class="comment">//1:存在 2:删除</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">book</span>() &#123;&#125;        <span class="comment">//无参构造函数</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setno</span><span class="params">(<span class="type">int</span> n)</span></span>;    <span class="comment">//设置图书编号</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getno</span><span class="params">()</span></span>;    <span class="comment">//返回图书编号值</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setname</span><span class="params">(<span class="type">char</span> na[])</span></span>;</span><br><span class="line">    <span class="function"><span class="type">char</span>* <span class="title">getname</span><span class="params">()</span></span>;    <span class="comment">//返回图书名称</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">borbook</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">delbook</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addbook</span><span class="params">(<span class="type">int</span> no, <span class="type">char</span> na[])</span></span>;  <span class="comment">//增加图书功能</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图书数据库类</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> BMAX = <span class="number">50</span>;       <span class="comment">//定义书本最大值</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">bdatabase</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    book btarray[BMAX];    <span class="comment">//图书集合</span></span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">bdatabase</span>();</span><br><span class="line">    ~<span class="built_in">bdatabase</span>();       <span class="comment">//析构函数,将btarray[]写到book.txt文件中</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addbooks</span><span class="params">()</span></span>;                 <span class="comment">//在图书数据库中添加图书</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findbooks</span><span class="params">(<span class="type">int</span> suffix)</span></span>;      <span class="comment">//查找图书,该函数用于借书操作,suffix是数组下标</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findbooks</span><span class="params">()</span></span>;                 <span class="comment">//查找图书,该函数用于图书维护</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">editbooks</span><span class="params">()</span></span>;     <span class="comment">//编辑图书</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">delbooks</span><span class="params">()</span></span>;  <span class="comment">//删除图书</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">listbooks</span><span class="params">()</span></span>;      <span class="comment">//显示全部图书</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">booksmanage</span><span class="params">()</span></span>; <span class="comment">//图书信息管理界面 声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">borrow_or_return</span><span class="params">(<span class="type">char</span> br)</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><em><strong>interface.h</strong></em></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">login</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Main_Interface</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Book_Maintenance_Interface</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Reader_Maintenance_Interface</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UI</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><em><strong>reader.h</strong></em></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;book.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读书管理模块</span></span><br><span class="line"><span class="comment">//读者类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">reader</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> no;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> r_del;      <span class="comment">//1存在    2删除</span></span><br><span class="line">    <span class="type">int</span> r_bor;      <span class="comment">//1借过书  2未借书</span></span><br><span class="line">    book brbook;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addreader</span><span class="params">(<span class="type">int</span> id, <span class="type">char</span> na[])</span></span>;   <span class="comment">//增加读者</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setbrbook</span><span class="params">(book bt)</span></span>; <span class="comment">//设置借书标记</span></span><br><span class="line">    <span class="function">book <span class="title">getbrbook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> brbook;  <span class="comment">//返回借书信息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读者数据库类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">rdatabase</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    reader rdarray[BMAX];</span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">rdatabase</span>();</span><br><span class="line">    ~<span class="built_in">rdatabase</span>();</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">addreaders</span><span class="params">()</span></span>;   <span class="comment">//添加读者</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findreaders</span><span class="params">(<span class="type">int</span> suffix)</span></span>;      <span class="comment">//查找读者,该函数用于借书还书操作,suffix是数组下标</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findreaders</span><span class="params">()</span></span>;        <span class="comment">//查找读者,该函数用于读者维护操作</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">editreaders</span><span class="params">()</span></span>;     <span class="comment">//编辑读者信息</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">delreaders</span><span class="params">()</span></span>;  <span class="comment">//删除读者,读者如果借书,需要还书后才能删除</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">listreaders</span><span class="params">()</span></span>;      <span class="comment">//显示所有读者</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readersmange</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

<h4 id="函数实现"><a href="#函数实现" class="headerlink" title="函数实现"></a>函数实现</h4><ul>
<li><em><strong>main.cpp</strong></em></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;interface.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reader.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;          </span><br><span class="line">    <span class="type">char</span> in = <span class="number">-1</span>; <span class="comment">//因为VS环境不能使用为初始化的变量,所以首先赋值为不可能使用的变量值以通过编译 char in=-1</span></span><br><span class="line">    <span class="built_in">login</span>();</span><br><span class="line">    <span class="keyword">do</span>&#123;<span class="comment">//退出系统限制条件</span></span><br><span class="line">       <span class="built_in">UI</span>();  <span class="comment">//系统界面改变</span></span><br><span class="line">       <span class="built_in">Main_Interface</span>();</span><br><span class="line">       cin &gt;&gt; in;</span><br><span class="line">       <span class="keyword">switch</span> (in) &#123;</span><br><span class="line">       <span class="keyword">case</span><span class="number">&#x27;1&#x27;</span>:</span><br><span class="line">           <span class="built_in">borrow_or_return</span>(in);</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">       <span class="keyword">case</span><span class="number">&#x27;2&#x27;</span>:</span><br><span class="line">           <span class="built_in">borrow_or_return</span>(in);</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">       <span class="keyword">case</span><span class="number">&#x27;3&#x27;</span>:</span><br><span class="line">           <span class="built_in">booksmanage</span>();</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">       <span class="keyword">case</span><span class="number">&#x27;4&#x27;</span>:</span><br><span class="line">           <span class="built_in">readersmange</span>();</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">       <span class="keyword">case</span><span class="number">&#x27;0&#x27;</span>: &#123;</span><br><span class="line">           cout &lt;&lt; <span class="string">&quot;感谢您使用本系统,再见!&quot;</span> &lt;&lt; endl;</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">default</span>:</span><br><span class="line">           cout &lt;&lt; <span class="string">&quot;In Put Error!!! Please try again!!!&quot;</span> &lt;&lt; endl;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (in != <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><em><strong>book.cpp</strong></em></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;interface.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reader.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//图书管理模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//图书类函数实现</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">book::setno</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">	no = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">book::getno</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> no;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">book::setname</span><span class="params">(<span class="type">char</span> na[])</span> </span>&#123;</span><br><span class="line">	<span class="built_in">strcpy_s</span>(name, na);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* book:: <span class="built_in">getname</span>() &#123;</span><br><span class="line">	<span class="keyword">return</span> name;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">book::borbook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	b_flag = <span class="number">2</span>;          <span class="comment">//借书标志</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">book::delbook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	b_del = <span class="number">2</span>;           <span class="comment">//删除标志</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">book::addbook</span><span class="params">(<span class="type">int</span> no, <span class="type">char</span> na[])</span> </span>&#123;</span><br><span class="line">	<span class="built_in">setno</span>(no);</span><br><span class="line">	<span class="built_in">setname</span>(na);</span><br><span class="line">	b_flag = <span class="number">1</span>;</span><br><span class="line">	b_del = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图书数据库类</span></span><br><span class="line">bdatabase::<span class="built_in">bdatabase</span>() &#123;</span><br><span class="line">	book b;            <span class="comment">//建立book类对象并b</span></span><br><span class="line">	top = <span class="number">-1</span>;          <span class="comment">//数组下标从0开始,此处top值置为-1可保证从数组第一个元素开始存储信息</span></span><br><span class="line">	<span class="function">fstream <span class="title">file</span><span class="params">(<span class="string">&quot;book.txt&quot;</span>, ios::in)</span></span>;<span class="comment">//打开文件进行读操作,若文件不存在则出错.输入输出指:内存与硬盘间的信息传递</span></span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		file.<span class="built_in">read</span>((<span class="type">char</span>*)&amp;b, <span class="built_in">sizeof</span>(b));<span class="comment">//从文件中读取b个字符到char*指向的缓存中(book类对象b的地址)</span></span><br><span class="line">		<span class="keyword">if</span> (!file) <span class="comment">//若读取到文件尾EOF,返回非0值(一般为1),结束书本数量的计数,关闭文件</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		top++;</span><br><span class="line">		btarray[top] = b;</span><br><span class="line">	&#125;</span><br><span class="line">	file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bdatabase::~<span class="built_in">bdatabase</span>() &#123;</span><br><span class="line">	<span class="function">fstream <span class="title">file</span><span class="params">(<span class="string">&quot;book.txt&quot;</span>, ios::out)</span></span>;<span class="comment">//输出:内存-&gt;硬盘</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (btarray[i].b_del == <span class="number">1</span>)</span><br><span class="line">			file.<span class="built_in">write</span>((<span class="type">char</span>*)&amp;btarray[i], <span class="built_in">sizeof</span>(btarray[i]));</span><br><span class="line">	&#125;</span><br><span class="line">	file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bdatabase::addbooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	book bk;                       <span class="comment">//创建book类对象bk</span></span><br><span class="line">	<span class="type">int</span> no;                        <span class="comment">//书号</span></span><br><span class="line">	<span class="type">char</span> bname[<span class="number">20</span>];                <span class="comment">//书名 用数组存放</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入书号:&quot;</span>;</span><br><span class="line">	cin &gt;&gt; no;</span><br><span class="line">	cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;请输入书名:&quot;</span>;</span><br><span class="line">	cin &gt;&gt; bname;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	bk.b_flag = <span class="number">1</span>;</span><br><span class="line">	bk.<span class="built_in">addbook</span>(no, bname);          <span class="comment">//类中成员函数addbook(),设置书号与书名 修改标志</span></span><br><span class="line">	top++;</span><br><span class="line">	btarray[top] = bk;</span><br><span class="line">	<span class="keyword">return</span>;                           <span class="comment">//返回上个操作界面</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bdatabase::findbooks</span><span class="params">(<span class="type">int</span> suffix)</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> no;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入书号:&quot;</span>;</span><br><span class="line">	cin &gt;&gt; no;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (btarray[i].no == no &amp;&amp; btarray[i].b_del == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bdatabase::findbooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> no;</span><br><span class="line">	<span class="type">char</span> value[<span class="number">6</span>];</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入书号:&quot;</span>;</span><br><span class="line">	cin &gt;&gt; no;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (btarray[i].no == no &amp;&amp; btarray[i].b_del == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (btarray[i].b_flag == <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">strcpy_s</span>(value, <span class="string">&quot;在架&quot;</span>);</span><br><span class="line">			<span class="keyword">if</span> (btarray[i].b_flag == <span class="number">2</span>)</span><br><span class="line">				<span class="built_in">strcpy_s</span>(value, <span class="string">&quot;借出&quot;</span>);</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;书号:&quot;</span> &lt;&lt; btarray[i].no &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; <span class="string">&quot;书名:&quot;</span> &lt;&lt; btarray[i].name &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; <span class="string">&quot;图书状态:&quot;</span> &lt;&lt; value &lt;&lt; endl;</span><br><span class="line">			<span class="keyword">return</span> i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bdatabase::editbooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> cur;</span><br><span class="line">	cur = <span class="built_in">findbooks</span>();</span><br><span class="line">	<span class="keyword">if</span> (cur == <span class="number">1</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;该书不存在&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;当前图书信息--&quot;</span> &lt;&lt; <span class="string">&quot;书号:&quot;</span> &lt;&lt; btarray[cur].no &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; <span class="string">&quot;书名:&quot;</span> &lt;&lt; btarray[cur].name &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请继续操作以修改图书信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;书名:&quot;</span>;</span><br><span class="line">	cin &gt;&gt; btarray[cur].name;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bdatabase::delbooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> cur;</span><br><span class="line">	cur = <span class="built_in">findbooks</span>();</span><br><span class="line">	<span class="keyword">if</span> (cur == <span class="number">1</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (btarray[cur].b_flag == <span class="number">2</span>) &#123;       <span class="comment">//删除时判断图书是否借出</span></span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;该图书已经借出,请归还后删除!&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	btarray[cur].b_del = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bdatabase::listbooks</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">char</span> value[<span class="number">6</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (btarray[i].b_del == <span class="number">1</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (btarray[i].b_flag == <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">strcpy_s</span>(value, <span class="string">&quot;在架&quot;</span>);</span><br><span class="line">			<span class="keyword">if</span> (btarray[i].b_flag == <span class="number">2</span>)</span><br><span class="line">				<span class="built_in">strcpy_s</span>(value, <span class="string">&quot;借出&quot;</span>);</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;书号:&quot;</span> &lt;&lt; btarray[i].no &lt;&lt; <span class="string">&quot;书名:&quot;</span> &lt;&lt; btarray[i].name &lt;&lt; <span class="string">&quot;图书状态:&quot;</span> &lt;&lt; value &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">borrow_or_return</span><span class="params">(<span class="type">char</span> br)</span> </span>&#123; <span class="comment">//借书、还书函数，参数br:判断 “借书”,“还书”.  1 借书 2 还书</span></span><br><span class="line">	<span class="type">int</span> reader_ID = <span class="number">0</span>;  <span class="comment">//读者id</span></span><br><span class="line">	<span class="type">int</span> book_ID = <span class="number">0</span>;    <span class="comment">//书的id</span></span><br><span class="line">	<span class="type">int</span> rsuffix, bsuffix;</span><br><span class="line">	bdatabase t_bd;</span><br><span class="line">	rdatabase t_rd;</span><br><span class="line">	<span class="keyword">if</span> (br == <span class="string">&#x27;1&#x27;</span>) &#123;    <span class="comment">//借书</span></span><br><span class="line">		rsuffix = t_rd.<span class="built_in">findreaders</span>(reader_ID);</span><br><span class="line">		bsuffix = t_bd.<span class="built_in">findbooks</span>(book_ID);</span><br><span class="line">		<span class="keyword">if</span> (rsuffix == <span class="number">-1</span> || bsuffix == <span class="number">-1</span>)</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		<span class="keyword">if</span> (t_bd.btarray[bsuffix].b_flag == <span class="number">2</span>) &#123;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;图书已经借出,请选择其它图书&quot;</span> &lt;&lt; endl;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		t_bd.btarray[bsuffix].b_flag = <span class="number">2</span>;</span><br><span class="line">		t_rd.rdarray[rsuffix].r_bor = <span class="number">1</span>;</span><br><span class="line">		t_rd.rdarray[rsuffix].brbook = t_bd.btarray[bsuffix];</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (br == <span class="string">&#x27;2&#x27;</span>) &#123;</span><br><span class="line">		rsuffix = t_rd.<span class="built_in">findreaders</span>(reader_ID);</span><br><span class="line">		bsuffix = t_bd.<span class="built_in">findbooks</span>(book_ID);</span><br><span class="line">		<span class="keyword">if</span> (rsuffix == <span class="number">-1</span> || bsuffix == <span class="number">-1</span>)</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		<span class="keyword">if</span> (t_rd.rdarray[rsuffix].brbook.no == t_bd.btarray[bsuffix].no) &#123;</span><br><span class="line">			t_bd.btarray[bsuffix].b_flag = <span class="number">1</span>;</span><br><span class="line">			t_rd.rdarray[rsuffix].r_bor = <span class="number">2</span>;</span><br><span class="line">			t_rd.rdarray[rsuffix].brbook = t_bd.btarray[bsuffix];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;请重新输入,读者借阅图书书号错误&quot;</span> &lt;&lt; endl;</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">booksmanage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">char</span> in;</span><br><span class="line">	bdatabase bd;</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">		<span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">//切换UI时,刷新缓冲区当前内容,完成下次更新</span></span><br><span class="line">		<span class="built_in">UI</span>();</span><br><span class="line">		<span class="built_in">Book_Maintenance_Interface</span>();</span><br><span class="line">		cin &gt;&gt; in;</span><br><span class="line">		<span class="keyword">switch</span> (in) &#123;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;1&#x27;</span>:</span><br><span class="line">			bd.<span class="built_in">addbooks</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;2&#x27;</span>:</span><br><span class="line">			bd.<span class="built_in">editbooks</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;3&#x27;</span>:</span><br><span class="line">			bd.<span class="built_in">delbooks</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;4&#x27;</span>:</span><br><span class="line">			bd.<span class="built_in">findbooks</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;5&#x27;</span>:</span><br><span class="line">			bd.<span class="built_in">listbooks</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span><span class="number">&#x27;6&#x27;</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;In Put Error!!! Please try again!!!&quot;</span> &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">while</span> (in != <span class="string">&#x27;6&#x27;</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><em><strong>interface.cpp</strong></em></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span>      <span class="comment">//system() 库</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> passward[<span class="number">2</span>] = <span class="string">&quot;2&quot;</span>; <span class="comment">//此变量用于存储登录密码      </span></span><br><span class="line">    <span class="type">char</span> s[<span class="number">2</span>];<span class="comment">//获取输入的密码,用于验证和登录密码是否相同  </span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">3</span>;      <span class="comment">//限定输入错误次数是3次</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入登录密码: &quot;</span>;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(s, passward)) &#123; <span class="comment">//若密码正确</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;恭喜您登陆成功!!!请稍等......\n\n&quot;</span>;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Waring!!!密码输入错误,请退出系统后重新尝试\n&quot;</span>;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Main_Interface</span><span class="params">()</span> </span>&#123;               <span class="comment">//主界面 </span></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>); <span class="comment">//清屏函数 clean screen</span></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;title                图书管理系统   项目开发人员 : XXX &quot;</span>);<span class="comment">//对控制台文件名重命名</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n\n\n\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t***************欢 迎 进 入 图 书 管 理 系 统***********************\n&quot;</span>;<span class="comment">//与case顺序一致</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            1.   借书                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            2.   还书                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            3.   图书信息管理                             * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            4.   读者信息管理                             * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            0.   退出                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*******************************************************************\n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;                                                             &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t         Copyright (C) 2020-2021. All Rights Reserved  \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t\n请选择您要执行的操作编号(1-4-0): &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Book_Maintenance_Interface</span><span class="params">()</span> </span>&#123;                           <span class="comment">//图书维护子菜单</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n\n\n\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t***************图 书 信 息 维 护 管 理 员 后 台********************\n&quot;</span>;<span class="comment">//与case顺序一致</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            1.   添加                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            2.   修改                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            3.   删除                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            4.   查找                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            5.   显示                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            6.   返回上级操作                             * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*******************************************************************\n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;                                                             &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t\n请选择您要执行的操作编号(1-6): &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Reader_Maintenance_Interface</span><span class="params">()</span> </span>&#123;                            <span class="comment">//读者维护子菜单</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n\n\n\n\n&quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t***************读 者 信 息 维 护 管 理 员 后 台********************\n&quot;</span>;<span class="comment">//与case顺序一致</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            1.   添加                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            2.   修改                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            3.   删除                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            4.   查找                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            5.   显示                                     * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*\t            6.   返回上级操作                             * \n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t*******************************************************************\n &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;                                                             &quot;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t\t\n请选择您要执行的操作编号(1-6): &quot;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">UI</span><span class="params">()</span> <span class="comment">//自定义函数实现颜色变化</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;color F0&quot;</span>);<span class="comment">//前景黑 背景亮白 白底黑字 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><em><strong>reader.cpp</strong></em></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reader.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;interface.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读书管理模块</span></span><br><span class="line"><span class="comment">//读者类函数实现</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reader::addreader</span><span class="params">(<span class="type">int</span> id, <span class="type">char</span> na[])</span> </span>&#123;</span><br><span class="line">    no = id;</span><br><span class="line">    <span class="built_in">strcpy_s</span>(name, na);</span><br><span class="line">    r_del = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reader::setbrbook</span><span class="params">(book bt)</span> </span>&#123;</span><br><span class="line">    brbook = bt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rdatabase::<span class="built_in">rdatabase</span>() &#123;</span><br><span class="line">    reader rd;</span><br><span class="line">    top = <span class="number">-1</span>;</span><br><span class="line">    <span class="function">fstream <span class="title">file</span><span class="params">(<span class="string">&quot;reader.txt&quot;</span>, ios::in)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        file.<span class="built_in">read</span>((<span class="type">char</span>*)&amp;rd, <span class="built_in">sizeof</span>(rd));</span><br><span class="line">        <span class="keyword">if</span> (!file) <span class="keyword">break</span>;</span><br><span class="line">        top++;</span><br><span class="line">        rdarray[top] = rd;</span><br><span class="line">    &#125;</span><br><span class="line">    file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rdatabase::~<span class="built_in">rdatabase</span>() &#123;</span><br><span class="line">    <span class="function">fstream <span class="title">file</span><span class="params">(<span class="string">&quot;reader.txt&quot;</span>, ios::out)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rdarray[i].r_del == <span class="number">1</span>)</span><br><span class="line">            file.<span class="built_in">write</span>((<span class="type">char</span>*)&amp;rdarray[i], <span class="built_in">sizeof</span>(rdarray[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">rdatabase::addreaders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    reader rd;</span><br><span class="line">    <span class="type">int</span> no;</span><br><span class="line">    <span class="type">char</span> rname[<span class="number">20</span>];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入学号:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; no;</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;请输入姓名:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; rname;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    rd.<span class="built_in">addreader</span>(no, rname);</span><br><span class="line">    rd.r_bor = <span class="number">2</span>;</span><br><span class="line">    top++;</span><br><span class="line">    rdarray[top] = rd;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rdatabase::findreaders</span><span class="params">(<span class="type">int</span> suffix)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> no;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入学号:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; no;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rdarray[i].no == no &amp;&amp; rdarray[i].r_del == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rdatabase::findreaders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> no;</span><br><span class="line">    <span class="type">char</span> value[<span class="number">3</span>];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入学号:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; no;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rdarray[i].no == no &amp;&amp; rdarray[i].r_del == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rdarray[i].r_bor == <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">strcpy_s</span>(value, <span class="string">&quot;借&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (rdarray[i].r_bor == <span class="number">2</span>)</span><br><span class="line">                <span class="built_in">strcpy_s</span>(value, <span class="string">&quot;无&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;学号:&quot;</span> &lt;&lt; rdarray[i].no &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; rdarray[i].name &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; <span class="string">&quot;是否借书:&quot;</span> &lt;&lt; value &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">rdatabase::editreaders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> cur;</span><br><span class="line">    cur = <span class="built_in">findreaders</span>();</span><br><span class="line">    <span class="keyword">if</span> (cur == <span class="number">1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;未找到该学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请修改数据:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;姓名:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; rdarray[cur].name;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">rdatabase::delreaders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> cur;</span><br><span class="line">    cur = <span class="built_in">findreaders</span>();</span><br><span class="line">    <span class="keyword">if</span> (cur == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (rdarray[cur].r_bor == <span class="number">1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;该用户已借出图书,请归还后删除!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    rdarray[cur].r_del = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">rdatabase::listreaders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> value[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= top; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rdarray[i].r_del == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rdarray[i].r_bor == <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">strcpy_s</span>(value, <span class="string">&quot;借&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (rdarray[i].r_bor == <span class="number">2</span>)</span><br><span class="line">                <span class="built_in">strcpy_s</span>(value, <span class="string">&quot;无&quot;</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;学号:&quot;</span> &lt;&lt; rdarray[i].no &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; rdarray[i].name &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; <span class="string">&quot;是否借书:&quot;</span> &lt;&lt; value &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readersmange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> in;</span><br><span class="line">    rdatabase bd;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);  <span class="comment">//暂停界面,以便显示所需数据</span></span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">        <span class="built_in">UI</span>();</span><br><span class="line">        <span class="built_in">Reader_Maintenance_Interface</span>();</span><br><span class="line">        cin &gt;&gt; in;</span><br><span class="line">        <span class="keyword">switch</span> (in) &#123;</span><br><span class="line">        <span class="keyword">case</span><span class="number">&#x27;1&#x27;</span>:</span><br><span class="line">            bd.<span class="built_in">addreaders</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span><span class="number">&#x27;2&#x27;</span>:</span><br><span class="line">            bd.<span class="built_in">editreaders</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span><span class="number">&#x27;3&#x27;</span>:</span><br><span class="line">            bd.<span class="built_in">delreaders</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span><span class="number">&#x27;4&#x27;</span>:</span><br><span class="line">            bd.<span class="built_in">findreaders</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span><span class="number">&#x27;5&#x27;</span>:</span><br><span class="line">            bd.<span class="built_in">listreaders</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span><span class="number">&#x27;6&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;In Put Error!!! Please try again!!!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (in != <span class="string">&#x27;6&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>注：本程序在Visual Studio 2019正常运行，其他配置环境可能有所差异，有问题的朋友可以留言 &#x2F; 私信解决，欢迎交流学习</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>用代码绘制圣诞树</title>
    <url>/2021/12/14/code-draw-christmas-tree/</url>
    <content><![CDATA[<blockquote>
<p>马上圣诞节了，祝大家圣诞快乐，快来看看程序员的圣诞节都做了什么</p>
</blockquote>
<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://img-blog.csdnimg.cn/4805d7a5daf0487192f813c5dab13b5e.gif"></p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Author: coder-jason</span></span><br><span class="line"><span class="string">Date: 2021-12-14 15:49:17</span></span><br><span class="line"><span class="string">LastEditTime: 2021-12-14 16:21:45</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random </span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">n = <span class="number">94.0</span> <span class="comment"># main line height</span></span><br><span class="line"></span><br><span class="line">speed(<span class="string">&quot;normal&quot;</span>) <span class="comment"># setting speeds: fast slow fastest slowest</span></span><br><span class="line">setup(<span class="number">700</span>,<span class="number">650</span>)  <span class="comment"># setting window size</span></span><br><span class="line">screensize(bg=<span class="string">&#x27;seashell&#x27;</span>)</span><br><span class="line">left(<span class="number">90</span>)</span><br><span class="line">forward(<span class="number">3</span> * n)</span><br><span class="line">color(<span class="string">&quot;orange&quot;</span>, <span class="string">&quot;yellow&quot;</span>)</span><br><span class="line">begin_fill()</span><br><span class="line">left(<span class="number">126</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    forward(n / <span class="number">5</span>)</span><br><span class="line">    right(<span class="number">144</span>)</span><br><span class="line">    forward(n / <span class="number">5</span>)</span><br><span class="line">    left(<span class="number">72</span>)</span><br><span class="line">end_fill()</span><br><span class="line">right(<span class="number">126</span>)</span><br><span class="line"></span><br><span class="line">color(<span class="string">&quot;dark green&quot;</span>)</span><br><span class="line">backward(n * <span class="number">4.8</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tree</span>(<span class="params">d, s</span>):</span><br><span class="line">    <span class="keyword">if</span> d &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    forward(s)</span><br><span class="line">    tree(d - <span class="number">1</span>, s * <span class="number">.8</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    tree(d - <span class="number">3</span>, s * <span class="number">.5</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    tree(d - <span class="number">3</span>, s * <span class="number">.5</span>)</span><br><span class="line">    right(<span class="number">120</span>)</span><br><span class="line">    backward(s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tree(<span class="number">15</span>, n)</span><br><span class="line">backward(n / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    a = <span class="number">200</span> - <span class="number">400</span> * random.random()</span><br><span class="line">    b = <span class="number">10</span> - <span class="number">20</span> * random.random()</span><br><span class="line">    up()</span><br><span class="line">    forward(b)</span><br><span class="line">    left(<span class="number">90</span>)</span><br><span class="line">    forward(a)</span><br><span class="line">    down()</span><br><span class="line">    <span class="keyword">if</span> random.randint(<span class="number">0</span>, <span class="number">1</span>) == <span class="number">0</span>:</span><br><span class="line">        color(<span class="string">&#x27;tomato&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        color(<span class="string">&#x27;wheat&#x27;</span>)</span><br><span class="line">    circle(<span class="number">2</span>)</span><br><span class="line">    up()</span><br><span class="line">    backward(a)</span><br><span class="line">    right(<span class="number">90</span>)</span><br><span class="line">    backward(b)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">60</span>)</span><br></pre></td></tr></table></figure>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h2><p><img src="https://img-blog.csdnimg.cn/9c40fb51e6f64a669fc74f1e1b181405.gif"></p>
<h2 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h2><h3 id="Start-类"><a href="#Start-类" class="headerlink" title="Start 类"></a>Start 类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: coder-jason</span></span><br><span class="line"><span class="comment"> * @Date: 2021-12-14 15:26:49</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2021-12-14 16:43:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.christmasTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Start</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Frame</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Frame-类"><a href="#Frame-类" class="headerlink" title="Frame 类"></a>Frame 类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: coder-jason</span></span><br><span class="line"><span class="comment"> * @Date: 2021-12-14 15:26:49</span></span><br><span class="line"><span class="comment"> * @LastEditTime: 2021-12-14 16:43:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.christmasTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Frame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    Panel p;</span><br><span class="line"></span><br><span class="line">    Frame() &#123;</span><br><span class="line">        p = <span class="keyword">new</span> <span class="title class_">Panel</span>();</span><br><span class="line">        add(p);</span><br><span class="line">        setBounds(<span class="number">200</span>, <span class="number">200</span>, <span class="number">650</span>, <span class="number">500</span>); <span class="comment">//设置窗口尺寸和位置 x,y坐标 width,height窗口宽高</span></span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">        validate();</span><br><span class="line">        setDefaultCloseOperation(Frame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Panel-类"><a href="#Panel-类" class="headerlink" title="Panel 类"></a>Panel 类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.christmasTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.applet.Applet;</span><br><span class="line"><span class="keyword">import</span> java.applet.AudioClip;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Panel</span> <span class="keyword">extends</span> <span class="title class_">JPanel</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    JButton onOff;</span><br><span class="line">    Timer time;</span><br><span class="line">    <span class="type">boolean</span> flag;</span><br><span class="line">    <span class="type">boolean</span> color;</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;your music location&quot;</span>);</span><br><span class="line">    <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">URI</span> <span class="variable">uri</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">AudioClip</span> <span class="variable">clip</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    Panel() &#123;</span><br><span class="line">        setLayout(<span class="literal">null</span>);</span><br><span class="line">        <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;off.png&quot;</span>);</span><br><span class="line">        icon.setImage(icon.getImage().getScaledInstance(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>));</span><br><span class="line">        onOff = <span class="keyword">new</span> <span class="title class_">JButton</span>();</span><br><span class="line">        onOff.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        onOff.setIcon(icon);</span><br><span class="line">        onOff.setBorder(<span class="literal">null</span>);</span><br><span class="line">        onOff.setContentAreaFilled(<span class="literal">false</span>);</span><br><span class="line">        onOff.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">        add(onOff);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        color = <span class="literal">true</span>;</span><br><span class="line">        time = <span class="keyword">new</span> <span class="title class_">Timer</span>(<span class="number">300</span>, <span class="built_in">this</span>);</span><br><span class="line">        time.stop();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            uri = file.toURI();</span><br><span class="line">            url = uri.toURL();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e1) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        clip = Applet.newAudioClip(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paintComponent</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        x = <span class="number">380</span>;</span><br><span class="line">        y = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            <span class="type">ImageIcon</span> <span class="variable">image1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;star1.png&quot;</span>);</span><br><span class="line">            g.drawImage(image1.getImage(), x - <span class="number">3</span>, y - <span class="number">25</span>, <span class="number">28</span>, <span class="number">26</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">ImageIcon</span> <span class="variable">image1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;star2.png&quot;</span>);</span><br><span class="line">            g.drawImage(image1.getImage(), x - <span class="number">3</span>, y - <span class="number">25</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Color</span> <span class="variable">red</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="type">Color</span> <span class="variable">yellow</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">255</span>, <span class="number">241</span>, <span class="number">0</span>);</span><br><span class="line">        drawTree(<span class="number">1</span>, <span class="number">4</span>, g);</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">6</span>, yellow, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">8</span>, red, g);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">6</span>, red, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">8</span>, yellow, g);</span><br><span class="line">        &#125;</span><br><span class="line">        x = <span class="number">380</span> - <span class="number">2</span> * <span class="number">22</span>;</span><br><span class="line">        drawTree(<span class="number">3</span>, <span class="number">6</span>, g);</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">10</span>, yellow, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">12</span>, red, g);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">10</span>, red, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">12</span>, yellow, g);</span><br><span class="line">        &#125;</span><br><span class="line">        x = <span class="number">380</span> - <span class="number">4</span> * <span class="number">22</span>;</span><br><span class="line">        drawTree(<span class="number">5</span>, <span class="number">8</span>, g);</span><br><span class="line">        <span class="keyword">if</span> (color) &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">14</span>, yellow, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">16</span>, red, g);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawDecoration(x + <span class="number">22</span>, y - <span class="number">44</span>, <span class="number">14</span>, red, g);</span><br><span class="line">            drawDecoration(x, y - <span class="number">22</span>, <span class="number">16</span>, yellow, g);</span><br><span class="line">        &#125;</span><br><span class="line">        x = <span class="number">380</span> - <span class="number">1</span> * <span class="number">22</span>;</span><br><span class="line">        drwaRoot(g);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">drawTree</span><span class="params">(<span class="type">int</span> from, <span class="type">int</span> to, Graphics g)</span> &#123;</span><br><span class="line">        <span class="type">Color</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">9</span>, <span class="number">124</span>, <span class="number">37</span>);</span><br><span class="line">        g.setColor(c);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> from; i &lt;= to; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; (i * <span class="number">2</span> - <span class="number">1</span>); j++) &#123;</span><br><span class="line">                g.fillRect(x, y, <span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">                x += <span class="number">22</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            x = <span class="number">380</span> - i * <span class="number">22</span>;</span><br><span class="line">            y += <span class="number">22</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">drawDecoration</span><span class="params">(<span class="type">int</span> tx, <span class="type">int</span> ty, <span class="type">int</span> num, Color c, Graphics g)</span> &#123;</span><br><span class="line">        g.setColor(c);</span><br><span class="line">        g.fillRoundRect(tx, ty, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>);</span><br><span class="line">        g.fillRoundRect(tx + num * <span class="number">22</span>, ty, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">drwaRoot</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        <span class="type">Color</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">131</span>, <span class="number">78</span>, <span class="number">0</span>);</span><br><span class="line">        g.setColor(c);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                g.fillRect(x, y, <span class="number">20</span>, <span class="number">20</span>);</span><br><span class="line">                x += <span class="number">22</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            x = <span class="number">380</span> - <span class="number">1</span> * <span class="number">22</span>;</span><br><span class="line">            y += <span class="number">22</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.getSource() == onOff) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;on.png&quot;</span>);</span><br><span class="line">                icon.setImage(icon.getImage().getScaledInstance(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>));</span><br><span class="line">                onOff.setIcon(icon);</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                clip.loop();</span><br><span class="line">                time.restart();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">ImageIcon</span> <span class="variable">icon</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;off.png&quot;</span>);</span><br><span class="line">                icon.setImage(icon.getImage().getScaledInstance(<span class="number">50</span>, <span class="number">50</span>, <span class="number">0</span>));</span><br><span class="line">                onOff.setIcon(icon);</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                time.stop();</span><br><span class="line">                clip.stop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.getSource() == time) &#123;</span><br><span class="line">            repaint();</span><br><span class="line">            color = !color;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/5b03a8744c8c42f69d1bacf73fbf7cc2.png"></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>拷贝构造函数剖析</title>
    <url>/2021/05/08/copy-constructor-function-explain/</url>
    <content><![CDATA[<h1 id="拷贝构造函数"><a href="#拷贝构造函数" class="headerlink" title="拷贝构造函数"></a>拷贝构造函数</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><blockquote>
<p>解释：拷贝构造函数是一种特殊的构造函数，它具有一般构造函数的所有特性，但其形参是本类对象的引用</p>
</blockquote>
<blockquote>
<p>作用：使用一个已经存在的对象（由拷贝构造函数参数指定）去初始化同类的一个新对象</p>
</blockquote>
<blockquote>
<p>定义格式：<strong>构造函数名 （&amp;类名）；</strong></p>
</blockquote>
<p>三种使用情况</p>
<div class="note info"><ol>
<li>用一个对象去初始化同类的另一个对象；</li>
<li>函数的形参是类的对象，调用函数时形参与实参的结合；</li>
<li>函数返回值是类的对象，函数执行返回调用；</li>
</ol>
</div>

<p>注意</p>
<div class="note danger"><ol>
<li>拷贝构造函数的参数采用引用方式。若把一个真实的类对象作为参数传到拷贝构造函数，引起无穷递归;</li>
<li>拷贝构造函数的名字必须与类名相同，且无返回值;</li>
<li>拷贝构造函数只有一个参数，必须为本类对象的引用；</li>
<li>每一个类必须有一个拷贝构造函数。若用户定义类时未给出拷贝构造函数，则系统会自动产生一个缺省的拷贝构造函数;</li>
</ol>
</div>

<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>该例重点阐述：为什么拷贝构造函数的参数必须为同类对象的引用?</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Complex</span> &#123;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="type">double</span> real, image;</span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		<span class="built_in">Complex</span>(<span class="type">double</span> r, <span class="type">double</span> i);   <span class="comment">//声明构造函数</span></span><br><span class="line">		<span class="built_in">Complex</span>(Complex &amp;c);           <span class="comment">//声明拷贝构造函数 </span></span><br><span class="line">		<span class="function">Complex <span class="title">add</span><span class="params">(Complex c)</span></span>;</span><br><span class="line">		<span class="function"><span class="type">void</span> <span class="title">Output</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Complex::<span class="built_in">Complex</span>(<span class="type">double</span> r, <span class="type">double</span> i): <span class="built_in">real</span>(r), <span class="built_in">image</span>(i) &#123;   <span class="comment">//构造函数初始化列表</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;调用两个参数的构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Complex::<span class="built_in">Complex</span>(Complex &amp;c) &#123;</span><br><span class="line">	real = c.real;</span><br><span class="line">	image = c.image;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;调用拷贝构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Complex::Output</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;(&quot;</span> &lt;&lt; real &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; image &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Complex <span class="title">Complex::add</span><span class="params">(Complex c)</span> </span>&#123;</span><br><span class="line">	<span class="function">Complex  <span class="title">y</span><span class="params">(real + c.real, image + c.image)</span></span>;</span><br><span class="line">	<span class="keyword">return</span>  y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(Complex n)</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;n=&quot;</span>;</span><br><span class="line">	n.<span class="built_in">Output</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="function">Complex <span class="title">a</span><span class="params">(<span class="number">3.0</span>, <span class="number">4.0</span>)</span>, <span class="title">b</span><span class="params">(<span class="number">5.6</span>, <span class="number">7.9</span>)</span></span>;  <span class="comment">//创建Complex类的两个对象a,b</span></span><br><span class="line">	<span class="function">Complex <span class="title">c</span><span class="params">(a)</span></span>;                      <span class="comment">//使用拷贝构造函数,用已创建的对象a初始化要建立的另一个对象c</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;a=&quot;</span>;</span><br><span class="line">	a.<span class="built_in">Output</span>();</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;c=&quot;</span>;</span><br><span class="line">	c.<span class="built_in">Output</span>();</span><br><span class="line">	<span class="built_in">f</span>(b);</span><br><span class="line">	c = a.<span class="built_in">add</span>(b);</span><br><span class="line">	c.<span class="built_in">Output</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>程序运行结果</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">调用两个参数的构造函数</span><br><span class="line">调用两个参数的构造函数</span><br><span class="line">调用拷贝构造函数</span><br><span class="line">a=(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">c=(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">调用拷贝构造函数</span><br><span class="line">n=(<span class="number">5.6</span>,<span class="number">7.9</span>)</span><br><span class="line">调用拷贝构造函数</span><br><span class="line">调用两个参数的构造函数</span><br><span class="line">(<span class="number">8.6</span>,<span class="number">11.9</span>)</span><br></pre></td></tr></table></figure>

<div class="note info"><ol>
<li>本例中，当程序执行到main()函数 Complex c(a); 语句时，程序会到拷贝构造函数完成“用存在的类对象a，初始化c的工作”。但是，若此时拷贝构造函数的参数是一个真实的类对象而非同类对象的引用，则无法完成对类对象c的初始化工作</li>
<li>因为没有一块儿内存空间去接收传递的对象，&amp;c就相当于是a的一个别称，该临时对象用于完成对c的赋值，拷贝构造函数定义中 real&#x3D;c.real; real就是c的实部,c.real就是用a的实部去给c的实部赋值,虚部部分同理,所以会无限次调用该函数，即引起无穷递归</li>
</ol>
</div>


]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>秒懂 Git 与 Gitee </title>
    <url>/2021/08/02/distinguish-git-gitee/</url>
    <content><![CDATA[<h1 id="避坑"><a href="#避坑" class="headerlink" title="避坑"></a>避坑</h1><p>声明一个误区：Git并不是我们常用的GitHub，GitHub是基于Git的代码托管服务平台，而Git则是分布式版本控制系统。相信不少人都认为他们是同一个东西，最开始我也这么认为</p>
<h1 id="Git环境"><a href="#Git环境" class="headerlink" title="Git环境"></a>Git环境</h1><p>既然要使用Git，那么我们首先就要安装并配置Git的环境，<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">点击这里<i class="fa fa-external-link-alt"></i></span>下载（Windows操作系统），点击Download按钮即可</p>
<image src="https://img-blog.csdnimg.cn/2348e786eb7a4c2da133338a12aa6670.png" width="80%">

<p>安装过程不再叙述，直接使用默认配置，一“Next(站)” 到底</p>
<p>下面我们配置环境变量信息（前段时间的博客中已经详细解释过，不了解的朋友可以<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMjY5OTYxL2FydGljbGUvZGV0YWlscy8xMTg4NzU5Njc=">点击这里<i class="fa fa-external-link-alt"></i></span>查看），打开 Path 变量后，添加本地环境安装目录【确认好文件到达 cmd 】</p>
<p><img src="https://img-blog.csdnimg.cn/3c49d776d6dd4ee4bc20bb3bde0cb9ba.png"></p>
<p>安装完成后，你可能没有看到桌面的快捷方式，不要着急。我们在Windows搜索框中搜索Git就可以看到这样几个图标</p>
<p><img src="https://img-blog.csdnimg.cn/ba1113bb892c45d6bbf5906242cf2de4.png"></p>
<p>可以直接点击 Git Bash 或者在桌面任意位置右键，打开 Git Bash Here</p>
<p><img src="https://img-blog.csdnimg.cn/1d89848f17c144a6a3823098892c6c44.png"></p>
<p>Git 提供了一个叫做 git config 的工具，用来配置、读取相应的工作环境变量。我们使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的昵称&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>命令配置个人的用户名称和电子邮件信息</p>
<p>使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure>
<p>查看已有配置信息</p>
<p>列举一些常用命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init  //初始化仓库</span><br><span class="line">git add . //添加文件到暂存区</span><br><span class="line">git commit -m <span class="string">&quot;注释信息&quot;</span>  //提交暂存区内容到仓库中</span><br><span class="line">git status  //查看仓库状态，显示修改文件</span><br><span class="line">git <span class="built_in">clone</span>  //下载远程仓库中的项目</span><br><span class="line">git remote //查看现有的远程库</span><br><span class="line"></span><br><span class="line">git pull //下载远程库代码并合并</span><br><span class="line">git push //推送代码到远程</span><br></pre></td></tr></table></figure>



<h1 id="链接Gitee"><a href="#链接Gitee" class="headerlink" title="链接Gitee"></a>链接Gitee</h1><p>虽然我忠爱GitHub，但是由于网络问题，使用Gitee还是较多；首先你需要有一个码云账号，<span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20v">点击这里<i class="fa fa-external-link-alt"></i></span>注册，进去之后右上角头像位置找到SSH公钥添加位置</p>
<image src="https://img-blog.csdnimg.cn/49e41598e4014fd4a935815f914a6458.png" width="75%">

<p>我们在桌面右键进入git bash here，运行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>
<p>因为我已经添加过了，所以提示：“是否再次写入？”，注意：这里输入邮箱回车后，<mark class="label ">不要输密码，不要输密码，不要输密码！！！</mark>（重要的事情说三遍）不然你会发现以后每次上传时仍然需要输入密码【不是吧，不是吧，不会还有人想每次提交都输一遍密码吧（有的话请略过该条）emmm..】</p>
<p>在本地路径下找到 id_rsa.pub 文件，记事本打开后复制里面的内容</p>
<p><img src="https://img-blog.csdnimg.cn/24777a7eb4794cadb4d0ce999c34f3ed.png"></p>
<p>然后粘贴在Gitee这里，标题可以更改（一般输入的邮箱就是标题，自动生成），保存即可</p>
<image src="https://img-blog.csdnimg.cn/6f1e73dfa6c049ea802b11127117de0f.png" width="90%">

<p>现在就可以去体验Git的妙用啦！！</p>
<hr>
<p>Tips：IDEA中的使用都会有对应的按钮进行操作，比命令行更方便，使用方法一致，不同的状态还有不同的颜色标识提示，快去试试吧</p>
]]></content>
      <categories>
        <category>版本控制</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Dos运行Java版HelloWorld</title>
    <url>/2021/08/30/dos-java-helloworld/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>写给刚刚入坑 Java 的各位，无论你是计算机领域从业者，亦或是科班出身的专业人才。当然也包括我在内，Hello World 相信大家都不陌生，找了好久才找到我入行以来的第一段程序</p>
<image src="https://img-blog.csdnimg.cn/68bda6e17f79487e825d2e0d13c87438.png" width="50%">

<p>有没有让你回想起当年用 VC ++ 6.0 码代码的日子呢？像 Python、C、C++、VB 等编程语言，它们有着不同的语法结构，实现方式各不相同，今天使用 Dos命令实现 Java 版 Hello World</p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>在这之前请确保设备已安装好 <span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9qZGsvMTAxMQ==">JDK<i class="fa fa-external-link-alt"></i></span>，配置详情<span class="exturl" data-url="aHR0cHM6Ly9kcC1qc29uLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzExODg3NTk2Nw==">参阅这里<i class="fa fa-external-link-alt"></i></span><br>D盘下建立 HelloWorld.txt 文件，输入代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>另存文件格式为 <mark class="label ">.java</mark></p>
<image src="https://img-blog.csdnimg.cn/6d9c585f1af44388af9572a89483836e.png" width="65%">

<p>组合键 <a class="btn" href="#">Windows</a>+<a class="btn" href="#">R</a>，输入 cmd 打开命令提示工具 cmd.exe</p>
<image src="https://img-blog.csdnimg.cn/383d0fffa9ca4ff1aad0aacb4e15657a.png" width="40%">

<p>依次输入命令</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">d:                         <span class="comment">//切换到该目录下</span></span><br><span class="line">javac HelloWorld.java      <span class="comment">//javac:编译器,将程序转换成字节码</span></span><br><span class="line">java HelloWorld            <span class="comment">//java:运行编译后的java程序(文件后缀.class)</span></span><br></pre></td></tr></table></figure>
<h1 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h1><image src="https://img-blog.csdnimg.cn/419c6eb0be714bf88cf460f7b5f7f875.png" width="50%">]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>dos</tag>
      </tags>
  </entry>
  <entry>
    <title>练习10-素数判断</title>
    <url>/2021/08/17/exercise10/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>编写一个判断素数的函数，在主函数输入一个整数，输出该数是否为素数的信息。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）函数思想；<br>（2）素数定义；<br>（3）变量定义；<br>（4）接收用户输入；<br>（5）判断输出；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> input)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> (<span class="type">int</span>) Math.sqrt(input);</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="number">1</span> || input &lt;= <span class="number">0</span>)</span><br><span class="line">            System.out.println(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (input % i == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> input;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.print(<span class="string">&quot;please enter an integer:&quot;</span>);</span><br><span class="line">        input = user.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (isPrime(input))</span><br><span class="line">            System.out.println(input + <span class="string">&quot; is prime&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(input + <span class="string">&quot; not prime&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>调用数学函数<code>sqrt()</code>时，注意不同数据类型之间的转换；</li>
<li>使用布尔型函数判断是否为素数，注意这时的返回值不再是 0 和 1，而是<code>true</code>和<code>false</code>。</li>
</ol>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> input)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="number">1</span> || input &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> n = <span class="built_in">sqrt</span>(input);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (input % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//若条件满足,能被其他数整除,不是素数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> input, i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter the data:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">    <span class="keyword">if</span> (isPrime(input))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d is prime&quot;</span>, input);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d not prime&quot;</span>, input);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><h3 id="素数定义："><a href="#素数定义：" class="headerlink" title="素数定义："></a>素数定义：</h3><blockquote>
<p>素数又名质数，是指一个大于1的自然数，除了1及其自身外，不能整除其他自然数的数。</p>
</blockquote>
<h3 id="判断思想："><a href="#判断思想：" class="headerlink" title="判断思想："></a>判断思想：</h3><blockquote>
<ol>
<li>判断一个自然数是否为素数，我们可以这么想：什么样的数不是素数？答案是：负数、0、1以及任何“除1和它本身外还能被其他数整除的数”；</li>
<li>这样我们的条件就非常明确：排除负数、0、1，利用“不是素数的数都满足<strong>小因数&lt;&#x3D;sqrt(n)&lt;&#x3D;大因数</strong>“这个条件进行判断，其中，n 是待判断的数；</li>
<li>只需要判断一个数能否被小于或等于<strong>sqrt(n)</strong> 的数整除即可，降低了算法的时间复杂度。</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习1—数据逆序存放</title>
    <url>/2021/08/07/exercise1/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>编写程序，将一个数组中的值按逆序重新存放。例如原来顺序为：8，6，5，4，1，要求改为：1，4，5，6，8。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）建立两个存放数据的数组；<br>（2）for循环输出原数据顺序；<br>（3）逆序；<br>（4）复制；<br>（4）for循环输出新数据顺序；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo1</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">       <span class="type">int</span>[] array1 =&#123;<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>&#125;,array2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">       System.out.print(<span class="string">&quot;The original data order:&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">           System.out.print(array1[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">       &#125; <span class="comment">//old array</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">4</span>; i &lt; <span class="number">5</span>; i++, j--) &#123;</span><br><span class="line">           array2[i] = array1[j];</span><br><span class="line">       &#125; <span class="comment">// reverse order</span></span><br><span class="line">       System.arraycopy(array2, <span class="number">0</span>, array1, <span class="number">0</span>, <span class="number">5</span>);  <span class="comment">// put back</span></span><br><span class="line">       System.out.println();</span><br><span class="line">       System.out.print(<span class="string">&quot;Data order after reverse order:&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">           System.out.print(array1[j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">       &#125; <span class="comment">//new array</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[] array1 =&#123;<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>&#125;,array2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">        System.out.print(<span class="string">&quot;The original data order:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.print(array1[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125; <span class="comment">//old array</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">4</span>; i &lt; <span class="number">5</span>; i++, j--) &#123;</span><br><span class="line">            array2[i] = array1[j];</span><br><span class="line">        &#125; <span class="comment">// reverse order</span></span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.print(<span class="string">&quot;Data order after reverse order:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">            System.out.print(array2[j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125; <span class="comment">//new array</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h4 id="Java中的自动复制数组-函数参数表示意义"><a href="#Java中的自动复制数组-函数参数表示意义" class="headerlink" title="Java中的自动复制数组,函数参数表示意义:"></a>Java中的自动复制数组,函数参数表示意义:</h4><blockquote>
<p>src：源数组  srcPos：源数组复制的起始位置  dest：目标数组  destPos：目标数组放置的起始位置  length：复制的长度</p>
</blockquote>
<h4 id="数组复制部分，手动操作："><a href="#数组复制部分，手动操作：" class="headerlink" title="数组复制部分，手动操作："></a>数组复制部分，手动操作：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; <span class="number">5</span>; k++) &#123;</span><br><span class="line">   array[k] = array2[k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="分析优化"><a href="#分析优化" class="headerlink" title="分析优化:"></a>分析优化:</h4><blockquote>
<p>对于步骤（4）复制，本质上就是拷贝了数组1中的数据到数组2中。最开始有这步的原因是在最后一个for循环中，输出的数组为 array1（Demo1 Line14），这时候就需要使用array2中交换后的数据”覆盖“array1中的原数据，实现输出结果。但是我们可以直接输出array2的数据（Demo2），这样使程序更为简单。</p>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[N], temp, i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter %d data:&quot;</span>, N);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125; <span class="comment">//Input Data</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;You enter the order of data:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">    &#125; <span class="comment">//Display Input Data</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = <span class="built_in">array</span>[i];</span><br><span class="line">        <span class="built_in">array</span>[i] = <span class="built_in">array</span>[N - i - <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">array</span>[N - i - <span class="number">1</span>] = temp;</span><br><span class="line">    &#125; <span class="comment">//Exchange Order</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Reverse Sequence Output:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><h4 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h4><blockquote>
<p>接收用户输入值时，使用<code>scanf();</code>不要忘记加<code>&amp;</code>符。当然，使用<code>printf();</code>也不要多加。</p>
</blockquote>
<h4 id="关键点"><a href="#关键点" class="headerlink" title="关键点:"></a>关键点:</h4><blockquote>
<ol>
<li>C语言版，最重要的是数据顺序的交换，考虑常量N的奇偶性。中间变量temp设定为数组起点，由于数组从0开始分配下标的特性，数组中最后一个元素指定为 N - i - 1。</li>
<li>此处需要的交换顺序只是位置上的改变，并不考虑队列中各个元素大小的比较。因此，只考虑一半的数据可提高程序运行速度。</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习11-计算器实现</title>
    <url>/2021/08/29/exercise11/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><image src="https://img-blog.csdnimg.cn/1abc14782f09498baebf11f48a750508.png" width="90%">

<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）分别定义不同功能变量；<br>（2）输出主页面；<br>（3）分功能实现；<br>（4）使用系统函数；<br>（5）分类输出计算结果；</p>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">displayMenu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;       欢迎进入计算器\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          1.加法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          2.减法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          3.乘法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          4.除法         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          5.求余         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          6.阶乘         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          7.累加         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*          8.结束         *\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;***************************\n &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入计算类型编号:&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">function</span><span class="params">(<span class="type">int</span> e)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (e == <span class="number">1</span> || e == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> e * function(e - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> user, y;</span><br><span class="line">    <span class="type">int</span> input, a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;是否进入计算器,y/n(是/否):&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;user);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        displayMenu();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (user == <span class="string">&#x27;n&#x27;</span>) </span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);         </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入有误,请重新输入&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input); <span class="comment">//接收计算类型参数</span></span><br><span class="line">    system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (input)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d\n&quot;</span>, a, b, a + b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d-%d=%d\n&quot;</span>, a, b, a - b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d\n&quot;</span>, a, b, a * b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d\n&quot;</span>, a, b, a / b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d mold %d=%d\n&quot;</span>, a, b, a % b);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> e = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d!=%d\n&quot;</span>, e, function(e));</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">char</span> input1;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;退出请按任意键,计算请按M键:&quot;</span>); </span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;input1);</span><br><span class="line">            <span class="keyword">if</span> (input1 == <span class="string">&#x27;M&#x27;</span> || input1 == <span class="string">&#x27;m&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> c, d;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;c, &amp;d);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;result=%d\n&quot;</span>, result += (c + d)); </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;谢谢使用,再见!&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error,please try again!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实现图"><a href="#实现图" class="headerlink" title="实现图"></a>实现图</h2><p><img src="https://img-blog.csdnimg.cn/f886098ca0434247a2b37eca0abc5153.png"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>完整包含所使用函数的头文件；</li>
<li>“阶乘” 功能使用递归思想解决，找到计算过程中的递归体 <code>e * function(e - 1)</code>，并注意特殊位置的处理，如 0 和 1；</li>
<li>定义<code>char</code>类型变量时，若参与比较，本质是比较其 ASCII码 值大小，使用<code>==</code>符号判断是否相等时需要加单引号<code>‘’</code>；</li>
<li>“累加“ 功能实现中，第一次及第二次接收数据合并处理，都放入循环。否则输出结果和实际运算结果存在偏差，且差值为第一次数据计算结果，此处使用<code>result += (c + d)</code>保留上次计算结果。</li>
</ol>
</blockquote>
<hr>
<p>不知道机智的你有没有发现，如果按照题目的要求，我们只需要输出界面，很easy。额，后知后觉，写完才发现，权当练手啦！</p>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习12-统计特定字符个数</title>
    <url>/2021/08/29/exercise12/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>输入一行字符，分别统计出其中英文字母，空格，数字和其他字符的个数。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）定义变量接收输入；<br>（2）定义特定变量；<br>（3）循环计算；<br>（4）多分支结构判断；<br>（5）输出结果；</p>
</blockquote>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">char</span> input;									 </span><br><span class="line">	<span class="type">int</span> word = <span class="number">0</span>, num = <span class="number">0</span>, blank = <span class="number">0</span>, other = <span class="number">0</span>; </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;please enter the character and press enter to confirm:&quot;</span>);</span><br><span class="line">	<span class="keyword">for</span> (; (input = getchar()) != <span class="string">&#x27;\n&#x27;</span>;) <span class="comment">//注意括号位置</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((input &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; input &lt;= <span class="string">&#x27;z&#x27;</span>) || (input &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; input &lt;= <span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">			word++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (input &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; input &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">			num++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (input == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">			blank++;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			other++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;word=%d,num=%d,blank=%d,other=%d\n&quot;</span>, word, num, blank, other);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>C语言中没有字符串变量，因此一次只能接收一个字符并放入缓存区中；</li>
<li>这里我们接收用户输入的一行字符，并不知道用户输入的长度以及开始位置是什么，所以 for 循环中循环变量的声明和更新都无需设定，即从开始位置进入，结束位置输出。</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习13-几何求算</title>
    <url>/2021/08/29/exercise13/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>设圆半径 r&#x3D;1.5，圆柱高 h&#x3D;3，求圆周长、圆面积、圆球表面积、圆球体积、圆柱体积。取小数点后2位数字，请编写程序。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）变量、常量定义；<br>（2）函数定义；<br>（3）函数调用；<br>（4）输出结果；</p>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">CirclePerimeter</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * PI * radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">CircleArea</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> PI * <span class="built_in">pow</span>(radius, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">SphereSurfaceArea</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span> * PI * <span class="built_in">pow</span>(radius, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">SphereVolume</span><span class="params">(<span class="type">float</span> radius)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span> / <span class="number">3</span> * PI * <span class="built_in">pow</span>(radius, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">CylinderVolume</span><span class="params">(<span class="type">float</span> radius, <span class="type">float</span> height)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> PI * <span class="built_in">pow</span>(radius, <span class="number">2</span>) * height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> r = <span class="number">1.5</span>, h = <span class="number">3</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;CirclePerimeter=%.2f\n&quot;</span>, CirclePerimeter(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;CircleArea=%.2f\n&quot;</span>, CircleArea(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;SphereSurfaceArea=%.2f\n&quot;</span>, SphereSurfaceArea(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;SphereVolume=%.2f\n&quot;</span>, SphereVolume(r));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;CylinderVolume=%.2f\n&quot;</span>, CylinderVolume(r, h));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>对需求进行拆分，在一个个函数中 “逐个击破”，“分而治之”思想；</li>
<li>使用C语言中<code>&lt;math.h&gt;</code>头文件下的数学函数<code>pow()</code>计算次方，例如<code>pow(x,y)</code>表示 x 的 y 次方；</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习14-元素求和</title>
    <url>/2021/08/30/exercise14/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>从键盘输入n (个数不限)个整形数字，放入数组PArray， 调用函数 int *Calc(int *PA,int Num); 计算数组中所有元素的和返回到 main 函数，输出计算结果。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）定义数组、变量；<br>（2）接收设定值；<br>（3）分配内存空间；<br>（4）元素求和；<br>（5）输出；</p>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="title function_">Calc</span><span class="params">(<span class="type">int</span> *PA, <span class="type">int</span> Num)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += PA[i];</span><br><span class="line">    &#125;</span><br><span class="line">    PA[<span class="number">0</span>] = sum;</span><br><span class="line">    <span class="keyword">return</span> PA;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *PArray = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> Total = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;enter the number of elements in arrays:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;Total);</span><br><span class="line">    PArray = (<span class="type">int</span> *)<span class="built_in">malloc</span>(Total * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;give %d element assignment:\n&quot;</span>, Total);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Total; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;PArray[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    PArray = Calc(PArray, Total);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Sum=%d\n&quot;</span>, *PArray);</span><br><span class="line">    <span class="built_in">free</span>(PArray);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>使用指针，及时初始化；</li>
<li>动态分配内存空间，包含头文件<code>&lt;stdlib.h&gt;</code>，函数原型<code>void* malloc (size_t size); </code>返回值类型是<code>void *</code>，void 表示返回未知指针类型。</li>
<li>通常，<code>malloc()</code>使用时需要进行强制类型转换，如<code>(int *)malloc(Total * sizeof(int)); </code>修改 void 指针为所需类型；</li>
<li><code>Calc()</code>为指针类型函数，值 sum 返回主函数时不可直接返回。将 sum 值存入数组首地址，也就是作为第一个元素，返回数组首地址即可；</li>
<li>动态申请的内存空间最后要使用<code>free()</code>释放；</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习2—数据查找</title>
    <url>/2021/08/10/exercise2/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>有一组数12，56，45，78，90，80，23，16，8，63 保存在一个数组中，从键盘任意接收一个数，并在数组中查找该数给出是否找到的信息。如果找到了，要求输出该数在数组中所处的位置；如果找不到，输出没有找到的提示信息。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）接收；<br>（2）查找数据；<br>（3）对比；<br>（4）输出结果；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span>[] array = &#123;<span class="number">12</span>, <span class="number">56</span>, <span class="number">45</span>, <span class="number">78</span>, <span class="number">90</span>, <span class="number">80</span>, <span class="number">23</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">63</span>&#125;;</span><br><span class="line">        System.out.print(<span class="string">&quot;please enter the data you are looking for:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">user</span> <span class="operator">=</span> input.nextInt(), i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (user == array[i]) &#123;</span><br><span class="line">                System.out.println(user + <span class="string">&quot; &quot;</span> + <span class="string">&quot;is element&quot;</span> + <span class="string">&quot;[&quot;</span> + i + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">9</span>)</span><br><span class="line">                System.out.println(<span class="string">&quot;no data &quot;</span> + user + <span class="string">&quot; &quot;</span> + <span class="string">&quot;found&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        input.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><h2 id="顺序查找"><a href="#顺序查找" class="headerlink" title="顺序查找"></a>顺序查找</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[] = &#123;<span class="number">12</span>, <span class="number">56</span>, <span class="number">45</span>, <span class="number">78</span>, <span class="number">90</span>, <span class="number">80</span>, <span class="number">23</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">63</span>&#125;, TakeOver, Tag;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter any data:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;TakeOver);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (TakeOver == <span class="built_in">array</span>[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;data %d location is array[%d];&quot;</span>, TakeOver, i);</span><br><span class="line">            Tag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Tag = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (Tag == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;did not find %d&quot;</span>, TakeOver);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<ol>
<li>本题关于“未找到信息的输出”，我们还可以这样想：如果一组数据，比对到最后一个都没有满足条件的，那么就认定为队列中没有该数据。</li>
<li>用这样的思想我们可以进行这样的改动：删除Tag标签，增加条件判断直接输出。这里注意变量<code>i</code>的自增，为了在<code>i=10</code>时仍能进入循环输出信息，判断条件应修改为<code>i &lt;= 10</code>。</li>
</ol>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[] = &#123;<span class="number">12</span>, <span class="number">56</span>, <span class="number">45</span>, <span class="number">78</span>, <span class="number">90</span>, <span class="number">80</span>, <span class="number">23</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">63</span>&#125;, TakeOver;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter any data:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;TakeOver);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (TakeOver == <span class="built_in">array</span>[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;data %d location is array[%d];&quot;</span>, TakeOver, i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">9</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;data %d was not found&quot;</span>, TakeOver);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>本题中最重要的是如何将已有数据和用户输入数据进行对比，也就是 “查找” 这一操作，代码1给出的是查找算法中最简单的 “顺序查找” 。</li>
<li>由于每次进入循环，变量<code>i</code>依次自增、逐个查找，如果我们仅仅只将单一的输出信息放在语句中而不进行其它判断的话，就会造成输出错误。所以增加变量<code>Tag</code>用于判断条件：如果数据相等（找到了），<code>Tag</code>值置 1 。如果没有找到，<code>Tag</code>值置0，循环外进行一次判断输出没有找到的提示信息。</li>
<li>我竟然试图用二分法解决，但是却忽略了使用二分（折半）查找的前提必须是有序表顺序存储。这里给出两种版本的二分法，注意算法适用条件。</li>
</ol>
</blockquote>
<h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Search1</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> value, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> low, high, mid;  <span class="comment">//定义最低位,最高位,中间位</span></span><br><span class="line">    low = <span class="number">0</span>;</span><br><span class="line">    high = n<span class="number">-1</span>;   <span class="comment">//数据从0开始,则最后一个为n-1,总数仍为n</span></span><br><span class="line">    <span class="keyword">while</span>(low&lt;=high)</span><br><span class="line">    &#123;</span><br><span class="line">        mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[mid]==value)    <span class="comment">//中间值和待查找值相等,直接返回</span></span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">if</span>(a[mid]&gt;value)     <span class="comment">//中间值大于待查找值,待查找值在中间值左边,最高位high置为mid-1</span></span><br><span class="line">            high = mid<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[mid]&lt;value)     <span class="comment">//中间值小于待查找值,待查找值在中间值右边,最低为low置为mid+1</span></span><br><span class="line">            low = mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//递归版本</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Search2</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> value, <span class="type">int</span> low, <span class="type">int</span> high)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> mid = low+(high-low)/<span class="number">2</span>;      <span class="comment">//组中值 mid=(low+high)/2等价于mid=low+1/2*(high-low);</span></span><br><span class="line">    <span class="keyword">if</span>(a[mid]==value)</span><br><span class="line">        <span class="keyword">return</span> mid;</span><br><span class="line">    <span class="keyword">if</span>(a[mid]&gt;value)</span><br><span class="line">        <span class="keyword">return</span> Search2(a, value, low, mid<span class="number">-1</span>);  <span class="comment">//函数递归调用</span></span><br><span class="line">    <span class="keyword">if</span>(a[mid]&lt;value)</span><br><span class="line">        <span class="keyword">return</span> Search2(a, value, mid+<span class="number">1</span>, high);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习3-元素最大值</title>
    <url>/2021/08/10/exercise3/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>有一个3*4矩阵，数据为{1, 2, 3, 4}, {9, 8, 7, 6}, {-10, 10, -5, 2}，编写程序，通过比较输出最大元素的值及其所在的行标和列标。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）理解 3 * 4 矩阵；<br>（2）循环求最大值；<br>（3）保存行列标；<br>（4）输出；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] array = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;, &#123;<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>&#125;, &#123;-<span class="number">10</span>, <span class="number">10</span>, -<span class="number">5</span>, <span class="number">2</span>&#125;&#125;;</span><br><span class="line">        <span class="type">int</span> i, j, Max = array[<span class="number">0</span>][<span class="number">0</span>], x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[i][j] &gt; Max) &#123;</span><br><span class="line">                    Max = array[i][j];</span><br><span class="line">                    x = i;</span><br><span class="line">                    y = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;Max=&quot;</span> + Max);</span><br><span class="line">        System.out.println(<span class="string">&quot;array index:&quot;</span> + <span class="string">&quot;[&quot;</span> + x + <span class="string">&quot;]&quot;</span> + <span class="string">&quot;[&quot;</span> + y + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h4 id="注意区分Java语言中三种数组初始化的方式："><a href="#注意区分Java语言中三种数组初始化的方式：" class="headerlink" title="注意区分Java语言中三种数组初始化的方式："></a>注意区分Java语言中三种数组初始化的方式：</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">array=<span class="keyword">new</span> <span class="title class_">type</span>[][]&#123;值 <span class="number">1</span>,值 <span class="number">2</span>,值 <span class="number">3</span>,…,值 n&#125;;</span><br><span class="line"></span><br><span class="line">array=<span class="keyword">new</span> <span class="title class_">type</span>[][]&#123;<span class="keyword">new</span> 构造方法(参数列表),…&#125;;</span><br><span class="line"></span><br><span class="line">type[][]array=&#123;&#123;第<span class="number">1</span>行第<span class="number">1</span>列的值,第<span class="number">1</span>行第<span class="number">2</span>列的值,…&#125;,&#123;第<span class="number">2</span>行第<span class="number">1</span>列的值,第<span class="number">2</span>行第<span class="number">2</span>列的值,…&#125;,…&#125;;</span><br></pre></td></tr></table></figure>



<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[][<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">-10</span>,<span class="number">10</span>,<span class="number">-5</span>,<span class="number">2</span>&#125;,i,j,Max=<span class="built_in">array</span>[<span class="number">0</span>][<span class="number">0</span>],x,y;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">array</span>[i][j]&gt;Max)&#123;</span><br><span class="line">                Max=<span class="built_in">array</span>[i][j];</span><br><span class="line">                x=i;</span><br><span class="line">                y=j;</span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;            </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Max=%d\n&quot;</span>,Max);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;array index:[%d][%d]&quot;</span>,x,y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>重在如何保存下标，循环的确是每个数据都进行比较，但是，若队列后面的数据不满足<code>array[i][j]&gt;Max</code>条件的话，也不会保存它们的下标。所以，直接在循环中增加赋值，以起到保留最大值下标的效果。</p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习4-寻求特定值</title>
    <url>/2021/08/10/exercise4/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>编写程序，从键盘上输入N个学生的考试成绩存入一维数组中，求该数组中成绩的最高分、最低分及平均分并输出到屏幕。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）定义常量N值；<br>（2）建立用于存放数据的一维数组；<br>（3）接收用户输入；<br>（4）查询 &#x2F; 计算特定值；<br>（5）输出结果；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">float</span>[] array = <span class="keyword">new</span> <span class="title class_">float</span>[N];</span><br><span class="line">        <span class="type">float</span> Max, Min, Average = <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;please enter the &quot;</span> + N + <span class="string">&quot; students test results in order:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            array[i] = input.nextFloat();</span><br><span class="line">        &#125;</span><br><span class="line">        Max = Min = array[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[i] &gt; Max)</span><br><span class="line">                Max = array[i];</span><br><span class="line">            <span class="keyword">if</span> (array[i] &lt; Min)</span><br><span class="line">                Min = array[i];</span><br><span class="line">            Average += array[i];</span><br><span class="line">        &#125;</span><br><span class="line">        Average /= N;</span><br><span class="line">        System.out.format(<span class="string">&quot;highest score:%.1f,lowest score:%.1f,the average score:%.2f&quot;</span>,Max,Min,Average);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>注意Java中接收用户输入的方法，同时考虑对一维数组“动态赋值”的操作。</p>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> <span class="built_in">array</span>[N], Max,Min,Average;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter the N students test results in order:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;<span class="built_in">array</span>[i]); </span><br><span class="line">    &#125;</span><br><span class="line">    Max =Min=<span class="built_in">array</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">array</span>[i] &gt; Max)</span><br><span class="line">            Max = <span class="built_in">array</span>[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">array</span>[i] &lt; Min)</span><br><span class="line">            Min = <span class="built_in">array</span>[i];</span><br><span class="line">        Average += <span class="built_in">array</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    Average /= N;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;highest score:%.1f,lowest score:%.1f,the average score:%.3f&quot;</span>, Max, Min, Average);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><blockquote>
<mark class="label ">`scanf()`中别丢弃 `& `取地址符</mark>(异常：输入数据后无输出)。求平均值无需增加变量`Sum`，可将变量`Average`放入循环体内求总和，在循环体外进行平均值求算。
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习5-冒泡排序</title>
    <url>/2021/08/10/exercise5-bubble-sort/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>编写程序，从键盘上任意接收10个整数存入一维数组中（无序），利用冒泡排序将该数组元素由小到大进行排序，并输出排序后数组。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）建立用于存放数据的一维数组；<br>（2）接收用户输入；<br>（3）冒泡排序；<br>（4）输出结果；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="type">int</span> i, j, temp;</span><br><span class="line">        System.out.println(<span class="string">&quot;please enter 10 integers:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            array[i] = user.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">9</span> - i; j++)</span><br><span class="line">                <span class="keyword">if</span> (array[j] &gt; array[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    temp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;data from small to large:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            System.out.format(<span class="string">&quot;%d &quot;</span>, array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[<span class="number">10</span>], i, j, temp;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter 10 integers:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">9</span> - i; j++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[j] &gt; <span class="built_in">array</span>[j + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = <span class="built_in">array</span>[j];</span><br><span class="line">                <span class="built_in">array</span>[j] = <span class="built_in">array</span>[j + <span class="number">1</span>];</span><br><span class="line">                <span class="built_in">array</span>[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data from small to large:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h4 id="Bubble-Sort介绍："><a href="#Bubble-Sort介绍：" class="headerlink" title="Bubble Sort介绍："></a>Bubble Sort介绍：</h4><blockquote>
<ol>
<li>冒泡排序是一种简单直观的排序算法。通过”重复性地比较需要排序的数列，一次比较两个元素，若顺序错则交换”的方法完成排序。</li>
<li>算法步骤:<br>（1）比较相邻位置的两个元素，若前者大于后者，则交换顺序；<br>（2）重复步骤一，对所有数据遍历走访，此时，末尾元素最大；<br>（3）对除末尾元素外的其他元素重复以上操作；<br>（4）上述步骤重复次数逐渐减少，直到没有任何数据需要进行比较；</li>
</ol>
</blockquote>
<h4 id="核心"><a href="#核心" class="headerlink" title="核心:"></a>核心:</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N - <span class="number">1</span>; i++)         <span class="comment">//i控制比较趟数</span></span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N - <span class="number">1</span> - i; j++) <span class="comment">//j控制每趟比较次数</span></span><br><span class="line">        <span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>])        <span class="comment">//根据实际情况从大到小或从小到大输出,此处为从小到大</span></span><br><span class="line">        &#123;</span><br><span class="line">            temp = a[j];</span><br><span class="line">            a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">            a[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>





















]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习6-数据插入</title>
    <url>/2021/08/11/exercise6-data-insert/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>编写程序，有一维数组数据为：23，34，45，60，67，88，96，从键盘上输入一个数据，将数据插入到数组，使得插入后的数组元素依然保持有序并输出到屏幕。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）数组建立；<br>（2）接收用户输入数据；<br>（3）查找位置；<br>（4）移动元素；<br>（5）插入（赋值）；<br>（6）输出结果；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[] array=<span class="keyword">new</span> <span class="title class_">int</span> []&#123;<span class="number">23</span>,<span class="number">34</span>,<span class="number">45</span>,<span class="number">60</span>,<span class="number">67</span>,<span class="number">88</span>,<span class="number">96</span>,<span class="number">0</span>&#125;;<span class="comment">//此处的0表示占位(否则创建的数组为[7]</span></span><br><span class="line">        <span class="type">int</span> i,input,location;</span><br><span class="line">        Scanner user=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;please enter an integer:&quot;</span>);</span><br><span class="line">        input=user.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)   <span class="comment">//因为0占位,所以相当于只有7个元素,不能改为8</span></span><br><span class="line">            <span class="keyword">if</span>(input&lt;=array[i])</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        location=i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">6</span>;i&gt;=location;i--)  <span class="comment">//注意i初始值6,最大下标为6（未插入数据前）</span></span><br><span class="line">            array[i+<span class="number">1</span>]=array[i];  <span class="comment">//前方数据后移</span></span><br><span class="line">        array[location]=input;</span><br><span class="line">        System.out.println(<span class="string">&quot;insert &quot;</span>+input+<span class="string">&quot;after the array elements are:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">            System.out.format(<span class="string">&quot;%d  &quot;</span>, array[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>Java处最关键的是分清楚插入数据前后，数组元素的下标值以及数组的建立过程。</p>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[<span class="number">8</span>] = &#123;<span class="number">23</span>, <span class="number">34</span>, <span class="number">45</span>, <span class="number">60</span>, <span class="number">67</span>, <span class="number">88</span>, <span class="number">96</span>&#125;, i, input, location = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter any integer:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) <span class="comment">//i&lt;现有元素个数,寻找位置</span></span><br><span class="line">        <span class="keyword">if</span> (input &lt;= <span class="built_in">array</span>[i])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    location = i;                   <span class="comment">//标记此处位置,占位</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">7</span>; i &gt;= location; i--) <span class="comment">//顺次后移</span></span><br><span class="line">        <span class="built_in">array</span>[i + <span class="number">1</span>] = <span class="built_in">array</span>[i];</span><br><span class="line">    <span class="built_in">array</span>[location] = input;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Insert %d housing number element:&quot;</span>, input);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>难点在于如何找到待插入数据合适位置以及如何移动数组元素位置。这里使用循环求解：<code>for</code>循环实现位置查找功能，判断条件为待插入数据<code>&lt;=</code>数组元素值。若满足条件，则退出循环并保留位置下标给<code>location</code>。</li>
<li>找到位置后需要插入数据，并且不能覆盖掉原数据，这时候需要对原数据整体移动。同样使用<code>for</code>循环实现，<code>i=7</code>就相当于指针指向了数组中最后一个元素，所有在<code>location</code>之后的元素都得为它 “让位”，即后移。最后<code>location</code>位置便是空值，只需对它赋值（用户输入值）便实现数据插入。</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习7-数组求值</title>
    <url>/2021/08/12/exercise7/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>编写程序，实现如下功能：一个学习小组有5个人，每个人有Math，C，Database三门课的考试成绩，求该组各科成绩的平均分及所有成绩的平均分并输出到屏幕。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）给出结构体；<br>（2）分析变量；<br>（3）计算总 &#x2F; 各科成绩平均分；<br>（4）输出结果；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">float</span> Math;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">float</span> C;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">float</span> Database;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">float</span> <span class="variable">Sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">SetValue</span><span class="params">(<span class="type">float</span> Math, <span class="type">float</span> C, <span class="type">float</span> Database)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.Math = Math;</span><br><span class="line">            <span class="built_in">this</span>.C = C;</span><br><span class="line">            <span class="built_in">this</span>.Database = Database;</span><br><span class="line">            Sum = Math + C + Database;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">GetMath</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Math;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">GetC</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> C;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">GetDataBase</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Database;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">GetSum</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Sum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">float</span> <span class="variable">Math</span> <span class="operator">=</span> <span class="number">0</span>, C = <span class="number">0</span>, Database = <span class="number">0</span>, Total = <span class="number">0</span>, MathSum = <span class="number">0</span>, CSum = <span class="number">0</span>, DatabaseSum = <span class="number">0</span>;</span><br><span class="line">        Student[] student = <span class="keyword">new</span> <span class="title class_">Student</span>[<span class="number">5</span>];</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.format(<span class="string">&quot;Please enter the math score of the %d student:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">            Math = user.nextFloat();</span><br><span class="line">            System.out.format(<span class="string">&quot;Please enter the C language score of the %d student::&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">            C = user.nextFloat();</span><br><span class="line">            System.out.format(<span class="string">&quot;Please enter the database score of the %d student::&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">            Database = user.nextFloat();</span><br><span class="line">            student[i] = <span class="keyword">new</span> <span class="title class_">Student</span>(); </span><br><span class="line">            student[i].SetValue(Math, C, Database);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            MathSum += student[i].GetMath();</span><br><span class="line">            CSum += student[i].GetC();</span><br><span class="line">            DatabaseSum += student[i].GetDataBase();</span><br><span class="line">            Total += student[i].GetSum();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.format(<span class="string">&quot;MathAverage=%f     CAverage=%f     DatabaseAverage=%f&quot;</span>, MathSum / <span class="number">5.0</span>, CSum / <span class="number">5.0</span>, DatabaseSum / <span class="number">5.0</span>);</span><br><span class="line">        System.out.format(<span class="string">&quot;\nTotalScoreAverage=%.3f&quot;</span>, Total / <span class="number">5.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>Java是一种高级语言，它舍弃了C&#x2F;C++中容易出错的指针、一些莫须有的语言结构（其中就包含结构体），所以这道题如果我们用Java语言解决，就需要用到类和对象。</li>
<li>我们在类中包含其属性和方法，不太容易想到的是三门科目的成绩从键盘接收并且需要循环五次的操作：使用对象数组<code>Student[] student = new Student[5];</code>并对其进行实例化实现动态接收数据。</li>
<li>在类和对象中，只要有需求，我们就添加方法解决问题。例如本题中设置返回三个科目成绩的方法实现单科成绩平均分、总成绩平均分求算。</li>
<li>对象数组需要进行实例化<code>student[i] = new Student();</code>，否则报错：空指针错误！！！</li>
</ol>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">float</span> Math;</span><br><span class="line">    <span class="type">float</span> C;</span><br><span class="line">    <span class="type">float</span> Database;</span><br><span class="line">&#125; student[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> Math, C, Database, Sum;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;please enter the three door subject grades of the first %d name classmate:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f%f%f&quot;</span>, &amp;student[i].Math, &amp;student[i].C, &amp;student[i].Database); <span class="comment">//注意 &amp;</span></span><br><span class="line">        Sum += student[i].Math + student[i].C + student[i].Database;</span><br><span class="line">        Math += student[i].Math;</span><br><span class="line">        C += student[i].C;</span><br><span class="line">        Database += student[i].Database;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MathAverage=%f     CAverage=%f     DatabaseAverage=%f&quot;</span>, Math / <span class="number">5.0</span>, C / <span class="number">5.0</span>, Database / <span class="number">5.0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nTotalAverage=%f&quot;</span>, Sum / <span class="number">5.0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>关键点在于如何将不同科目的成绩和同学进行区分。这里我们采用结构体数组的方式解决：有5个元素的结构体数组<code>student[5]</code>包含<code>Math</code>、<code>C</code>和<code>Database</code>三个变量对应不同科目成绩。考虑到这点，题目就变得非常简单，只要接收输入值，计算方可。</li>
<li>计算中，要考虑周全，成绩有可能是<code>float</code>类型。而计算平均值时用到的<code>/</code>号，结果为整型，所以我们做除法的时候，除数应该是<code>5.0</code>而不是<code>5</code>。</li>
</ol>
</blockquote>
<h3 id="异同点："><a href="#异同点：" class="headerlink" title="异同点："></a>异同点：</h3><blockquote>
<p>下面这道题目和本题类似，需要注意的点是使用<code>scanf()</code>时，若结构体中包含数组，就需要关注<code>&amp;</code>是否需要存在。对比源码，进一步加深理解。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num; </span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">float</span> score[<span class="number">3</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">s</span>[3];</span> <span class="comment">//struct student 等价于int,实质:编写了一个数据类型</span></span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">float</span> sum, avg[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入学号:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;s[i].num); <span class="comment">// num 为int类型,是普通变量,不代表地址</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入姓名:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s[i].name); <span class="comment">// 不需要  &amp;s.name  因为数组名name代表首地址</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入三门科目成绩:\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;s[i].score[j]);</span><br><span class="line">            sum = sum + s[i].score[j];</span><br><span class="line">        &#125;</span><br><span class="line">        avg[i] = sum / <span class="number">3.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输出信息:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;学号:%d,姓名:%s,平均分:%.2f\n&quot;</span>, s[i].num, s[i].name, avg[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>






















]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习8-指针实现排序</title>
    <url>/2021/08/13/exercise8/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>用指针方法编写一个程序，输入3个整数，将它们按由小到大的顺序输出。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）定义指针；<br>（2）接收输入值；<br>（3）排序；<br>（4）输出结果；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">E20210813</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> temp;</span><br><span class="line">        <span class="type">int</span>[] array = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;please enter three whole numbers:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            array[i] = input.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (array[<span class="number">0</span>] &gt; array[<span class="number">1</span>]) &#123;</span><br><span class="line">            temp = array[<span class="number">0</span>];</span><br><span class="line">            array[<span class="number">0</span>] = array[<span class="number">1</span>];</span><br><span class="line">            array[<span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (array[<span class="number">0</span>] &gt; array[<span class="number">2</span>]) &#123;</span><br><span class="line">            temp = array[<span class="number">0</span>];</span><br><span class="line">            array[<span class="number">0</span>] = array[<span class="number">2</span>];</span><br><span class="line">            array[<span class="number">2</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (array[<span class="number">1</span>] &gt; array[<span class="number">2</span>]) &#123;</span><br><span class="line">            temp = array[<span class="number">1</span>];</span><br><span class="line">            array[<span class="number">1</span>] = array[<span class="number">2</span>];</span><br><span class="line">            array[<span class="number">2</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">&quot;the output from small to large is:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            System.out.print(array[j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>在C&#x2F;C++中，指针的作用是：通过指针间接访问内存，保留地址，可以理解为指针就是一个地址。同样地，指针就是用于取得地址的，那么这里就有疑问了（Java中没有指针啊？这怎么做？）。</li>
<li>从表面上看，Java的确没有明确给定 “指针” 这个概念。但是，深入分析，Java中引用类型本质上就是对 “指针” 的封装。使其不能直接操作内存，只能指向对象，这里我们用数组—比较方便大家理解的方式解决。</li>
</ol>
</blockquote>
<h1 id="C语言-1"><a href="#C语言-1" class="headerlink" title="C语言-1"></a>C语言-1</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> temp = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exchange</span><span class="params">(<span class="type">int</span> *q1, <span class="type">int</span> *q2, <span class="type">int</span> *q3)</span> <span class="comment">//传递地址,指针接收</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (*q1 &gt; *q2)</span><br><span class="line">        swap(q1, q2);</span><br><span class="line">    <span class="keyword">if</span> (*q1 &gt; *q3)</span><br><span class="line">        swap(q1, q3);</span><br><span class="line">    <span class="keyword">if</span> (*q2 &gt; *q3)</span><br><span class="line">        swap(q2, q3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, *p1, *p2, *p3;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter three integers:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    p1 = &amp;a;</span><br><span class="line">    p2 = &amp;b;</span><br><span class="line">    p3 = &amp;c;</span><br><span class="line">    exchange(p1, p2, p3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sort from small to large:%d&lt;%d&lt;%d&quot;</span>, a, b, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="C语言-2"><a href="#C语言-2" class="headerlink" title="C语言-2"></a>C语言-2</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> temp = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    <span class="type">int</span> *p1, *p2, *p3; <span class="comment">//注意区分</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter three integers:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    p1 = &amp;a;</span><br><span class="line">    p2 = &amp;b;</span><br><span class="line">    p3 = &amp;c;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">        swap(p1, p2);</span><br><span class="line">    <span class="keyword">if</span> (a &gt; c)</span><br><span class="line">        swap(p1, p3);</span><br><span class="line">    <span class="keyword">if</span> (b &gt; c)</span><br><span class="line">        swap(p2, p3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sort from small to large:%d&lt;%d&lt;%d&quot;</span>, a, b, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>使用指针时要注意这样几点：<br>（1）避免使用未初始化的指针，多数情况下程序运行错误都与指针未初始化有关，但是由于这种错误不能被编译器检查发现的特殊性，就需要我们格外注意。最好的解决办法就是使用指针时对它进行定义。当然，早早定义的话也不要忘记初始化，在进行初始化时可以使用<code>cstdlib</code>中定义的<code>NULL</code>赋值为0。<br>（2）因为指针类型给定指针所指向对象的数据类型，所以指针赋值要确保数据类型匹配，才可以对指针进行操作。<br>（3）不要误以为<code>int *p  , a ;</code>是声明了两个<code>int</code>型指针，实际是定义了一个<code>int</code>型指针<code>p</code>和一个<code>int</code>型变量<code>a</code>，为了进行区分我们可以在定义时分开写，详见<strong>C语言-2</strong>。</p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>练习9-数据计算</title>
    <url>/2021/08/14/exercise9/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><blockquote>
<p>写一个简单的函数实现下面的功能：具有三个参数，完成对两个整型数据的加、减、乘、除四种操作，前两个为操作数，第三个参数为字符型的参数。</p>
</blockquote>
<h1 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h1><blockquote>
<p>（1）定义变量；<br>（2）接收用户输入；<br>（3）函数计算；<br>（4）输出结果；</p>
</blockquote>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">E20210814</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a1, b;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.print(<span class="string">&quot;please enter two whole numbers:&quot;</span>);</span><br><span class="line">        a1 = input.nextInt();</span><br><span class="line">        b = input.nextInt();</span><br><span class="line">        System.out.print(<span class="string">&quot;please enter your computing type:[a-addition s-subtraction m-multiplication d-division]:&quot;</span>);</span><br><span class="line">        c = input.next().charAt(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">switch</span> (c) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span> -&gt; System.out.format(<span class="string">&quot;%d+%d=%d&quot;</span>, a1, b, a1 + b);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span> -&gt; System.out.format(<span class="string">&quot;%d-%d=%d&quot;</span>, a1, b, a1 - b);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span> -&gt; System.out.format(<span class="string">&quot;%d*%d=%d&quot;</span>, a1, b, a1 * b);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span> -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;the divisor is not 0 error!!!&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.format(<span class="string">&quot;%d/%d=%d&quot;</span>, a1, b, a1 / b);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;input error please try again!!!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="enhanced-switch"><a href="#enhanced-switch" class="headerlink" title="enhanced switch"></a>enhanced switch</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (c) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span> -&gt; System.out.format(<span class="string">&quot;%d+%d=%d&quot;</span>, a1, b, a1 + b);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span> -&gt; System.out.format(<span class="string">&quot;%d-%d=%d&quot;</span>, a1, b, a1 - b);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span> -&gt; System.out.format(<span class="string">&quot;%d*%d=%d&quot;</span>, a1, b, a1 * b);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span> -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;the divisor is not 0 error!!!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.format(<span class="string">&quot;%d/%d=%d&quot;</span>, a1, b, a1 / b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;input error please try again!!!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote>
<ol>
<li>注意<code>switch-case</code>语句中<code>case</code>处的数据类型，因为设定了变量<code>c</code>为<code>char</code>类型，所以需要使用 <strong>c &#x3D; input.next().charAt(0)</strong> 语句接收用户键盘上的单个字符输入，<code>charAt()</code> 方法用于返回指定索引处的字符，索引范围为从 0 到<code> length() - 1</code>。</li>
<li>Java 中引入增强型<code>switch</code>结构，给出参考代码。主要特点如下：需要返回值、无需 <code>break</code>、使用箭头<code>-&gt;</code>、可进行 case 间的合并，以逗号分隔。</li>
</ol>
</blockquote>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">calculate</span><span class="params">(<span class="type">int</span> operand1, <span class="type">int</span> operand2, <span class="type">char</span> type)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> a, s, m, d;</span><br><span class="line">    <span class="keyword">switch</span> (type)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d&quot;</span>, operand1, operand2, operand1 + operand2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d-%d=%d&quot;</span>, operand1, operand2, operand1 - operand2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d&quot;</span>, operand1, operand2, operand1 * operand2);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (operand2 == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;the divisor is not 0 the error please try again&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d/%d=%d&quot;</span>, operand1, operand2, operand1 / operand2);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;if the type of operation is not specified please re enter!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter two integers:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter your computing type:[a-addition s-subtraction m-multiplication d-division]:&quot;</span>);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;c);</span><br><span class="line">    calculate(a, b, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><blockquote>
<p>因为有四种计算类型，所以我们使用<code>switch-case</code>语句解决，注意除法计算中除数不为 0 的条件判断，且<code>case</code>后需为常量，这里使用字符做判断条件，加上单引号<code>‘’</code>变为字符常量。</p>
</blockquote>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>完美解决罗技 GHub 驱动长时间加载/初始化</title>
    <url>/2021/08/20/ghub-drive-cyclic-loading/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前几天收到大哥的礼物，一只罗技 G502 Lightspeed 鼠标，对这款鼠标不大了解。但使用一段时间后感觉这个宏定义还是蛮不错的，成功让我打造成了开发利器，快来看我的C-V大法</p>
<image src="https://img-blog.csdnimg.cn/f1b0779264d54ad587c42d0d4b8b8ebe.jpg" width="85%">

<p>唉，可惜好景不长，没几天我就发现鼠标驱动软件出了问题。客服让我致电罗技售后，结果可想而知，无奈只好自己解决</p>
<h1 id="驱动加载“死循环”"><a href="#驱动加载“死循环”" class="headerlink" title="驱动加载“死循环”"></a>驱动加载“死循环”</h1><image src="https://img-blog.csdnimg.cn/6c6abb962871468fb469b317be6e8947.gif" width="85%">

<p>刚刚接触的我，以为它就是需要加载，还在想是不是电脑配置较低引起的，后来发现根本不是……</p>
<h1 id="快速解决"><a href="#快速解决" class="headerlink" title="快速解决"></a>快速解决</h1><div class="note info"><p>关闭驱动后台服务项，管理员运行升级文件后重启驱动<br>“治标不治本”的方法——卸载重装</p>
</div>
<p>如果你像我一样也是刚刚接触罗技或者是小白，请参阅下方详细教程</p>
<h1 id="驱动下载"><a href="#驱动下载" class="headerlink" title="驱动下载"></a>驱动下载</h1><p><span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0LmxvZ2kuY29tL2hjL3poLWNuL2FydGljbGVzLzM2MDAyNTI5ODEzMw==">下载直达<i class="fa fa-external-link-alt"></i></span><br>网络原因可能导致加载缓慢，备用<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTk1YVp2M2dFb0YyXzV1bVdKaTNWaVE=">下载地址<i class="fa fa-external-link-alt"></i></span>，提取码：peng<br>首先确保是从官网下载的驱动软件，<span class="exturl" data-url="aHR0cHM6Ly93d3cubG9naXRlY2guY29tLmNuL3poLWNu">官方网站<i class="fa fa-external-link-alt"></i></span>，进入产品支持主页</p>
<image src="https://img-blog.csdnimg.cn/43cf5464b9994c7183a10347e2f38487.jpg" width="85%">

<p>进入下载</p>
<image src="https://img-blog.csdnimg.cn/794e3509819541e4b507fdb630c103ec.jpg" width="85%">

<p>找到 Logitech G HUB 驱动程序</p>
<image src="https://img-blog.csdnimg.cn/0534c59dcb41494c8fe16343e0b7412c.jpg" width="85%">

<p>选择合适的版本点击 Download Now下载，默认版本为 Windows 10</p>
<image src="https://img-blog.csdnimg.cn/ff195345f42b48de91d7562351483050.jpg" width="65%">

<h1 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h1><p>进入图示目录</p>
<image src="https://img-blog.csdnimg.cn/d8f9d3c952ed45e297d6e49e17419bb9.jpg" width="85%">

<p>修改①为管理员方式运行</p>
<image src="https://img-blog.csdnimg.cn/55c4352de5784366a993e9991abab883.jpg" width="85%">

<p>然后按顺序①-③依次运行程序，失败请尝试下述解决方案</p>
<h1 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h1><p>组合键 <a class="btn" href="#">Ctrl</a>+<a class="btn" href="#">Alt</a>+<a class="btn" href="#">.</a> 打开任务管理器找到服务项</p>
<image src="https://img-blog.csdnimg.cn/aa2b5bc3c8da44afb9f03dcd52149840.jpg" width="70%">

<p>右键尝试启动，正常开启，重启驱动解决</p>
<image src="https://img-blog.csdnimg.cn/10fcafdd9b294649ad1ec6d34c3504fb.jpg" width="70%">

<p>若启动失败，请设置服务项自启动</p>
<image src="https://img-blog.csdnimg.cn/f5d34cf5320a45cea52ae428d40e2af8.jpg" width="85%">

<p>等待片刻重启驱动解决</p>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><mark class="label ">进入驱动后，不要关闭自启</mark>，鼠标宏需要驱动支持
<p>进入设置</p>
<image src="https://img-blog.csdnimg.cn/a9144f04359d4248bd0b69ae957c4c94.jpg" width="85%">

<p>打开自启</p>
<image src="https://img-blog.csdnimg.cn/30d7202e178d492fa2d98849d518e4e9.jpg" width="85%">]]></content>
      <categories>
        <category>经验分享</category>
      </categories>
      <tags>
        <tag>解决方案</tag>
      </tags>
  </entry>
  <entry>
    <title>Git版本更新</title>
    <url>/2021/09/01/git-version-update/</url>
    <content><![CDATA[<div class="note danger"><p>操作平台：windows</p>
</div>

<p>打开 Git bash 工具</p>
<p><img src="https://img-blog.csdnimg.cn/6f65025ba2cc44bfaf293190aab936e3.jpg"></p>
<p>查看当前 git 版本信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>
<p>输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git update //旧版</span><br><span class="line">git update-git-for-windows //新版</span><br></pre></td></tr></table></figure>
<p>等待完成即可</p>
<p><img src="https://img-blog.csdnimg.cn/86337057ac794a0f8cee3c545fba46f1.png"></p>
]]></content>
      <categories>
        <category>版本控制</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>《HarmonyOS实战——入门到开发，浅析原子化服务》</title>
    <url>/2021/08/05/harmonyos-atomization-service/</url>
    <content><![CDATA[<h1 id="HarmonyOS操作系统"><a href="#HarmonyOS操作系统" class="headerlink" title="HarmonyOS操作系统"></a>HarmonyOS操作系统</h1><p>在介绍鸿蒙系统前，我们有必要了解下鸿蒙系统应运而生的时代背景。近年来，我国在电子信息技术领域中愈发觉需要“独立”，资源的匮乏，人才的稀缺正是当务之急</p>
<image src="https://img-blog.csdnimg.cn/4aed2fc18a3048dba5cc58cfec5af1e8.png" width="85%">

<p>犹记得前段时间网络上流传着这样的言论：华为终端设备存在通信安全的威胁，终端系统存在 ”后台” ，这样的情况下，我们就更需要用实力证明自己。于是，2021年6月2日，华为正式公布了其自主研发的操作系统—HarmonyOS，也就是鸿蒙</p>
<image src="https://img-blog.csdnimg.cn/f9ee7070a9cb4b08ba5e5bcd16362dd8.jpg" width="85%">

<p>发布会上，令我印象最深刻的莫过于HarmonyOS万物互联、分布式的强大特性以及其Feature Ability（元服务）的用户界面展现形式，这使得它与用户的交互更加流畅、简洁、方便。下面我们就来细品HarmonyOS的 “服务卡片” 功能</p>
<h2 id="原子化服务"><a href="#原子化服务" class="headerlink" title="原子化服务"></a>原子化服务</h2><p>在此之前呢，我们不得不去了解下与 “服务卡片” 有着密切关系的原子化服务。原子化服务是由HarmonyOS 提供的一种面向未来的服务提供方式，它拥有独立、非驱动、轻便（无需安装）等特性，旨在为用户提供一种效率极佳的服务方式<br><img src="https://img-blog.csdnimg.cn/68e1fba7e8944abc8379de740c66e80a.png"><br>它具有随处可见、跨设备、服务直达等特性：</p>
<div class="note info"><p>（1）服务发现：原子化服务可在服务中心发现并使用；<br>（2）智能推荐：原子化服务可以基于合适场景被主动推荐给用户使用；用户可在服务中心和小艺建议中发现系统推荐的服务；<br>（3）服务卡片：支持用户无需打开原子化服务便可获取服务内重要信息的展示和动态变化，如天气、关键事务备忘、热点新闻列表；<br>（4）支持跨设备分享：例如接入华为分享后，用户可分享原子化服务给好友，好友确认后打开分享的服务；<br>（5）支持多端协同：例如手机用作文档翻页和批注，配合智慧屏显示完成分布式办公；手机作为手柄，与智慧屏配合玩游戏；</p>
</div>
<h1 id="服务卡片"><a href="#服务卡片" class="headerlink" title="服务卡片"></a>服务卡片</h1><image src="https://img-blog.csdnimg.cn/7835e9dac7a24d74b5399f7138c29f18.jpg" width="70%">

<p>相信不少朋友第一次听到 “服务卡片” 这个词汇，都会在想：这不就是我手机屏幕上的 “小组件” 吗？哎！你还别说，它们之间还真有不同之处，但又有异曲同工之妙<br>首先呢，大家可以回想一下我们日常使用电子产品的操作习惯，我们在使用小组件的时候：比如在主屏幕上新添加一个 “照片” 的小组件，这个小组件可以实现不定期的自动更换、主题筛选、人物分类等等这些功能。那么如你恰巧看到了一张非常感兴趣的照片，想要查看它，是不是需要点击照片进入详情查看呢？这样的交互方式相信大家都非常了解。但是你是否思考过，它可以更加地 “人性化”，更加 ”懂你“ 呢？</p>
<image src="https://img-blog.csdnimg.cn/6997fbe81f824faa863ef6c621233c14.jpg" width="60%">

<p>没错，这就是HarmonyOS，它做到了。在鸿蒙的设计中，服务卡片的引入是与以往EMUI最大的不同，在屏幕上我们只需要找到图标下方有 “小横线” 的app，当然，这些也正是那些支持HarmonyOS的app。我们只需要在图标位置处，轻轻上划，就能呼出相对应的应用卡片，这些卡片还可以实现自定义大小 、固定在主屏幕等功能</p>
<image src="https://img-blog.csdnimg.cn/68758b827e6c4d408b5eac91f56e9516.png" width="30%">

<p>相较于封闭式的IOS系统来说，我个人认为就是把3DTouch功能变得不需要 ”3D“ 了，无需用力，仅需轻扫。 又更像是小组件的父类，承接其外。这样的设计方式在使用上显得尤为灵活，并不需要在特定的位置才能使用。可以这么说，只要你屏幕放得下，随便你怎么用</p>
<image src="https://img-blog.csdnimg.cn/8b8a6787d4ca40ad9c4641e00314370a.png" width="30%">

<p>开发者们可以为这些服务卡片 ”量体裁衣“，定制特有的功能，提高日常使用效率。在子菜单能力的加持下，像我们日常使用的某宝支付，打开地铁卡根本无需进入app，只要 “蹦” 出来一张小卡片方可实现功能。这是我们不得不惊叹：这是多么快捷、高效的交互体验啊！</p>
<image src="https://img-blog.csdnimg.cn/83b14020b5964b07bff864a0557f0bf6.png" width="30%">

<p>在服务卡片的开发过程中有三者参与，分别是卡片提供方、卡片使用方和卡片管理服务，它们之间相互作用，共同维持着便捷功能的实现</p>
<image src="https://img-blog.csdnimg.cn/425df9ca67f64e438fd1841bf4d0a1b5.png" width="80%">

<p>HarmonyOS Developer中我们可以了解到这三者的分工：</p>
<h2 id="·-提供方模块"><a href="#·-提供方模块" class="headerlink" title="· 提供方模块"></a><strong>·</strong> 提供方模块</h2><blockquote>
<p>提供卡片显示内容的HarmonyOS应用或原子化服务，控制卡片的显示内容、控件布局以及控件点击事件</p>
</blockquote>
<h3 id="卡片服务："><a href="#卡片服务：" class="headerlink" title="卡片服务："></a>卡片服务：</h3><blockquote>
<p>由卡片提供方开发者实现，开发者实现onCreateForm、onUpdateForm和onDeleteForm处理创建卡片、更新卡片以及删除卡片等请求，提供相应的卡片服务</p>
</blockquote>
<h3 id="通信适配层："><a href="#通信适配层：" class="headerlink" title="通信适配层："></a>通信适配层：</h3><blockquote>
<p>由HarmonyOS SDK提供，负责与卡片管理服务通信，用于将卡片的更新数据主动推送到卡片管理服务</p>
</blockquote>
<h3 id="卡片提供方实例管理："><a href="#卡片提供方实例管理：" class="headerlink" title="卡片提供方实例管理："></a>卡片提供方实例管理：</h3><blockquote>
<p>由卡片提供方开发者实现，负责对卡片管理服务分配的卡片实例进行持久化管理</p>
</blockquote>
<h2 id="·-使用方模块"><a href="#·-使用方模块" class="headerlink" title="· 使用方模块"></a>· 使用方模块</h2><blockquote>
<p>显示卡片内容的宿主应用，控制卡片在宿主中展示的位置</p>
</blockquote>
<h2 id="·-管理服务模块"><a href="#·-管理服务模块" class="headerlink" title="· 管理服务模块"></a>· 管理服务模块</h2><blockquote>
<p>用于管理系统中所添加卡片的常驻代理服务，包括卡片对象的管理与使用，以及卡片周期性刷新等<br>在卡片使用方和提供方需要添加&#x2F;删除&#x2F;请求更新卡片时，卡片管理服务会拉起卡片提供方获取卡片信息</p>
</blockquote>
<h3 id="通信适配层：-1"><a href="#通信适配层：-1" class="headerlink" title="通信适配层："></a>通信适配层：</h3><blockquote>
<p>负责与卡片使用方和提供方进行RPC通信</p>
</blockquote>
<h3 id="周期性刷新："><a href="#周期性刷新：" class="headerlink" title="周期性刷新："></a>周期性刷新：</h3><blockquote>
<p>在卡片添加后，根据卡片的刷新策略启动定时任务周期性触发卡片的刷新</p>
</blockquote>
<h3 id="卡片缓存管理："><a href="#卡片缓存管理：" class="headerlink" title="卡片缓存管理："></a>卡片缓存管理：</h3><blockquote>
<p>在卡片添加到卡片管理服务后，对卡片的视图信息进行缓存，以便下次获取卡片时可以直接返回缓存数据，降低时延</p>
</blockquote>
<h3 id="卡片生命周期管理："><a href="#卡片生命周期管理：" class="headerlink" title="卡片生命周期管理："></a>卡片生命周期管理：</h3><blockquote>
<p>对于卡片切换到后台或者被遮挡时，暂停卡片的刷新；以及卡片的升级&#x2F;卸载场景下对卡片数据的更新和清理</p>
</blockquote>
<h3 id="卡片使用方对象管理："><a href="#卡片使用方对象管理：" class="headerlink" title="卡片使用方对象管理："></a>卡片使用方对象管理：</h3><blockquote>
<p>对卡片使用方的RPC对象进行管理，用于使用方请求进行校验以及对卡片更新后的回调处理</p>
</blockquote>
<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>有关JDK的环境配置，请参考博主前不久的<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMjY5OTYxL2FydGljbGUvZGV0YWlscy8xMTg4NzU5Njc=">文章<i class="fa fa-external-link-alt"></i></span>。安装好之后，我们到华为官网下载<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaGFybW9ueW9zLmNvbS9jbi9kZXZlbG9wL2RldmVjby1zdHVkaW8jZG93bmxvYWQ=">DevEco Studio<i class="fa fa-external-link-alt"></i></span>（官方IDE），无需更改，选择默认配置即可。由于没有具体项目开发，此处不再放置源码，后续学习中将不断更新，还请多多关注，下面实现华为穿戴设备—智能手表中 Hello World 的输出</p>
<p>新建项目</p>
<image src="https://img-blog.csdnimg.cn/380f5d42f1c24807afab8aeb1d2ba3a6.png" width="85%">

<p>至少选择一个类型</p>
<image src="https://img-blog.csdnimg.cn/89fd7cda580242fd90bbe57c2d83697c.png" width="85%">

<p>进入之后显示如下界面</p>
<image src="https://img-blog.csdnimg.cn/7f468ab4a51947db9b1c908b5a29ddf3.png" width="85%">

<p>单击运行显示 Hello World</p>
<image src="https://img-blog.csdnimg.cn/4c307b1985ac47b3972695b24c42a214.png" width="85%">

<p>简单的鸿蒙版 Hello World 到这里就完成啦，还不赶快动手试试</p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>HarmonyOS</tag>
      </tags>
  </entry>
  <entry>
    <title>git push 忽略 idea 文件</title>
    <url>/2021/09/18/gitpush-ignore-idea-file/</url>
    <content><![CDATA[<p>我们在上传项目时，肯定会有一些不需要上传到远程仓库的文件，<strong>idea</strong>工具的一些生成文件便是如此，例如：</p>
<p><img src="https://img-blog.csdnimg.cn/944043c0cb5d44688571880c354a9fc8.png"></p>
<p>显然这些东西不需要 push 到远程，我们直接 KO 掉</p>
<p><img src="https://img-blog.csdnimg.cn/06bf8e9fe51c40e598c577d560233254.png"></p>
<p>加入<mark class="label ">.idea</mark>项后，push 的时候 git 就会忽略它了，而且项目中也没有了 idea 文件，很简洁嘛，嘿嘿</p>
]]></content>
      <categories>
        <category>版本控制</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 IntelliJ IDEA 项目结构不显示</title>
    <url>/2021/08/02/idea-project-structure-miss/</url>
    <content><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在使用 IDEA 的时候，忽然发现打开项目变成了这样</p>
<p><img src="https://img-blog.csdnimg.cn/bf98986582f2435a91585e1e9c2f453b.png"></p>
<p>这里就有疑问了，我的项目结构呢？？？</p>
<hr>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>左上角依次找到file-&gt;project structure-&gt;modules-&gt; +号-&gt;import modules，选择导入的项目文件</p>
<p><img src="https://img-blog.csdnimg.cn/6096c629aec44261a5e975cd7791319b.png"></p>
<p>选择下面两项</p>
<p><img src="https://img-blog.csdnimg.cn/52a8be8717a647498f25c3bc12d79464.png"></p>
<p>最后点击 Finish就显示出来啦!</p>
<p><img src="https://img-blog.csdnimg.cn/761eee8d6b2b4adebfaa345bcb3871fb.png"></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>解决方案</tag>
      </tags>
  </entry>
  <entry>
    <title>Idea Ultimate 连接 MySQL 数据库</title>
    <url>/2021/12/08/idea-ultimate-connect-mysql/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>开始链接前，请确保本机上安装的 idea 是 Ultimate 专业版，<span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS96aC1jbi9pZGVhL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=">点我下载<i class="fa fa-external-link-alt"></i></span>，JetBrains 旗下 Community 社区版本并未集成数据库开发工具，这一点我们从官网两个版本的下载介绍上也能看到</p>
<p><img src="https://img-blog.csdnimg.cn/90999657caf84e5a980dbc08d4dd6ec7.png"></p>
<h1 id="配置-MySQL"><a href="#配置-MySQL" class="headerlink" title="配置 MySQL"></a>配置 MySQL</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>一般来说，安装V5左右的版本就足够，版本号越大占用后台资源会更多，我们根据实际开发需求，选择合适的就好，这里演示 5.7 版本的安装过程（其他版本基本一致，按钮位置可能有所不同）</p>
<p>进入<span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv">官方网站<i class="fa fa-external-link-alt"></i></span>后，点击 Looking for previous GA versions 切换到早期版本</p>
<p><img src="https://img-blog.csdnimg.cn/e108c33c8acf4af1acb35569bfb5ff66.png"></p>
<p>在线安装就看你的网速质量了，第二个是完整安装文件，直接下载就好（如果需要验证，登陆 Oracle 账号校验即可）</p>
<p><img src="https://img-blog.csdnimg.cn/e9f3349c85744e848847c253d3abe751.png"></p>
<p>详细的安装教程<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xODg0MTY2MDc=">请看这里<i class="fa fa-external-link-alt"></i></span>，这里主要讲下配置过程</p>
<h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><div class="note info"><p>右键【此电脑】-&gt;【属性】-&gt;【高级系统设置】-&gt;【环境变量】</p>
</div>

<p>添加<mark class="label ">MYSQL_HOME</mark>变量，变量值为电脑 MySQL 的安装位置</p>
<p><img src="https://img-blog.csdnimg.cn/1f70e66fd28e4e51b486021b1190eef7.png"></p>
<p>添加 Path 系统变量</p>
<p><img src="https://img-blog.csdnimg.cn/e4bea0bc3dde48a3a0d07b07c5526a1e.png"></p>
<h2 id="检查配置"><a href="#检查配置" class="headerlink" title="检查配置"></a>检查配置</h2><a class="btn" href="#">Windows</a>+<a class="btn" href="#">R</a> 打开命令行，键入 <mark class="label ">cmd</mark> 打开命令行，输入

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">my sql -uroot -p //root表示用户名，-p表示输入用户密码</span><br></pre></td></tr></table></figure>
<p>输入安装 MySQL 时的账户密码，出现图示信息则配置正确</p>
<p><img src="https://img-blog.csdnimg.cn/f09c0f1c0da44c2592c9759dbba45fb5.png"></p>
<h1 id="MysQL服务状态"><a href="#MysQL服务状态" class="headerlink" title="MysQL服务状态"></a>MysQL服务状态</h1><p>以<mark class="label ">管理员身份</mark>打开命令行，分别输入以下命令</p>
<h2 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net start mysql    //开启服务</span><br></pre></td></tr></table></figure>
<h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net stop mysql  //关闭服务</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/4e33172853414cbf824ebd9e67bdc08f.png"></p>
<h1 id="在idea-Ultimate中建立连接"><a href="#在idea-Ultimate中建立连接" class="headerlink" title="在idea Ultimate中建立连接"></a>在idea Ultimate中建立连接</h1><h2 id="引入-Drivers-驱动"><a href="#引入-Drivers-驱动" class="headerlink" title="引入 Drivers 驱动"></a>引入 Drivers 驱动</h2><p>建立项目后，添加 MysQL数据源</p>
<p><img src="https://img-blog.csdnimg.cn/0a2d856ba370412b99c25dc771a7c2ab.png"></p>
<p>找到驱动路径</p>
<p><img src="https://img-blog.csdnimg.cn/2ff951992f364082a794f4e611b1b0eb.png"></p>
<p>引入外部库中</p>
<p><img src="https://img-blog.csdnimg.cn/f99953fac0c64d318181847251dfcaa1.png"></p>
<p>成功后，项目结构中也会显示</p>
<p><img src="https://img-blog.csdnimg.cn/9959bcf45fb04a4f9802514530150cad.png"></p>
<h2 id="添加表"><a href="#添加表" class="headerlink" title="添加表"></a>添加表</h2><h3 id="创建-schema-架构"><a href="#创建-schema-架构" class="headerlink" title="创建 schema 架构"></a>创建 schema 架构</h3><p><img src="https://img-blog.csdnimg.cn/18cace6a270741588183484b882d4735.png"></p>
<p><img src="https://img-blog.csdnimg.cn/1f566f2e3e464ae6bf95d504a60e3885.png"></p>
<h3 id="创建-Table-表"><a href="#创建-Table-表" class="headerlink" title="创建 Table 表"></a>创建 Table 表</h3><p><img src="https://img-blog.csdnimg.cn/234df321fdec4b4fa898d805856ce3e6.png"></p>
<p>添加属性</p>
<p><img src="https://img-blog.csdnimg.cn/7ebd2bdaf4f348a589b92fc8ad61b355.png"></p>
<h2 id="写入数据信息"><a href="#写入数据信息" class="headerlink" title="写入数据信息"></a>写入数据信息</h2><p>方式1：可视化，图形界面操作</p>
<p><img src="https://img-blog.csdnimg.cn/f8244f091ec945bdbdfa0aaea1243897.png"></p>
<p>方式2：sql 语句添加</p>
<p><img src="https://img-blog.csdnimg.cn/a288d0e71dc04bba8e40805ae113e258.png"></p>
<p>执行结果</p>
<p><img src="https://img-blog.csdnimg.cn/bab61d00a26a447abc8e48f99d6094c3.png"></p>
<h1 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h1><p>请根据注释位置，修改配置信息后再 Execute 执行</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="comment">// MySQL 8.0 以下版本 - JDBC 驱动名称及数据库 URL</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JDBC_DRIVER</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DB_URL</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/your schema&quot;</span>; <span class="comment">// ‘/’后写入你的架构名称</span></span><br><span class="line">    <span class="comment">// 数据库的用户名与密码</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">USER</span> <span class="operator">=</span> <span class="string">&quot;your sql account&quot;</span>; <span class="comment">//你的数据库“用户名”</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PASS</span> <span class="operator">=</span> <span class="string">&quot;your sql password&quot;</span>;<span class="comment">//你的数据库密码</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">stmt</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">// 注册 JDBC 驱动</span></span><br><span class="line">            Class.forName(JDBC_DRIVER);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 打开链接</span></span><br><span class="line">            System.out.println(<span class="string">&quot;数据库建立链接中...&quot;</span>);</span><br><span class="line">            conn = DriverManager.getConnection(DB_URL,USER,PASS);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行查询</span></span><br><span class="line">            System.out.println(<span class="string">&quot;正在实例化Statement对象...&quot;</span>);</span><br><span class="line">            stmt = conn.createStatement();</span><br><span class="line">            String sql;</span><br><span class="line">            sql = <span class="string">&quot;SELECT * FROM information&quot;</span>;</span><br><span class="line">            <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> stmt.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 展开结果集数据库</span></span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                <span class="comment">// 通过字段检索</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> rs.getString(<span class="string">&quot;age&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 输出数据</span></span><br><span class="line">                System.out.print(<span class="string">&quot;ID: &quot;</span> + id);</span><br><span class="line">                System.out.print(<span class="string">&quot;, 姓名: &quot;</span> + name);</span><br><span class="line">                System.out.print(<span class="string">&quot;, 年龄: &quot;</span> + age);</span><br><span class="line">                System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 操作完成后关闭</span></span><br><span class="line">            rs.close();</span><br><span class="line">            stmt.close();</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException se)&#123;</span><br><span class="line">            <span class="comment">// 处理 JDBC 错误</span></span><br><span class="line">            se.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            <span class="comment">// 处理 Class.forName 错误</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">// 释放资源</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(stmt!=<span class="literal">null</span>) stmt.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException se2)&#123;</span><br><span class="line">            &#125;<span class="comment">// 不进行任何操作</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(conn!=<span class="literal">null</span>) conn.close();</span><br><span class="line">            &#125;<span class="keyword">catch</span>(SQLException se)&#123;</span><br><span class="line">                se.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;数据库链接释放!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试类执行结果</p>
<p><img src="https://img-blog.csdnimg.cn/816f8113ae29458d95c980ee532dec57.png"></p>
<hr>
<p>参考资料：</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xODg0MTY2MDc=">MySQL的详细安装教程<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGFuZGFseS9wLzExNzM4Nzg5Lmh0bWwjOn46dGV4dD1NeXNxbCVFNSU5MCVBRiVFNSU4QSVBOCVFNSU5MCU4RSVFNSU4MSU5QyVFNiVBRCVBMiVFNyU5QSU4NCVFOCVBNyVBMyVFNSU4NiVCMyVFNiU5NiVCOSVFNiVCMyU5NSUyMCVFNSVBRSU4OSVFOCVBMyU4NW15c3FsJUU1JTkwJThFJUVGJUJDJThDJUU2JTlDJThEJUU1JThBJUExJUU2JTk3JUEwJUU2JUIzJTk1JUU2JUFEJUEzJUU1JUI4JUI4JUU1JTkwJUFGJUU1JThBJUE4JUVGJUJDJThDJUU2JThBJUE1JUU5JTk0JTk5JUU1JUE2JTgyJUU0JUI4JThCJUVGJUJDJTlBJTIwJUU4JUE3JUEzJUU2JUIzJTk1JUU2JTk2JUI5JUU2JUIzJTk1JUVGJUJDJTlBJTIwMSUyMCVFNCVCQiVBNSVFNyVBRSVBMSVFNyU5MCU4NiVFNSU5MSU5OCVFOCVCQSVBQiVFNCVCQiVCRCVFOCVCRiU5MCVFOCVBMSU4QyVFNSU5MSVCRCVFNCVCQiVBNCVFNiU4RiU5MCVFNyVBNCVCQSVFNyVBQyVBNiUyMDIlMjAlRTclOTQlQTglRTUlOTElQkQlRTQlQkIlQTQlRTglQkYlOUIlRTglQTElOENteXNxbCVFNSVBRSU4OSVFOCVBMyU4NSVFNyU5QiVBRSVFNSVCRCU5NSVFNyU5QSU4NGJpbiVFNyU5QiVBRSVFNSVCRCU5NSVFRiVCQyU5QSUyMGNkLCVFOCVCRiU5MCVFOCVBMSU4QyVFNSU4OCU5RCVFNSVBNyU4QiVFNSU4QyU5Nm15c3FsJUU2JTlDJThEJUU1JThBJUExJUU1JTkxJUJEJUU0JUJCJUE0JUVGJUJDJTlBJTIwMSUyMG15c3FsZCUyMC0taW5pdGlhbGl6ZS1pbnNlY3VyZSUyMC0tdXNlciUzRG15c3FsJTIwNiUyMCVFOCVCRiU5MCVFOCVBMSU4QyVFNiU5QiVCNCVFNiU5NiVCMCVFOSU4NSU4RCVFNyVCRCVBRSVFNiU5NiU4NyVFNCVCQiVCNiVFNSU5MSVCRCVFNCVCQiVBNCVFRiVCQyU5QSUyMDE=">Mysql启动后停止的解决方法<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RoX251bS9hcnRpY2xlL2RldGFpbHMvNzE0MDI4MDE=">MySQL修改root密码的4种方法<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9iYnMuY3Nkbi5uZXQvdG9waWNzLzM3MDA4OTY2OQ==">姓名 性别 密码等在mysql中都保存为什么类型<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2FydGljbGUvNDUyMzQwNy5odG1s">通过IntelliJ IDEA软件实现Java项目连接MySQL的详细过程<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>idea 更新项目后丢失本地文件</title>
    <url>/2021/09/01/idea-update-lose-file/</url>
    <content><![CDATA[<p>早上刚刚提交的代码，怎么过了个周末就不见了，真是吓得我出了一身冷汗</p>
<p>还好找了回来，记录一下，免得以后再次遇到</p>
<p><img src="https://img-blog.csdnimg.cn/6cdb202220a947d8a70dabb2e198e6fa.png"></p>
<p>项目名称位置右键找到本地历史，选中修改的版本完成回退，还好没丢咦</p>
]]></content>
      <categories>
        <category>版本控制</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>IOS15 beta 8 开发者预览版更新【附升级通道】</title>
    <url>/2021/06/08/ios15-beta-update/</url>
    <content><![CDATA[<h1 id="使用体验，BUG反馈"><a href="#使用体验，BUG反馈" class="headerlink" title="使用体验，BUG反馈"></a>使用体验，BUG反馈</h1><p><img src="https://img-blog.csdnimg.cn/027694457765427b8b3383e0da2a8778.png"></p>
<h1 id="更新部分"><a href="#更新部分" class="headerlink" title="更新部分"></a>更新部分</h1><div class="note info"><ol>
<li>闹钟回归机械样式（但无声音）；</li>
<li>相机可以快速识别文字内容（目前认为升级后最方     便的功能）；</li>
<li>Safari浏览器，UI更新，支持底部下滑切换页面，输入搜索内容更加便捷；</li>
<li>FaceTime噪声单独处理，支持分享屏幕内容（自认为国内很少人使用，不过第三方常用软件如果可以增加这个功能的话还是很不错的）；</li>
<li>地图app新增四种模式，可根据不同使用场景按需切换；</li>
<li>非常便捷的备忘录，在“新建备忘录”空白出长按屏幕，选择“来自相机的文本”即可实现实时录入文本内容，识别正确率还是很高的；</li>
<li>图标类变化，“天气app”图标镜像显示。“相机app”删除了快门按钮（很微小，不说基本看不出来，但显然也没什么实质性作用）；</li>
<li>支持“跨屏拖拽”，比如聊天界面中的消息，长按不松手，同时上滑导航条，选中要粘贴的位置即可直接粘贴（虽然不跨屏也能实现 ）；</li>
<li>“照片app”上滑可以查看图片详情和具体位置，可以详细看到镜头信息；</li>
</ol>
</div>

<h1 id="iOS-15-beta3更新"><a href="#iOS-15-beta3更新" class="headerlink" title="iOS 15 beta3更新"></a>iOS 15 beta3更新</h1><image src="https://img-blog.csdnimg.cn/d50bb65ca8234acf95959d9b7fb5d3df.png" width="42%">

<div class="note info"><ol>
<li>在iOS15第二个测试版基础上，最大的改进便是对Apple自家浏览器Safari进行了功能上的改进以及界面的设计：在iOS 15 beta2中，Apple对Safari浏览器标签栏的位置进行改动，调整到屏幕下方，但存在输入内容时，标签栏又会回到屏幕上方，在beta3中实现了标签栏始终在在屏幕下方。除此之外，搜索界面更是能展示出搜索内容的分类、搜索结果、收藏夹中的内容。并隐含了“长按网页底部地址的输入栏，二级菜单中显示‘Reload’；</li>
<li>对iPhone恢复出厂设置的改动：进入 设置-通用-，原有的还原界面更新为：Transfer or Reset iPhone（汉化问题，国行目前显示英文） 对将旧iPhone的数据迁移到新设备上的用户非常方便；</li>
<li>在iOS15中，Apple引入了”专注“模式，在beta3中”专注状态“以及”电话“的位置，被分配到了专注模块中去，更适合不同的场景使用；</li>
<li>AppStore中，第一次进入会对用户展示新版系统中的新增功能；</li>
<li>Apple Music音乐小组件可以跟随不同的音乐显示不同的背景颜色，和传统的固定颜色红色差异明显；</li>
</ol>
</div>

<h1 id="iOS-15-beta4更新"><a href="#iOS-15-beta4更新" class="headerlink" title="iOS 15 beta4更新"></a>iOS 15 beta4更新</h1><p><img src="https://img-blog.csdnimg.cn/a12956d34e8641cbbd21ba915730c1c2.png"></p>
<div class="note info"><ol>
<li>支持MagSafe外接电池；</li>
<li>设置中通知、备忘录的图标修改；</li>
<li>Safari浏览器底部Reload按钮更换为底部直接加入了刷新按钮，浏览网页更加方便；</li>
</ol>
</div>

<h1 id="iOS-15-beta5更新"><a href="#iOS-15-beta5更新" class="headerlink" title="iOS 15 beta5更新"></a>iOS 15 beta5更新</h1><p>天气APP图标更新</p>
<img src="https://img-blog.csdnimg.cn/338242b098c14a599db0bbfc1eabebcb.png" width="60%">

<p>锁屏界面 “相机” 图标更新</p>
<img src="https://img-blog.csdnimg.cn/9545cbc6b0d243cd905f2693ccf6b96a.png" width="60%">

<p>控制中心 “声音识别” 图标更新</p>
<img src="https://img-blog.csdnimg.cn/3f6442eb29d747789926f131ae947b79.png" width="60%">

<p>iPhone关机信息提示：iPhone关机后仍可被找到，可以临时禁用该功能</p>
<img src="https://img-blog.csdnimg.cn/33342a493971423fa3a290481a7bafab.png" width="50%">

<p>Apple在照片、地图、提醒事项等应用中添加了介绍提示，展示新功能</p>
<h1 id="BUG"><a href="#BUG" class="headerlink" title="BUG"></a>BUG</h1><div class="note danger"><ol>
<li>软件打开闪退（eg:墨xx，a游…)；</li>
<li>第三方音乐app在切换视图时，音频断断续续；</li>
<li>（此条非BUG，纯个人体验）键盘更新mac样式选字后，中文状态下输入英文，不太顺滑，需要切换英文&#x2F;&#x2F;同之前，稍稍有些麻烦；</li>
<li>部分系统弹窗汉化不全面；</li>
<li>天气app，显示全部城市时勿过渡动画，略显突兀；</li>
<li>微X app显示浮窗时，联系人头像会被“切成”16宫格，卡顿；</li>
<li>不知是否应归为“BUG”，升级前电池效率93%，更新IOS15后第一天94%，第二天95%（目前停留位置）；</li>
<li>X信app公众号短视频无法播放，兼容性欠佳；</li>
<li>目前右上角下滑出现的”控制中心”中,关于”音乐app”的”正在播放”歌曲,显示不准确,使用国内常用音乐软件播放歌曲,仍默认显示AppleMusic资源库中的歌曲,且无法改动,显示有误;</li>
<li>空气质量显示地图无法刷新界面;</li>
</ol>
</div>

<h1 id="升级通道"><a href="#升级通道" class="headerlink" title="升级通道"></a>升级通道</h1><div class="note info"><p>点击下方链接（来源于网络），在自带的Safari浏览器中打开，选择“允许”，下载描述文件。根据提示完成安装，重启设备后在设置中检查更新就可以看到更新推送啦！<br><span class="exturl" data-url="aHR0cHM6Ly9kLXVwZGF0ZXIuaTQuY24vd2ViL21vYmlsZWNvbmZpZy9pT1NfMTVfRFBfQmV0YV9Qcm9maWxlLm1vYmlsZWNvbmZpZw==">升级通道<i class="fa fa-external-link-alt"></i></span></p>
</div>

<h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><div class="note info"><p>毕竟是第一个版本，还是会有一定风险的，升级前最好全备份，万一有问题也能回退<br>现在的测试版基本趋于稳定，表现良好，预计马上就会推出正式版，等不及的小伙伴们 beat 7 这个版本还是值得一试的(2021.8.27)</p>
</div>

<p>不定期更新，欢迎讨论！！！</p>
<hr>
<p>文章部分图片源于网络，侵删致歉</p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>IOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础有我足矣</title>
    <url>/2021/08/04/java-basics/</url>
    <content><![CDATA[<h1 id="历史沿革"><a href="#历史沿革" class="headerlink" title="历史沿革"></a>历史沿革</h1><p>Java是印度尼西亚“爪哇岛”的英文名，因气候环境，地理位置等因素盛产咖啡而闻名。Java语言中的许多命名都与其有关：如<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9KYXZhQmVhbnMvNTE1NTYxMg==">JavaBeans<i class="fa fa-external-link-alt"></i></span>。所以Sun和Java的Logo是个非常形象的图标—冒热气儿的咖啡</p>
<p>早期的Java只是<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9TdW4lMjBNaWNyb3N5c3RlbXM=">Sun MicroSystems<i class="fa fa-external-link-alt"></i></span>公司在1990年12月开始研究的一个内部项目。Sun公司一位名为帕特里克·诺顿的工程师因为其公司难于操作的C++&#x2F;C语言编译器而决定改用<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9uZXh0LzE3MTk0OTY=">NeXT<i class="fa fa-external-link-alt"></i></span>，同时他也获得了研究公司的一个叫做“Stealth计划”的项目的机会</p>
<p>“Stealth计划”后来改名为“Green计划”，詹姆斯·高斯林和Mike Sheridan也加入了帕特里克的工作小组。根据有限资金，乔伊决定开发一种集C语言和Mesa语言大成的新语言，在一份报告上，乔伊把它叫做“未来”。他将要创造出一种全新的语言，被他命名为“Oak”，以办公室外的橡树命名</p>
<h1 id="Java-语言基础"><a href="#Java-语言基础" class="headerlink" title="Java 语言基础"></a>Java 语言基础</h1><h2 id="1-1-基本元素"><a href="#1-1-基本元素" class="headerlink" title="1.1 基本元素"></a>1.1 基本元素</h2><h3 id="1-1-1-标识符"><a href="#1-1-1-标识符" class="headerlink" title="1.1.1 标识符"></a>1.1.1 标识符</h3><p>（1）标识符包含类名、变量名、常量名、方法名…；</p>
<p>（2）命名规则：字母、下划线、美元符号开头，后可接此三种符号或0-9的数字，注意不要和关键字   重合；</p>
<p>（3）命名“约定”：变量名、方法名首单词小写，其余单词仅首字母大写。类名、接口名首字母大写</p>
<p>常量全都用大写字母、单词命名，下划线常用于常量名单词的分隔。Java严格区分字母大小写，例如aB和Ab是完全不同的合法标识符；</p>
<h3 id="1-1-2-关键字"><a href="#1-1-2-关键字" class="headerlink" title="1.1.2 关键字"></a>1.1.2 关键字</h3><image src="https://img-blog.csdnimg.cn/cd707ae0f1124001851f186e02f6afb1.png" width="90%">

<p>重点标记一些Java中特有的关键字：<br>（1)数据类型：<mark class="label ">boolean</mark>、byte、char、double、false、true、void、<mark class="label ">instanceof</mark>、float、int、long、new、<mark class="label ">null</mark>、short；</p>
<p>（2)语句：break、case、catch、continue、、return、<mark class="label ">super</mark>、switch、this、throw、try、while、default、do、else、<mark class="label ">finally</mark>、for、if；</p>
<p>（3)修饰：<mark class="label ">abstract</mark>、<mark class="label ">final</mark>、<mark class="label ">native</mark>、<mark class="label ">transient</mark>、volatile、private、protected、public、static、<mark class="label ">synchronized</mark>；</p>
<p>（4)方法、类、接口、包：<mark class="label ">interface</mark>、<mark class="label ">import</mark>、class、<mark class="label ">extends</mark>、 <mark class="label ">implements</mark>、<mark class="label ">package</mark>、throws；</p>
<h3 id="1-1-3-保留字"><a href="#1-1-3-保留字" class="headerlink" title="1.1.3 保留字"></a>1.1.3 保留字</h3><p>一些不能用做自定义标识符，但又有自己专门用途和意义的 “ 关键字 ” ；形象的来讲就是他们没有成为关键字的权利，但是有享受关键字的“待遇”，像是充值VIP一般，sizeof、goto、const，它们仨就是VIP中的成员。说不定随着语言的发展，慢慢它们也成为关键字了呢？</p>
<h3 id="1-1-4-分隔符"><a href="#1-1-4-分隔符" class="headerlink" title="1.1.4 分隔符"></a>1.1.4 分隔符</h3><p>像C&#x2F;C++中熟知的空白符（Tab、回车、空格、换行）、普通分隔符（点、分号、逗号……）、单行注释符 <code>// 注释内容</code> ，多行注释符 <code>/* 注释内容 */</code> 就不再详细展开来讲，这里我们主要了解Java中一些不一样的东西—Java文档注释格式，它的格式是<code>/ * *注释内容 * /</code></p>
<p>注意：这类注释只应用在声明之前，最为方便的是它可以利用<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9qZGsvMTAxMT9mcj1hbGFkZGlu">JDK<i class="fa fa-external-link-alt"></i></span>中提供的 javadoc 工具，根据注释内容自动生成HTML代码说明文档</p>
<h2 id="1-2-数据类型"><a href="#1-2-数据类型" class="headerlink" title="1.2 数据类型"></a>1.2 数据类型</h2><p>那么，何为数据类型或者说数据类型能说明什么呢?它存在的意义就是：表明变量、常量、表达式的性质。在进行运算时，只有符合“相同数据类型”这一条件，才可以继续进行。按照大类区分，Java中有简单、引用两种数据类型。分类如图所示</p>
<image src="https://img-blog.csdnimg.cn/e7d86e6e8cbb44468cfa424287fab354.PNG" width="50%">

<h3 id="1-2-1-基本数据类型"><a href="#1-2-1-基本数据类型" class="headerlink" title="1.2.1 基本数据类型"></a>1.2.1 基本数据类型</h3><p>在使用计算机进行运算时，我们都知道不同的数据类型在其中表示的数值范围、所占内存大小都不相同，下表给出了Java基本数据类型的具体参数</p>
<image src="https://img-blog.csdnimg.cn/89d6b81fb52a480b841e72551bd72de7.png" width="80%">

<p>表中，我们仍能对这些数据类型进行划分，比如byte、short、int、long、float、double属于数值型数据，char、boolean属于非数值型数据。Java因其基本数据类型拥有固定长度的特性，而促成了其基本数据类型优良的跨平台移植属性，数值类型的数据都与系统无关</p>
<h3 id="1-2-2-变量"><a href="#1-2-2-变量" class="headerlink" title="1.2.2 变量"></a>1.2.2 变量</h3><p>变量是程序中存储单元的标识符，它代表内存中的一块空间。在Java中，变量还具有类型、名称、值、作用域等属性</p>
<h4 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h4><p>遵循命名规则：</p>
<p>（1）长度不限，但系统仅承载前32个字符，变量名必须以小写字母开头，且首字符不能为数字；</p>
<p>（2）在同一作用域内，变量名必唯一且区分大小写；</p>
<p>（3）不能是关键字，布尔值或保留字（null)；</p>
<p>（4）若多个单词构成变量名，则单词需要连在一起写，且除第一个单词外，其余单词首字母需大写；</p>
<h4 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h4><p>两种声明格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="type">int</span> a,b,c;</span><br><span class="line"> <span class="type">float</span> b1,i1;</span><br><span class="line"> <span class="type">double</span> c,c1=<span class="number">2d</span>;  <span class="comment">//声明变量同时初始化</span></span><br><span class="line">（<span class="number">1</span>）类型  变量名［变量名<span class="number">1</span>,···变量名n];</span><br><span class="line">（<span class="number">2</span>）类型  变量名［变量名<span class="number">1</span>,···交量名n]=初值，···;</span><br></pre></td></tr></table></figure>

<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>变量声明后，使用赋值语句进行初始化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">varName1 = [ varName2 = ] 表达式 ;</span><br><span class="line"><span class="type">int</span> Var1,var2;</span><br><span class="line">var1=var2=<span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p>允许同时给多个变量赋值：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类型 varName1 = 表达式<span class="number">1</span> [ , varName2 = 表达式<span class="number">2</span> ] ;</span><br><span class="line"><span class="type">float</span> Var1=<span class="number">2.3f</span>,Var2=<span class="number">3.2f</span>;</span><br></pre></td></tr></table></figure>

<p>变量在声明的同时进行初始化：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">类型 变量名=表达式;</span><br><span class="line"><span class="type">double</span> variable=<span class="number">600d</span>;</span><br></pre></td></tr></table></figure>

<p>注意：除可以进行自动类型转换的数据外，变量的赋值需要“＝”号两边的数据类型一致</p>
<h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><p>变量要先定义后使用，变量定义所在的位置决定了变量的作用域，根据变量定义所处位置，其作用域可以分为：局部变量、类成员变量、方法参数变量、异常处理参数变量</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TypeDefinition</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">char</span> charVar=<span class="string">&#x27;\t&#x27;</span>; <span class="comment">//  类成员变量</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">float</span> floatVar=<span class="number">3.1415926f</span>; <span class="comment">//定义单精度浮点型常量floatVar       类成员变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        String stringVar=<span class="string">&quot;Java&quot;</span>;   <span class="comment">//在该语句块中有效       </span></span><br><span class="line">        System.out.println(<span class="string">&quot;类中定义:floatVar=&quot;</span>+floatVar+charVar+<span class="string">&quot;stringVar=&quot;</span>+stringVar);</span><br><span class="line">        System.out.println();  <span class="comment">//光标换行</span></span><br><span class="line">        show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        String stringVar=<span class="string">&quot;Test&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;类中定义:floatVar=&quot;</span>+floatVar);</span><br><span class="line">        System.out.println(<span class="string">&quot;方法中定义:stringVar=&quot;</span>+stringVar);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>当数值在不同的数据类型之间进行运算时，需要转换为统一类型来进行，不同数据类型之间有对应的转换规则。可以分为 “ 自动类型转换 ” 和 “ 强制类型转换 ” 两种</p>
<p>自动类型转换也称 “ 隐式类型转换 ” ，即编码是不需要程序员操作，系统会自动进行类型转换，一般遵循低精度可以自动转换到高精度的规则</p>
<p>但是，如果数据由高精度转换成低精度呢？那么我们就需要进行强制类型转换<br>强制转换的格式为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">（数据类型）表达式 ;</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">byte</span> c=<span class="type">byte</span>(i); <span class="comment">//int型数据a强制转换为byte型</span></span><br></pre></td></tr></table></figure>

<p>注意：根据变量所占位长的不同，在强制类型转换中可能发生数据丢失的现象，使用需谨慎。下面展示强制转换后数据丢失的例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TypeConversion</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> intVar=<span class="number">0xff56</span>;</span><br><span class="line">        <span class="type">byte</span> byteVar=(<span class="type">byte</span>)intVar;<span class="comment">//数据强制类型转换 32位整数强制转换为8为字节数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;intVar=&quot;</span>+Integer.toString(intVar,<span class="number">2</span>)+<span class="string">&quot;;&quot;</span>+intVar); <span class="comment">//转换为二进制,int型数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;byteVar=&quot;</span>+Integer.toString(byteVar,<span class="number">2</span>)+<span class="string">&quot;;&quot;</span>+byteVar);<span class="comment">//转换为二进制,字节型数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;      <span class="comment">//整型数据int有32位,而byte字节型数据只有8位,类型转换后数据丢失</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-3-常量"><a href="#1-2-3-常量" class="headerlink" title="1.2.3 常量"></a>1.2.3 常量</h3><p>常量是在程序中直接给出的一系类符号串，它的作用是为变量赋值或参与表达式的运算。可以是一个具体的数值或字符串。常量在程序执行过程中不可更改</p>
<p>常量标识符命名全部由大写字母组成，多个单词之间使用下划线进行连接，eg:Largest_Integer</p>
<h4 id="整型常量"><a href="#整型常量" class="headerlink" title="整型常量"></a>整型常量</h4><p>可以使计算机表示某个整数值，十进制、十六进制和八进制类型数据。八进制常量以 0 开头，后接 0 - 7 之间的数字（这里常常会设置一些考题，比如问：089 是什么数？千万别傻傻的写八进制数了，它是非法数）。十六进制常量以0x开头后跟多个 0 - 9之间的数字或 a - f （ A - F ）之间的字母</p>
<p>byte、short、int、long这四种类型是较为特殊的数据类型。byte 和 short类型主要应用于底层文件处理或在存储空间极其宝贵、又需要保存大型数组的特殊情况。long类型可表示数值较大的整数。int类型是最常用的，默认32位，若需要表示64位的long类型常量则在数字后加上大写字母 L 来区分</p>
<h4 id="实型常量"><a href="#实型常量" class="headerlink" title="实型常量"></a>实型常量</h4><p>两种表示形式：</p>
<p>（1）十进制数：由数字和小数点构成，且必须包含小数点；由于实数表示精度不同（单精度、双精度）。Java中默认实型常量为计算机中占64位的double类型，单精度数后面要加“f”或<br>“F”。双精度、多精度数后加“d”或“D”</p>
<p>（2）科学计数法：适用于数据过大或过小的情况，字母e或E前必须含有数字，后面的指数只能为整型数据</p>
<h4 id="布尔常量"><a href="#布尔常量" class="headerlink" title="布尔常量"></a>布尔常量</h4><p>布尔型常量只有true和false两个值，分别表示真、假两种状态。它们不对应于任何整数值，仅用作逻辑条件的判断。我们在编码时直接使用 true和false 这两个单词，不要加引号。并且注意和C &#x2F; C++语言不同的地方是，布尔型在Java中用关键字 boolean 单词全称，C&#x2F;C++中用 bool 表示布尔型数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">boolean</span> i; <span class="comment">//建立布尔类型变量i</span></span><br><span class="line">i=<span class="literal">false</span>;</span><br><span class="line">i=<span class="literal">true</span>; <span class="comment">//变量i的两种状态</span></span><br></pre></td></tr></table></figure>

<h4 id="字符串常量"><a href="#字符串常量" class="headerlink" title="字符串常量"></a>字符串常量</h4><p>字符串常量是用一对双引号括起来的一串字符。它和字符串常量在字符串仅有一个字符的情况下容易混淆：字符串常量包含转义字符 ‘\0’，其实是有两个字符。而字符常量就不一样了，无论字符串含有多少个字符，都是只占一个字符的空间大小</p>
<h4 id="字符常量和null常量"><a href="#字符常量和null常量" class="headerlink" title="字符常量和null常量"></a>字符常量和null常量</h4><p>字符常量就是单个ASCII字符用单引号括起来的形式。eg：’a’、’c’。null常量只有一个值，用null表示，表示对象的引用为空</p>
<h2 id="1-3-运算符与表达式"><a href="#1-3-运算符与表达式" class="headerlink" title="1.3 运算符与表达式"></a>1.3 运算符与表达式</h2><p>在这个部分呢，来谈谈我的感受以及重点的部分，如果你是一名学生，不论是不是主修计算机专业，相信大部分的学校都会开设《C语言》这门课程（顺便问一问，学的怎么样啊？？），课程中的运算符与表达式章节和Java中的类型不能说的上一致，那简直就是完全一样呐</p>
<p>其实和上述内容一样，这些都是属于入门级别的内容。相信我，如果你学过甚至学会了《C语言》这门课程，Java中的这个章节完全可以略过（我是看完感觉没有什么不一样的地方，如有纰漏，实属小的太菜，还望各路大佬告知）</p>
<p>最有用的莫过于运算符的优先级了，这又让我想起了那些“变态”的题目：好多表达式 “ 掺和 ” 在一起，加上各种运算符连接，问你计算结果。仅仅一分的分值不说，最令人头大的是优先级分的也忒明显了，弄一会儿就绕进去了，反正我是很少做对（本人不才）。后来就死记硬背了一些重点的运算符优先级顺序才缓解了这样的窘境</p>
<p>附上一张我背记的表格（图片分页，还望xdm海涵）：</p>
<image src="https://img-blog.csdnimg.cn/17f19b18ad264351a4f7ff98450272ad.png" width="70%">

<h3 id="1-3-1-算术运算符"><a href="#1-3-1-算术运算符" class="headerlink" title="1.3.1 算术运算符"></a>1.3.1 算术运算符</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestArithmeticOP</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1859</span>,m;</span><br><span class="line">        <span class="type">int</span> a,b,c,d;</span><br><span class="line">        d=n/<span class="number">1000</span>;</span><br><span class="line">        c=n/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">        b=n/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">        a=n%<span class="number">10</span>;</span><br><span class="line">        m=a*<span class="number">1000</span>+b*<span class="number">100</span>+c*<span class="number">10</span>+d;</span><br><span class="line">        System.out.println(<span class="string">&quot;原数据:n=&quot;</span>+n);</span><br><span class="line">        System.out.println(<span class="string">&quot;逆序数据:m=&quot;</span>+m);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1-3-2-逻辑运算符"><a href="#1-3-2-逻辑运算符" class="headerlink" title="1.3.2 逻辑运算符"></a>1.3.2 逻辑运算符</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestLogicOP</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> b1,b2=<span class="literal">true</span>,b3,b4;</span><br><span class="line">        b1=!b2;</span><br><span class="line">        System.out.println(<span class="string">&quot;逻辑值:b1=&quot;</span>+b1+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;b2=&quot;</span>+b2+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;b1&amp;b2=&quot;</span>+(b1&amp;b2));</span><br><span class="line">        <span class="type">int</span> x=<span class="number">2</span>,y=<span class="number">7</span>;</span><br><span class="line">        b3=x&gt;y&amp;&amp;x++==y--; <span class="comment">//逻辑短路问题 x和y的值并未发生改变</span></span><br><span class="line">        System.out.println(<span class="string">&quot;逻辑值:b3=&quot;</span>+b3+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;x=&quot;</span>+x+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;y=&quot;</span>+y);  </span><br><span class="line">        x=<span class="number">2</span>;</span><br><span class="line">        y=<span class="number">7</span>;</span><br><span class="line">        b4=x&gt;y&amp;x++==y--;</span><br><span class="line">        System.out.println(<span class="string">&quot;逻辑值:b4=&quot;</span>+<span class="string">&quot;;&quot;</span>+b4+<span class="string">&quot;x=&quot;</span>+x+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;y=&quot;</span>+y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逻辑与预算符 &amp;&amp; 逻辑或运算符 ||     条件与或  都会发生逻辑短路现象(仅查看一端操作数)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&amp; 与  | 或 布尔逻辑与或运算符  两端操作数都看</span></span><br></pre></td></tr></table></figure>
<h3 id="1-3-3-条件运算符"><a href="#1-3-3-条件运算符" class="headerlink" title="1.3.3 条件运算符"></a>1.3.3 条件运算符</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FindMaxMin</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">double</span> d1=<span class="number">1.1</span>,d2=-<span class="number">9.9</span>,d3=<span class="number">96.9</span>;</span><br><span class="line">        <span class="type">double</span> temp,max,min;</span><br><span class="line">        <span class="comment">//Max</span></span><br><span class="line">        temp=d1&gt;d2?d1:d2;</span><br><span class="line">        max=temp&gt;d3?temp:d3;</span><br><span class="line">        <span class="comment">//Min</span></span><br><span class="line">        temp=d1&lt;d2?d1:d2;</span><br><span class="line">        min=temp&lt;d3?temp:d3;</span><br><span class="line">        System.out.println(<span class="string">&quot;max=&quot;</span>+max);</span><br><span class="line">        System.out.println(<span class="string">&quot;min=&quot;</span>+min);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   <span class="comment">//条件运算符(三目运算符) 使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本题也可以两个变量实现 Max和Min即可 同样使用三目运算符 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Max=d1&gt;d2?d1:d2;  Max=d3&gt;Max?d3:Max;</span></span><br></pre></td></tr></table></figure>
<h3 id="1-3-4-位运算符"><a href="#1-3-4-位运算符" class="headerlink" title="1.3.4 位运算符"></a>1.3.4 位运算符</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestBitOperation</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">byte</span> b1=<span class="number">125</span>,b2=<span class="number">38</span>;</span><br><span class="line">        <span class="type">int</span> i1,i2,i3;</span><br><span class="line">        i1=b1^b2;</span><br><span class="line">        System.out.println(<span class="string">&quot;b1=&quot;</span>+Integer.toString(b1,<span class="number">2</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;b2=&quot;</span>+Integer.toString(b2,<span class="number">2</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;异或&quot;</span>+Integer.toString(i1,<span class="number">2</span>));</span><br><span class="line">        i1=i1^b2;</span><br><span class="line">        System.out.println(<span class="string">&quot;(b1^b2)^b2=&quot;</span>+Integer.toString(i1,<span class="number">2</span>));</span><br><span class="line">        i2=b1&gt;&gt;<span class="number">2</span>;</span><br><span class="line">        i3=b1&lt;&lt;<span class="number">2</span>;</span><br><span class="line">        System.out.println(b1+<span class="string">&quot;右移两位等价与除4:&quot;</span>+i2);</span><br><span class="line">        System.out.println(b1+<span class="string">&quot;左移两位等价与乘4:&quot;</span>+i3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逻辑类型运算符区别 &amp; | ^ 根据其两端操作数不同承担不同的功能,当操作数为数值类型时,作为&quot;位运算符&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//当操作数为布尔类型时做逻辑运算符 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &gt;&gt; 不同于 &gt;&gt;&gt;  前者移位时不包括符号位,后者移位连同符号位一并移位(负数操作完可能会影响其符号)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ^ 异或 整型数据时,操作为双行列举 规则&quot;相同为0,不同为1&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="1-3-5-赋值运算符"><a href="#1-3-5-赋值运算符" class="headerlink" title="1.3.5 赋值运算符"></a>1.3.5 赋值运算符</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exchange</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> a=<span class="number">5</span>,b=<span class="number">7</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;a=&quot;</span>+a+<span class="string">&quot;\tb=&quot;</span>+b);</span><br><span class="line">        a+=b; </span><br><span class="line">        b-=a; </span><br><span class="line">        a-=b; </span><br><span class="line">        System.out.println(<span class="string">&quot;a=&quot;</span>+a+<span class="string">&quot;\tb=&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Java中允许连续赋值 z=x=y=2;  在Java中是允许的</span></span><br></pre></td></tr></table></figure>
<h3 id="1-3-6-表达式类型提升"><a href="#1-3-6-表达式类型提升" class="headerlink" title="1.3.6 表达式类型提升"></a>1.3.6 表达式类型提升</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//实现一个三位数各位数字相加</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sum</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">123</span>,a,b,c,Sum;</span><br><span class="line">        a=n%<span class="number">10</span>;  <span class="comment">//依次 个 十 百位数字分离</span></span><br><span class="line">        b=(n%<span class="number">100</span>)/<span class="number">10</span>;  <span class="comment">//  /的优先级高于%,故加()</span></span><br><span class="line">        c=n/<span class="number">100</span>;</span><br><span class="line">        Sum=a+b+c;</span><br><span class="line">        System.out.println(<span class="string">&quot;AllSum(&quot;</span>+n+<span class="string">&quot;)=&quot;</span>+Sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对于计算顺序无法确定时,使用()进行区分层级</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//求圆的面积</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Circle_area</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">float</span> PI=<span class="number">3.14f</span>; <span class="comment">//常量</span></span><br><span class="line">        <span class="type">float</span> r=<span class="number">2.5f</span>,area;</span><br><span class="line">        area=PI*r*r;</span><br><span class="line">        System.out.println(<span class="string">&quot;Area(&quot;</span>+r+<span class="string">&quot;)=&quot;</span>+area);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="1-4-语句及其控制结构"><a href="#1-4-语句及其控制结构" class="headerlink" title="1.4 语句及其控制结构"></a>1.4 语句及其控制结构</h2><h3 id="1-4-1-Java语句"><a href="#1-4-1-Java语句" class="headerlink" title="1.4.1 Java语句"></a>1.4.1 Java语句</h3><p>Java中，程序实现各种各样功能的的原理是：使用类构建程序框架，使用方法实现类的功能，在方法中通过不同的语句结构控制程序流程实现，语句部分主要用例子来描述其使用方法</p>
<p>语句是指程序中的一个完整的执行单元，用于对数据进行加工处理、实现复杂功能。它是Java标识符的集合，由关键字、常量、变量、表达式共同组成。可分为说明性语句和操作性语句两种类型：</p>
<p>（1）说明性语句用来说明包和类的引入、类的声明、变量的声明；</p>
<p>（2）操作性语句包含表达式语句、复合语句、选择语句等；</p>
<h4 id="表达式语句"><a href="#表达式语句" class="headerlink" title="表达式语句"></a>表达式语句</h4><p>表达式后接一个分号构成表达式语句，例如：赋值语句、自加自减语句以及方法调用语句等</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">double variable=100 ; //赋值</span><br><span class="line">variable ++ ; //自增</span><br><span class="line">System.out.println(<span class="string">&quot;Welcome to Java&quot;</span>);//方法调用</span><br></pre></td></tr></table></figure>
<h4 id="复合语句"><a href="#复合语句" class="headerlink" title="复合语句"></a>复合语句</h4><p>复合语句又称块（block）语句，由大括号 “｛｝” 括起来的部分称为语句块。执行复合语句时，实际上是执行该复合语句中所有语句。从语法上讲，无论大括号内有多少语句，都只被看成一条简单语句，多用于选择语句和循环语句中</p>
<h3 id="1-4-2-选择语句"><a href="#1-4-2-选择语句" class="headerlink" title="1.4.2 选择语句"></a>1.4.2 选择语句</h3><h4 id="if···else语句"><a href="#if···else语句" class="headerlink" title="if···else语句"></a>if···else语句</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlockDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> condition=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(condition)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Success execute!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;error&quot;</span>);    <span class="comment">//此后包含一个换行符</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Waring&quot;</span>);              <span class="comment">//方法调用语句</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//需求:使用switch语句将week转换成对应英文字符串</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Week</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;!Please Enter numbers in 0-6,it will transfer to corresponding Week!&quot;</span>);</span><br><span class="line">        Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> week=input.nextInt();</span><br><span class="line">        <span class="keyword">switch</span> (week) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span> -&gt; System.out.println(<span class="string">&quot;Sunday&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span> -&gt; System.out.println(<span class="string">&quot;Monday&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span> -&gt; System.out.println(<span class="string">&quot;Tuesday&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span> -&gt; System.out.println(<span class="string">&quot;Wednesday&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span> -&gt; System.out.println(<span class="string">&quot;Thursday&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span> -&gt; System.out.println(<span class="string">&quot;Friday&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span> -&gt; System.out.println(<span class="string">&quot;Saturday&quot;</span>);</span><br><span class="line">            <span class="keyword">default</span> -&gt; System.out.println(<span class="string">&quot;Data error!!!&quot;</span>);</span><br><span class="line">        &#125;        <span class="comment">//Java中增强Switch语句</span></span><br><span class="line">        input.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//优化目的:实现提示用户数据输入,输出对应日期效果</span></span><br></pre></td></tr></table></figure>

<h3 id="1-4-3-循环语句"><a href="#1-4-3-循环语句" class="headerlink" title="1.4.3 循环语句"></a>1.4.3 循环语句</h3><h4 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//求出个、十、百、千位数字的四次方的和等于该数本身的所有四位数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> a,b,c,d;</span><br><span class="line">        System.out.println(<span class="string">&quot;The Data That Meets The Conditions:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> n=<span class="number">1000</span>;n&lt;<span class="number">10000</span>;n++)&#123;</span><br><span class="line">            a=n/<span class="number">1000</span>;<span class="comment">//千位数字</span></span><br><span class="line">            b=n/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">            c=n/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">            d=n%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(Math.pow(a,<span class="number">4</span>)+Math.pow(b,<span class="number">4</span>)+Math.pow(c,<span class="number">4</span>)+Math.pow(d,<span class="number">4</span>)==n)&#123; <span class="comment">//条件判断  Java中的次方写法</span></span><br><span class="line">                System.out.println(n);</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定式套用 顺次剥离各位数字（由高位到低位）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//a=n/1000;千位数字  b=n/100%10;  c=n/10%10;  d=n%10;</span></span><br></pre></td></tr></table></figure>
<h4 id="while循环语句"><a href="#while循环语句" class="headerlink" title="while循环语句"></a>while循环语句</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//求解 x=5时； x+x^2/2!+...+x^n/n!的值 要求x^n/n!的值&lt;1.0 X 10^-8</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WhileTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">5</span>;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>,d=<span class="number">1.0</span>;<span class="comment">//因为有除法，故用小数 因为值&lt;1.0 X 10^-8 所以d=1.0初值</span></span><br><span class="line">    <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(d&gt;<span class="number">1.e-8</span>)&#123; <span class="comment">//注意计数法书写格式</span></span><br><span class="line">        d*=x;</span><br><span class="line">        d/=n;</span><br><span class="line">        sum+=d;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;x=&quot;</span>+x+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;Sum=&quot;</span>+sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//也可使用do-while实现</span></span><br></pre></td></tr></table></figure>
<h4 id="beak语句"><a href="#beak语句" class="headerlink" title="beak语句"></a>beak语句</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.* ; <span class="comment">//命令编译器载入java_installation/java/io路径下的所有类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输入一个正整数,显示所有&lt;=该数的所有素数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BreakTest2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        String str;</span><br><span class="line">        BufferedReader buf;</span><br><span class="line">        <span class="type">int</span> k;</span><br><span class="line">        buf = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter an integer, and press Enter to find all prime numbers less &quot;</span> +</span><br><span class="line">                <span class="string">&quot;than or equal to the integer:&quot;</span>);</span><br><span class="line">        str = buf.readLine();</span><br><span class="line">        k = Integer.parseInt(str);</span><br><span class="line">        System.out.println(<span class="string">&quot;2 to&quot;</span> + <span class="string">&quot; &quot;</span>+ k +<span class="string">&quot; &quot;</span>+<span class="string">&quot;all prime numbers between:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= k; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isPrime(i))</span><br><span class="line">                System.out.print(i + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">int</span> n)</span> &#123;    <span class="comment">//方法实现</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">2</span>; k &lt;= n / <span class="number">2</span>; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % k == <span class="number">0</span>)&#123;</span><br><span class="line">                b = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Java中，如果给出一个完整的限定名(包名、类名），Java编译器就能快速定位到源代码/类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Import语句就是用来提供一个合理的路径，使得编译器可以找到某个类</span></span><br></pre></td></tr></table></figure>
<hr>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>我们在学习新知识的时候，不要总是抱有一步登天的想法，什么东西都想着要一下子掌握。这些看似细小的知识点很有可能会成为开发过程中你忽视的那一个。从每一个很小的例子开始，懵懂到知道，知道到理解，理解到上机，上机到掌握，逐步积累经验。相信自己，一定能学会，不要放弃。也正所谓 “ 不积跬步无以至千里，不积小流无以成江海 ”</p>
<p>Gitee&#x2F;GitHub 上我的练习仓库：<span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vQ29kZXItSmFzb24=">Gitee地址<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BEUEVORw==">GitHub地址<i class="fa fa-external-link-alt"></i></span>，供大家学习参考，希望有所收获。码字不易，后面将会更新Java面向对象部分，如果帮到了您可以收藏学习，不要吝啬您的赞哦，您的支持将是我不断前行的动力！！</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法格式</title>
    <url>/2021/08/09/markdown-syntax-format/</url>
    <content><![CDATA[<div class="note danger"><p>本文最初发表于 CSDN,可能同 NEXT 渲染引擎存在差异,为保证阅读体验,您可以在<span class="exturl" data-url="aHR0cHM6Ly9kcC1qc29uLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzExOTUzMTIyMg==">此处访问<i class="fa fa-external-link-alt"></i></span></p>
</div>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><blockquote>
<p>使用最多6个 <code>#</code> 号实现层级标题</p>
</blockquote>
<hr>
<h1 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h1><ol>
<li><p>空格1 空格2</p>
</li>
<li><p>空格1</p>
</li>
<li></li>
<li><p>空格3</p>
</li>
</ol>
<blockquote>
<p>一个<code>空格</code>+<code>enter</code>&#x3D;换空行</p>
</blockquote>
<hr>
<h1 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h1><p><em>斜体</em>   <code> * *</code></p>
<p><em>斜体</em>  <code>_ _</code></p>
<p><strong>粗体</strong> <code>** ** </code></p>
<p><strong>粗体</strong><code> __ __</code></p>
<p><em><strong>粗斜体</strong></em>  <code>***</code>或<code>___</code></p>
<p><code>强调</code> 符号 &#96;</p>
<hr>
<h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><hr>
<hr>
<hr>
<blockquote>
<p>三个以上字符    <code>*</code> 或<code>- - - </code> 或 <code>--------------</code></p>
</blockquote>
<h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p><del>这是删除线</del></p>
<blockquote>
<p>文字两端加波浪线 ~~</p>
</blockquote>
<hr>
<h1 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h1><p><u>这是下划线</u></p>
<blockquote>
<p>符号<code>&lt;u&gt; </code>  和  <code>&lt;/u&gt;</code>     之间添加文本</p>
</blockquote>
<hr>
<h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><p>[^这是脚注]</p>
<p>脚注测试<a href="%E8%BF%99%E6%98%AF%E8%84%9A%E6%B3%A8">^Team</a></p>
<blockquote>
<p>这时候光标放在Team处就有脚注提示，单击 1 跳转到文末<br>格式:<code> [^内容]</code>+<code>[^内容]:释义</code></p>
</blockquote>
<hr>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h2><ul>
<li>第一 <code>*</code> 号<ul>
<li>第二 <code>+</code> 号<ul>
<li>第三<code>-</code>号<blockquote>
<p>符号<code>*</code>、<code>+</code>、<code>-</code>都能实现</p>
</blockquote>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2. 有序列表"></a>2. 有序列表</h2><ol>
<li><p>第一</p>
</li>
<li><p>第二</p>
<blockquote>
<p><code>数字</code>+ <code>.</code></p>
</blockquote>
<h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2></li>
<li><p>第一项</p>
<ul>
<li><p>子项1</p>
<ul>
<li>子项2</li>
</ul>
</li>
</ul>
</li>
</ol>
<blockquote>
<p>放入一个<code>Tab</code>或四个<code>空格</code></p>
</blockquote>
<hr>
<h1 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h1><blockquote>
<p>引用区块</p>
<blockquote>
<p>引用2</p>
<blockquote>
<p>引用3</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>符号&gt; + 空格  嵌套加入多个&gt; 即可</p>
</blockquote>
<h2 id="列表嵌套区块"><a href="#列表嵌套区块" class="headerlink" title="列表嵌套区块"></a>列表嵌套区块</h2><ul>
<li><p>第一项</p>
<blockquote>
<p>嵌套内容     符号<code>*</code>+<code>&gt;</code>实现</p>
</blockquote>
</li>
</ul>
<hr>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p><code>cout&lt;&lt;</code>   两端加 &#96; 号</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;这是包含代码块&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>格式：三个 <strong>&#96;</strong> 号 +语言选择<br>结尾：对应前者</p>
</blockquote>
<hr>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>[链接名称]和(链接地址) <a href="%E6%B5%8B%E8%AF%95%E4%BD%BF%E7%94%A8">这里是网址</a></p>
<p>&lt;直接放置链接地址&gt;   <span class="exturl" data-url="aHR0cHM6Ly/nvZHlnYAv">https://网址<i class="fa fa-external-link-alt"></i></span></p>
<hr>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table>
<thead>
<tr>
<th>这是单元格1</th>
<th>这是单元格2</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>使用符号 <code>| </code>和 <code>-</code>   <code>- </code>用于分隔行<br><code>|...|...|</code> 制表</p>
</blockquote>
<h1 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h1><p>符号 <code>-</code>: 右对齐</p>
<p>符号<code>:-</code> 左对齐</p>
<p>符号<code>:-:</code> 居中对齐</p>
<hr>
<h1 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h1><p>掌握几种常见的HTML标签，实现更多文本格式</p>
<p>例如：标签 <code>&lt;kbd&gt;</code>和标签<code>&lt;/kbd&gt;</code></p>
<p>我们可以按住<kbd>Windows</kbd>+<kbd>Shift</kbd>+<kbd>S</kbd>启动截图功能</p>
<blockquote>
<p>示例代码：我们可以按住<code>&lt;kbd&gt;</code>Windows<code>&lt;/kbd&gt;</code>+<code>&lt;kbd&gt;</code>Shift<code>&lt;/kbd&gt;</code>+<code>&lt;kbd&gt;</code>S<code>&lt;/kbd&gt;</code>启动截图功能</p>
</blockquote>
<hr>
<h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><p>$x+y&#x3D;2$</p>
<p>$\sqrt{c x^2 + d}$</p>
<blockquote>
<p>使用一对 <code>$ $</code> 符号 嵌入LaTeX格式数学公式，Markdown会自动进行渲染</p>
</blockquote>
<h1 id="字体着色"><a href="#字体着色" class="headerlink" title="字体着色"></a>字体着色</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;font face=<span class="string">&quot;微软雅黑&quot;</span>&gt;这是微软雅黑字体&lt;/font&gt;</span><br><span class="line">&lt;font color=red size=6&gt;color=red size=5&lt;/font&gt;</span><br></pre></td></tr></table></figure>

<p><font face="微软雅黑">这是微软雅黑字体</font></p>
<p><font color=red size=6>color&#x3D;red size&#x3D;5</font></p>
<blockquote>
<p>更多格式请参考：<span class="exturl" data-url="aHR0cHM6Ly90b29sLm9zY2hpbmEubmV0L2NvbW1vbnM/dHlwZT0z">RGB颜色对照表<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<h1 id="图片修改"><a href="#图片修改" class="headerlink" title="图片修改"></a>图片修改</h1><h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><p>在图片引入编辑器后生成的代码某位添加 <strong>#pic_center</strong><br><img src="https://img-blog.csdnimg.cn/6270ace20bfe4c62b19a45f107e2bc54.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">![](https://img-blog.csdnimg.cn/6270ace20bfe4c62b19a45f107e2bc54.png)</span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">![](https://img-blog.csdnimg.cn/6270ace20bfe4c62b19a45f107e2bc54.png<span class="comment">#pic_center)</span></span><br></pre></td></tr></table></figure>
<p>看效果：<br><img src="https://img-blog.csdnimg.cn/6270ace20bfe4c62b19a45f107e2bc54.png"></p>
<h2 id="等比缩放"><a href="#等比缩放" class="headerlink" title="等比缩放"></a>等比缩放</h2><p>拷贝生成的源码<br><img src="https://img-blog.csdnimg.cn/7aa6a23a91eb4d098904845f4fbd479a.png"><br>放入下面的 “链接” 处</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;这里放置链接&quot;</span> width=<span class="string">&quot;70%&quot;</span>&gt;</span><br></pre></td></tr></table></figure>
<p>自定义 <strong>width</strong> 后的数值实现等比例缩放<br>为避免文字后插入图片显示间距过大，可以使用官方方法<br><img src="https://img-blog.csdnimg.cn/3400bab094bd4880bf11d08da2fa248c.png"><br>注意是 空格&#x3D; 后面的不是乘号，是 <mark class="label ">小写字母 x</mark></p>
<h2 id="去水印"><a href="#去水印" class="headerlink" title="去水印"></a>去水印</h2><p>删除部分生成的源码，只留下图片URL，像这样</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://img-blog.csdnimg.cn/7aa6a23a91eb4d098904845f4fbd479a.png</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/79ecea42fcf84d7a8ae41c685e42509d.png"><br>即可实现图片去水印的效果</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>七夕❤️朋友圈—炸锅了</title>
    <url>/2021/08/14/qixi-festival-love-code/</url>
    <content><![CDATA[<h1 id="大事件"><a href="#大事件" class="headerlink" title="大事件"></a>大事件</h1><p>今早起来，逛逛朋友圈，看到的全是各种秀。唉，图片咱就不放了，难免戳中某位朋友瘦小的心灵，主要我也怕，你们知道叭</p>
<img src="https://img-blog.csdnimg.cn/d6ccc21554a24a7eb515e9f4f2b98c1e.jpg" width="45%">

<p>这种时候怎么能让我们的朋友圈是白茫茫的一片呢？必须怼回去，这气可不能受，下面的操作学会了，这波气势也不输，还不快快学起来~~</p>
<h1 id="文件建立"><a href="#文件建立" class="headerlink" title="文件建立"></a>文件建立</h1><p>桌面右击，新建文本文档</p>
<img src="https://img-blog.csdnimg.cn/578b5db60c9d4abc80c60b582ce2930e.png" width="60%">

<p>将文件命名格式修改为 <strong>.css</strong> ，保存， <strong>js</strong> 文件建立同理</p>
<img src="https://img-blog.csdnimg.cn/67c18f43a51846438d6e551c711df4a4.png" width="60%">

<h1 id="3D立体相册"><a href="#3D立体相册" class="headerlink" title="3D立体相册"></a>3D立体相册</h1><h2 id="demo-css"><a href="#demo-css" class="headerlink" title="demo.css"></a>demo.css</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">80deg</span>);</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: rotate <span class="number">20s</span> infinite;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> rotate &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0deg</span>) <span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">360deg</span>) <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pic</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_front</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_back</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">100px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_left</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_right</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_top</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.out_bottom</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: bloack;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_pic</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_front</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_back</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">50px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_left</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_right</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_top</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-class">.in_bottom</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_front</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_back</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">200px</span>) <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_left</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_right</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_top</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_bottom</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://img-blog.csdnimg.cn/d01dc2e4ddf74f20a8596017dcbb0e35.gif#pic_center"></p>
<h1 id="爱心表白"><a href="#爱心表白" class="headerlink" title="爱心表白"></a>爱心表白</h1><h2 id="test-css"><a href="#test-css" class="headerlink" title="test.css"></a>test.css</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.icon-love</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.body_left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">98</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.love</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">520px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">440px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">260px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">220px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.love</span> <span class="selector-class">.block</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.love</span> <span class="selector-class">.block</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;../image/love.jpg&quot;</span>) no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: contain;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> border &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">5%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">5%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">10%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">10%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">15%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">15%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">20%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">25%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">30%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">35%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">35%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">40%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">40%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">45%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">45%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">50%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">55%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">55%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">60%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">65%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">65%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">70%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">75%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">80%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">85%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">90%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">95%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.border</span> <span class="selector-class">.border-top</span> &#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">3px</span> solid black;</span><br><span class="line">    <span class="attribute">transform-origin</span>: left center;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: border <span class="number">312</span> linear;</span><br><span class="line">    -o-<span class="attribute">animation</span>: border <span class="number">12s</span> linear;</span><br><span class="line">    <span class="attribute">animation</span>: border <span class="number">12s</span> linear;</span><br><span class="line">    <span class="attribute">animation-fill-mode</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.border</span> <span class="selector-class">.border-bottom</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">3px</span> solid red;</span><br><span class="line">    <span class="attribute">transform-origin</span>: right center;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: border <span class="number">7s</span> linear <span class="number">12s</span>;</span><br><span class="line">    -o-<span class="attribute">animation</span>: border <span class="number">7s</span> linear <span class="number">12s</span>;</span><br><span class="line">    <span class="attribute">animation</span>: border <span class="number">7s</span> linear <span class="number">12s</span>;</span><br><span class="line">    <span class="attribute">animation-fill-mode</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.copyright</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.copyright</span> <span class="selector-tag">div</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: dimgray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Mylove-js"><a href="#Mylove-js" class="headerlink" title="Mylove.js"></a>Mylove.js</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> blk_pitn = &#123;</span><br><span class="line">    <span class="attr">block1</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block2</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block3</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block4</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block5</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block6</span>: [[<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block7</span>: [[-<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block8</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block9</span>: [[<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block10</span>: [[-<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block11</span>: [[<span class="number">2</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block12</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block13</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block14</span>: [[<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block15</span>: [[<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block16</span>: [[-<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block17</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block18</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block19</span>: [[<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block20</span>: [[<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block21</span>: [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>]],</span><br><span class="line">    <span class="attr">block22</span>: [[<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>], [-<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>]],</span><br><span class="line">    <span class="attr">block23</span>: [[<span class="number">0</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">&#125;,</span><br><span class="line">    offset_pitn = &#123;</span><br><span class="line">        <span class="attr">block1</span>: [<span class="number">5</span>, <span class="number">3</span>],</span><br><span class="line">        <span class="attr">block2</span>: [<span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">        <span class="attr">block3</span>: [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">        <span class="attr">block4</span>: [<span class="number">3</span>, <span class="number">2</span>],</span><br><span class="line">        <span class="attr">block5</span>: [<span class="number">3</span>, -<span class="number">1</span>],</span><br><span class="line">        <span class="attr">block6</span>: [<span class="number">2</span>, <span class="number">5</span>],</span><br><span class="line">        <span class="attr">block7</span>: [<span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">        <span class="attr">block8</span>: [<span class="number">1</span>, -<span class="number">1</span>],</span><br><span class="line">        <span class="attr">block9</span>: [<span class="number">1</span>, -<span class="number">3</span>],</span><br><span class="line">        <span class="attr">block10</span>: [<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">        <span class="attr">block11</span>: [<span class="number">0</span>, <span class="number">3</span>],</span><br><span class="line">        <span class="attr">block12</span>: [<span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="attr">block13</span>: [-<span class="number">1</span>, -<span class="number">4</span>],</span><br><span class="line">        <span class="attr">block14</span>: [<span class="number">0</span>, -<span class="number">2</span>],</span><br><span class="line">        <span class="attr">block15</span>: [-<span class="number">2</span>, <span class="number">4</span>],</span><br><span class="line">        <span class="attr">block16</span>: [-<span class="number">2</span>, <span class="number">2</span>],</span><br><span class="line">        <span class="attr">block17</span>: [-<span class="number">2</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="attr">block18</span>: [-<span class="number">3</span>, -<span class="number">2</span>],</span><br><span class="line">        <span class="attr">block19</span>: [-<span class="number">4</span>, <span class="number">0</span>],</span><br><span class="line">        <span class="attr">block20</span>: [-<span class="number">3</span>, <span class="number">5</span>],</span><br><span class="line">        <span class="attr">block21</span>: [-<span class="number">5</span>, <span class="number">3</span>],</span><br><span class="line">        <span class="attr">block22</span>: [-<span class="number">4</span>, <span class="number">1</span>],</span><br><span class="line">        <span class="attr">block23</span>: [-<span class="number">6</span>, <span class="number">1</span>]</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> blocks = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;block&quot;</span>),</span><br><span class="line">    block = blocks[<span class="number">0</span>],</span><br><span class="line">    love = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;love&quot;</span>)[<span class="number">0</span>],</span><br><span class="line">    timer = <span class="literal">null</span>,</span><br><span class="line">    index = <span class="number">0</span>,</span><br><span class="line">    clone_block;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">block.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&quot;50%&quot;</span>;</span><br><span class="line">block.<span class="property">style</span>.<span class="property">left</span> = <span class="string">&quot;50%&quot;</span>;</span><br><span class="line">block.<span class="property">style</span>.<span class="property">margin</span> = <span class="string">&quot;-20px 0 0 -20px&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> block_left = <span class="built_in">parseFloat</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(block, <span class="literal">null</span>).<span class="property">left</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">2</span>)),</span><br><span class="line">    block_top = <span class="built_in">parseFloat</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(block, <span class="literal">null</span>).<span class="property">top</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Next</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (++index &gt;= <span class="number">24</span>) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line"></span><br><span class="line">        <span class="title class_">Rise</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    block.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">&quot;visible&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    block.<span class="property">style</span>.<span class="property">left</span> = block_left + <span class="number">40</span> * offset_pitn[<span class="string">&quot;block&quot;</span> + index][<span class="number">0</span>] + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    block.<span class="property">style</span>.<span class="property">top</span> = block_top - <span class="number">40</span> * offset_pitn[<span class="string">&quot;block&quot;</span> + index][<span class="number">1</span>] + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; block.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        block.<span class="property">children</span>[i].<span class="property">style</span>.<span class="property">left</span> = blk_pitn[<span class="string">&quot;block&quot;</span> + index][i][<span class="number">0</span>] * -<span class="number">40</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">        block.<span class="property">children</span>[i].<span class="property">style</span>.<span class="property">top</span> = blk_pitn[<span class="string">&quot;block&quot;</span> + index][i][<span class="number">1</span>] * -<span class="number">40</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    clone_block = block.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span><br><span class="line">    love.<span class="title function_">appendChild</span>(clone_block);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (love.<span class="property">children</span>.<span class="property">length</span> &gt;= <span class="number">24</span>) &#123;</span><br><span class="line">        blocks[blocks.<span class="property">length</span> - <span class="number">1</span>].<span class="property">children</span>[<span class="number">2</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">        block.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Rise</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;begin&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> timer2 = <span class="literal">null</span>,</span><br><span class="line">        distance = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> target = <span class="number">120</span>,</span><br><span class="line">        speed = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> love_top = <span class="built_in">parseFloat</span>(<span class="variable language_">window</span>.<span class="title function_">getComputedStyle</span>(love, <span class="literal">null</span>).<span class="property">top</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    timer2 = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        distance += speed;</span><br><span class="line">        <span class="keyword">if</span> (distance &gt;= target) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer2);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;over&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        love.<span class="property">style</span>.<span class="property">top</span> = (love_top - distance) + <span class="string">&quot;px&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title class_">Next</span>();</span><br><span class="line">        &#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;, <span class="number">12000</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="效果展示-1"><a href="#效果展示-1" class="headerlink" title="效果展示"></a>效果展示<img src="https://img-blog.csdnimg.cn/622b4df993fd4ee2abe147c0d78e02b4.gif#pic_center"></h2><hr>
<p>xdm，师弟只能带你到这里了，剩下的修行就靠你们自己了，我先行一步，暂且告退……</p>
<img src="https://img-blog.csdnimg.cn/a0d0da040e0942da922b80dd30fb8596.png" width="40%">]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>你还没有抢到冰墩墩?</title>
    <url>/2022/02/08/python-turtle-BingDwenDwen/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/PDPENG/jason-storage/blog-img/BeijingOlympics.png"></p>
<div class="note info"><p>近日，火爆全网的北京2022冬奥会吉祥物冰墩墩一度售罄，既然买不到，那就自己做一个吧！</p>
</div>

<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line">turtle.title(<span class="string">&#x27;BingDwenDwen&#x27;</span>)</span><br><span class="line"></span><br><span class="line">turtle.speed(<span class="number">100</span>)  </span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">177</span>, <span class="number">112</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;lightgray&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">3</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">80</span>)</span><br><span class="line">turtle.circle(-<span class="number">45</span>, <span class="number">200</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">23</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">182</span>, <span class="number">95</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.setheading(<span class="number">95</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(-<span class="number">37</span>, <span class="number">160</span>)</span><br><span class="line">turtle.circle(-<span class="number">20</span>, <span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">200</span>, <span class="number">30</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">73</span>, <span class="number">230</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;lightgray&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">3</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">20</span>)</span><br><span class="line">turtle.circle(-<span class="number">250</span>, <span class="number">35</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(<span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">42</span>, <span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(-<span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">190</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">320</span>, <span class="number">45</span>)</span><br><span class="line"></span><br><span class="line">turtle.circle(<span class="number">120</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">12</span>)</span><br><span class="line">turtle.circle(-<span class="number">18</span>, <span class="number">85</span>)</span><br><span class="line">turtle.circle(-<span class="number">180</span>, <span class="number">23</span>)</span><br><span class="line">turtle.circle(-<span class="number">20</span>, <span class="number">110</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">115</span>)</span><br><span class="line">turtle.circle(<span class="number">100</span>, <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">15</span>, <span class="number">110</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">15</span>, <span class="number">70</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">35</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(-<span class="number">120</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">35</span>, <span class="number">200</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">23</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(<span class="number">86</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line">turtle.setheading(<span class="number">122</span>)</span><br><span class="line">turtle.circle(-<span class="number">53</span>, <span class="number">160</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">130</span>, <span class="number">180</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">28</span>, <span class="number">160</span>)</span><br><span class="line">turtle.setheading(<span class="number">210</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">20</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">90</span>, <span class="number">230</span>)</span><br><span class="line">turtle.setheading(<span class="number">40</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(-<span class="number">30</span>, <span class="number">170</span>)</span><br><span class="line">turtle.setheading(<span class="number">125</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">23</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">180</span>, -<span class="number">55</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.setheading(-<span class="number">120</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(<span class="number">50</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">27</span>, <span class="number">200</span>)</span><br><span class="line">turtle.circle(-<span class="number">300</span>, <span class="number">20</span>)</span><br><span class="line">turtle.setheading(-<span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">300</span>, <span class="number">14</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">108</span>, -<span class="number">168</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(-<span class="number">115</span>)</span><br><span class="line">turtle.circle(<span class="number">110</span>, <span class="number">15</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">10</span>)</span><br><span class="line">turtle.circle(-<span class="number">18</span>, <span class="number">80</span>)</span><br><span class="line">turtle.circle(-<span class="number">180</span>, <span class="number">13</span>)</span><br><span class="line">turtle.circle(-<span class="number">20</span>, <span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">60</span>)</span><br><span class="line">turtle.setheading(<span class="number">42</span>)</span><br><span class="line">turtle.circle(-<span class="number">200</span>, <span class="number">29</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">38</span>, -<span class="number">210</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(-<span class="number">155</span>)</span><br><span class="line">turtle.circle(<span class="number">15</span>, <span class="number">100</span>)</span><br><span class="line">turtle.circle(-<span class="number">10</span>, <span class="number">110</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">15</span>, <span class="number">65</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">15</span>)</span><br><span class="line">turtle.setheading(-<span class="number">14</span>)</span><br><span class="line">turtle.circle(-<span class="number">200</span>, <span class="number">27</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">64</span>, <span class="number">120</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">40</span>)</span><br><span class="line">turtle.circle(-<span class="number">35</span>, <span class="number">152</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line">turtle.circle(-<span class="number">35</span>, <span class="number">130</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">50</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">47</span>, <span class="number">55</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">25</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">45</span>, <span class="number">62</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">45</span>, <span class="number">68</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">47</span>, <span class="number">86</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">51</span>, <span class="number">82</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">32</span>, <span class="number">152</span>)</span><br><span class="line">turtle.circle(-<span class="number">100</span>, <span class="number">55</span>)</span><br><span class="line">turtle.circle(-<span class="number">25</span>, <span class="number">120</span>)</span><br><span class="line">turtle.circle(-<span class="number">120</span>, <span class="number">45</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">60</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">24</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">64</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;darkslategray&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">19</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">70</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">10</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">79</span>, <span class="number">88</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;white&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">0</span>)</span><br><span class="line">turtle.circle(<span class="number">5</span>, <span class="number">360</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">37</span>, <span class="number">80</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">130</span>)</span><br><span class="line">turtle.circle(-<span class="number">22</span>, <span class="number">100</span>)</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">130</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">15</span>, <span class="number">48</span>)</span><br><span class="line">turtle.setheading(-<span class="number">36</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.circle(<span class="number">60</span>, <span class="number">70</span>)</span><br><span class="line">turtle.setheading(-<span class="number">132</span>)</span><br><span class="line">turtle.circle(-<span class="number">45</span>, <span class="number">100</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">135</span>, <span class="number">120</span>)</span><br><span class="line">turtle.pensize(<span class="number">5</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;cyan&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">165</span>, <span class="number">150</span>)</span><br><span class="line">turtle.circle(-<span class="number">130</span>, <span class="number">78</span>)</span><br><span class="line">turtle.circle(-<span class="number">250</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">138</span>, <span class="number">105</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">131</span>, <span class="number">116</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;slateblue&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">160</span>, <span class="number">144</span>)</span><br><span class="line">turtle.circle(-<span class="number">120</span>, <span class="number">78</span>)</span><br><span class="line">turtle.circle(-<span class="number">242</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">135</span>, <span class="number">105</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">127</span>, <span class="number">112</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;orangered&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">155</span>, <span class="number">136</span>)</span><br><span class="line">turtle.circle(-<span class="number">116</span>, <span class="number">86</span>)</span><br><span class="line">turtle.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">134</span>, <span class="number">103</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">123</span>, <span class="number">108</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;gold&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">150</span>, <span class="number">136</span>)</span><br><span class="line">turtle.circle(-<span class="number">104</span>, <span class="number">86</span>)</span><br><span class="line">turtle.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">126</span>, <span class="number">102</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">120</span>, <span class="number">104</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;greenyellow&quot;</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(-<span class="number">145</span>, <span class="number">136</span>)</span><br><span class="line">turtle.circle(-<span class="number">90</span>, <span class="number">83</span>)</span><br><span class="line">turtle.circle(-<span class="number">220</span>, <span class="number">30</span>)</span><br><span class="line">turtle.circle(-<span class="number">120</span>, <span class="number">100</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">220</span>, <span class="number">115</span>)</span><br><span class="line">turtle.pencolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">turtle.pensize(<span class="number">1</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.setheading(<span class="number">36</span>)</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">180</span>)</span><br><span class="line">turtle.circle(-<span class="number">60</span>, <span class="number">24</span>)</span><br><span class="line">turtle.setheading(<span class="number">110</span>)</span><br><span class="line">turtle.circle(-<span class="number">60</span>, <span class="number">24</span>)</span><br><span class="line">turtle.circle(-<span class="number">8</span>, <span class="number">180</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(-<span class="number">5</span>, -<span class="number">170</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">10</span>, -<span class="number">170</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">25</span>, -<span class="number">170</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;brown&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">2</span>, -<span class="number">175</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;lightgoldenrod&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.goto(<span class="number">16</span>, -<span class="number">175</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pencolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">turtle.circle(<span class="number">6</span>)</span><br><span class="line">turtle.penup()</span><br><span class="line"></span><br><span class="line">turtle.pencolor(<span class="string">&quot;black&quot;</span>)</span><br><span class="line">turtle.goto(-<span class="number">16</span>, -<span class="number">160</span>)</span><br><span class="line">turtle.write(<span class="string">&quot;BEIJING 2022&quot;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">10</span>, <span class="string">&#x27;bold italic&#x27;</span>))</span><br><span class="line">turtle.hideturtle()</span><br><span class="line"></span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure>

<p>实现效果如下，可爱的冰墩墩到手啦</p>
<img src="https://cdn.jsdelivr.net/gh/PDPENG/jason-storage/blog-img/bing-dwen-dwen.png" width="70%">]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Java开发环境配置及Vscode搭建</title>
    <url>/2021/07/18/java-developenv-vscode-config/</url>
    <content><![CDATA[<h1 id="JDK简介"><a href="#JDK简介" class="headerlink" title="JDK简介"></a>JDK简介</h1><p>JDK，全称 Java Development Kit，是整个 Java 的核心，包含 Java 运行环境、Java 工具以及 Java 基础类库。在 JDK 中，主要包括 Java 编译器、Java虚拟机、Java文档生成器、Java调试器等，包含以下几种常用组件</p>
<div class="note info"><ol>
<li>javac：编译器，将源程序转换成字节码；</li>
<li>jar：打包工具，将相关类文件打包为一个文件；</li>
<li>javadoc：文档生成器，从源码注释中提取文档；</li>
<li>jdb：debugger，检查错误、调试工具；</li>
<li>java：运行编译后的 java 程序(文件后缀.class)；</li>
<li>appletviewer：小程序浏览器，用于执行 HTML 文件上的 Java 小程序；</li>
<li>Javah：产生可以调用 Java 过程的 C 程序，或建立能被 Java 程序调用的 C 过程头文件；</li>
<li>Javap：Java 反编译器，显示编译类文件中的可访问功能及数据，并显示字节码含义；</li>
<li>Jconsole：Java 进行系统调试和监控的工具；</li>
</ol>
</div>

<h1 id="Java开发环境配置"><a href="#Java开发环境配置" class="headerlink" title="Java开发环境配置"></a>Java开发环境配置</h1><p>环境配置之前，首先使用cmd命令查看机器是否配置过 Java 环境，测试命令为（ java &#x2F; javac &#x2F; java<mark class="label "></mark>-version）</p>
<image src="https://img-blog.csdnimg.cn/20210718130023419.png" width="80%">

<p>若出现以上信息，说明已经配置好，无需重复操作！！！反之，进行下述操作</p>
<p>在电脑中安装JDK，<span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UtamRrMTYtZG93bmxvYWRzLmh0bWw=">下载地址<i class="fa fa-external-link-alt"></i></span>，进入后下滑显示界面</p>
<image src="https://img-blog.csdnimg.cn/20210718125226799.png" width="80%">

<p>选择适合自己的版本进行下载，此处演示 Windows X64 Installer 下载。在Oracle官网下载涉及到账号注册，也可访问 <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXlJcHl4TGZJZDRLaWM2MjJWWXNianc=">这里<i class="fa fa-external-link-alt"></i></span> 快速下载，提取码：peng</p>
<p><img src="https://img-blog.csdnimg.cn/20210718130336493.png"></p>
<p>下载好后，双击程序运行</p>
<p><img src="https://img-blog.csdnimg.cn/20210718130457676.png"></p>
<p>所有操作无需更改，继续下一步即可</p>
<p><img src="https://img-blog.csdnimg.cn/20210718131216324.png"></p>
<p>复制JDK安装的路径。继续进行系统环境变量的配置操作</p>
<p>右键此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量，进入如下界面</p>
<image src="https://img-blog.csdnimg.cn/20210718130923454.png" width="80%">

<p>粘贴上面电脑安装JDK的路径，路径可以更改，此处按照原路径完成后续操作</p>
<p>单击“新建”，输入以下内容，输入自己电脑JDK的安装路径</p>
<mark class="label ">JAVA_HOME</mark>

<mark class="label ">C:\Program Files\Java\jdk-16.0.1</mark>

<p><img src="https://img-blog.csdnimg.cn/20210718131748667.png"></p>
<p>操作同上，继续添加以下信息</p>
<mark class="label ">CLASSPATH</mark>

<mark class="label ">.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar</mark>

<p><img src="https://img-blog.csdnimg.cn/2021071813191677.png"></p>
<p>添加Path变量中的指令</p>
<image src="https://img-blog.csdnimg.cn/20210718132122443.png" width="70%">

<p>创建变量</p>
<image src="https://img-blog.csdnimg.cn/20210718132214311.png" width="70%">

<p>单击右侧”新建”，添加下面两条指令</p>
<mark class="label ">%JAVA_HOME%\bin</mark>

<mark class="label ">%JAVA_HOME%\jre\bin</mark>

<p>一路确定下来，最后同样进如cmd窗口，分别输入 java -version，java，javac 命令，显示如下信息即为配置成功</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java version <span class="comment">//查看java版本信息</span></span><br></pre></td></tr></table></figure>

<image src="https://img-blog.csdnimg.cn/2021071813245118.png" width="55%">

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">java <span class="comment">//执行.class文件</span></span><br></pre></td></tr></table></figure>

<image src="https://img-blog.csdnimg.cn/2021071813254011.png" width="55%">

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">javac <span class="comment">//java编译器</span></span><br></pre></td></tr></table></figure>

<image src="https://img-blog.csdnimg.cn/20210718132610511.png" width="55%">

<hr>
<h1 id="Vscode中配置Java开发环境"><a href="#Vscode中配置Java开发环境" class="headerlink" title="Vscode中配置Java开发环境"></a>Vscode中配置Java开发环境</h1><p>Vscode是一款轻量化的源代码编辑器，其众多的插件支持也大受好评。下面我们就在Vscode中配置Java的开发环境</p>
<p>首先在Vscode扩展中找到这个插件进行安装<img src="https://img-blog.csdnimg.cn/20210718133349871.png"><br>Java Extension Pack是一个扩展包，里面包含了Java开发必要的一些插件，一般基础性的使用安装这个足矣</p>
<p><img src="https://img-blog.csdnimg.cn/20210718134054748.png"></p>
<p>使用键盘快捷键 <a class="btn" href="#">Ctrl</a>+<a class="btn" href="#">Shift</a>+<a class="btn" href="#">P</a> 打开命令面板，输入 Configure Java Runtime </p>
<p>在②处可以看到自己 JDk 安装的版本，如果是先安装的Vscode也可以点击③处在弹出的网站上下载JDK，按照上文配置即可</p>
<p><img src="https://img-blog.csdnimg.cn/20210718134431916.png"></p>
<p>快捷键 <a class="btn" href="#">Ctrl</a> +<a class="btn" href="#">，</a> 输入settings并单击 Edit in settings.json</p>
<p>在 javahome 出粘贴JDK的安装路径</p>
<div class="note danger"><p>涉及到转义字符，把 \ 改为 \ 或 &#x2F; )</p>
</div>

<p>Tips:鼠标选中一个 \ 快捷键 <a class="btn" href="#">Ctrl</a> +<a class="btn" href="#">D</a> 连续敲击可快速选中所有 \ ,直接在键盘上更改即可</p>
<p><img src="https://img-blog.csdnimg.cn/20210718134947144.png"></p>
<p>配置完成，下面写一个Java版的HelloWorld进行测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>单击左侧调试图标，生成 launch.json 文件</p>
<p><img src="https://img-blog.csdnimg.cn/20210718135406597.png"></p>
<p><img src="https://img-blog.csdnimg.cn/20210718135515805.png"></p>
<p>因为已经安装Java开发的插件，直接点击 Run 便可在控制台看到输出结果</p>
<p><img src="https://img-blog.csdnimg.cn/20210718135626448.png"></p>
<p>配置已完成，希望能帮到大家！</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>快速搭建个人博客——保姆级教程</title>
    <url>/2022/01/19/setup-personal-blog/</url>
    <content><![CDATA[<div class="note danger"><p>本站点主题现已更换为 Next，文中除主题外的配置参数均不受影响</p>
</div>

<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>偶然间，看到某乎上高赞的一个问题：怎么证明下计算机专业学生的能力？问题下面呢，也是有众多网友评论哈，我记得最清晰、也最现实的一条是：有什么能力的，为了装个 X 罢了</p>
<p><img src="https://img-blog.csdnimg.cn/ea2783af495240279e29d90c6db3dc5e.png"></p>
<p>看到这个我就不得不站出来说一句了，证明能力的方式也不是只有建网站这一种方式是吧，那毕竟还是“术业有专攻”呢，对吧。也不知道为什么锻炼下自己的实操能力，拓宽下学识就成了键盘侠下的装 X，咱也喷不过，求饶求饶啊</p>
<p>好了，回归正题，我建立个人网站呢，初衷其实非常简单，说不定你也想过，只是没去做而已。我是想：现在的网络中有好多的写作平台，比如我现在在用的C站，它已经非常成熟，社区讨论、问题发布、Blink动态等等，一应俱全。我在学完相关知识后，为什么不能自己写一个呢？也许更多的是我爱折腾罢了，哈哈</p>
<p><img src="https://img-blog.csdnimg.cn/ca8d2f14076a4376aef1c62f70b46c55.png"></p>
<p>最开始接触是在C站文章发布“板块自定义”模块中，输入几行代码，就能有漂亮的界面。当时因为还没有接触到CSS、Web前端这些，是从网上白嫖来的，更是激起了我深入学习的兴趣</p>
<p>什么是博客，博客是大家分享、交流的一个平台，我们可以从中吸取别人的经验，提升自己。对于看博客的人来说是这样，对于写博客的博主呢，更是对自己所学的总结，能理清自己的思路，便于日后复盘，养成良好的习惯。技术博客，能记录我们遇到的问题，更好的Bug处理方案，在我们日后开发的过程中遇到同样的问题，记忆会更加深刻</p>
<p>有了想法就要动手，当我真正动手去实现的时候，才发现并不是一些标题党发的文章，像“十分钟建立属于你的网站、你还不会自己建网站？”。等到自己真正看着他们的视频、文章去操作的时候，有的是真大神，他默认的一些东西你应该是会的，会写的简单一些。还有一些，就是“伟大的搬运工”了，完完全全就是发布了别人的文章，还不放原文链接那种</p>
<p>正是我没有发现一套完整的，能帮助新手开发一个网站的资源，所以决定写下 UP 建站的过程，分享我从初学到最后实现的一些经验。所以，如果你也想要拥有一个属于自己的网站，可以跟着上手操作下，过程中如果遇到问题可以私信或留言。下面，让我们一起开始吧</p>
<p>思考下，我们查资料用的最多的是什么？有些朋友就会说了：那还用问，必须是“在B站上大学“啦，亦或是搜索引擎了。没错，我想这正是我们大多数人学习新东西、不断探索向前时使用最多的工具了。那，我们搜些什么呢？比如，你可以这样：</p>
<p><img src="https://img-blog.csdnimg.cn/832f424d141a46cbbffdf9bb78f4efa5.png"></p>
<p>或许，你还可以这样：</p>
<p><img src="https://img-blog.csdnimg.cn/710508a41cf74abfae9034e86f4da8b3.png"></p>
<p>的确能搜到很多的视频、文章。但是在这部分，我以我是初学者的角度来描述下我的心路历程：因为这东西目前在我的脑子里就是一个初步的想法，我还不知道怎么去实现它。就像是一个人在山里迷路了，我只知道要出去，可我找不到路啊</p>
<p><img src="https://img-blog.csdnimg.cn/fa7494f0e63146d2ac35388ef35df12d.png"></p>
<p>这一 pa，我们就来聊一些建站，我应该准备什么。网上大多数教程啊，都是一个大长篇，鼠标滑好几下都不带滑完的那种。会给刚入门的朋友一种：”哇，好难啊，这么多东西啊“的感觉，所以这里我对各部分的内容进行了分类，你只要按照顺序，一步步往下走就好啦</p>
<h1 id="本地网站"><a href="#本地网站" class="headerlink" title="本地网站"></a>本地网站</h1><p>这里为什么要强调是”本地“呢，一开始啊，我也是看的教程，跟着别人的思路来走，像什么先买个域名，买台服务器啥的，我都踩过坑。这对刚入门的朋友在购买或者选择上会造成困难，我们莫不如换一种思考方式，现在我自己的电脑上建立一个网站，然后在”发送“出去，让别人都能看到。你看，这不就很明确了吗？</p>
<p>在自己的电脑上实现网站，必须的两个东西<strong>浏览器</strong>、<strong>开发工具</strong>，前者大家肯定是都有了，不做赘述（不然你拿什么看到的我这篇文章呢，嘿嘿），我们重点介绍后者</p>
<h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><h3 id="WebStorm"><a href="#WebStorm" class="headerlink" title="WebStorm"></a>WebStorm</h3><p>WebStorm 是JetBrains公司旗下一款JavaScript 开发工具。已经被广大中国JS开发者誉为“Web前端开发神器”、“最强大的HTML5编辑器”、“最智能的JavaScript IDE”等。与IntelliJ IDEA同源，继承了IntelliJ IDEA强大的JS部分的功能</p>
<p>废话少说，来这里下载 <span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS93ZWJzdG9ybS8=">传送门<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://img-blog.csdnimg.cn/a2e3c8a3ffc94521bf59282e28284cea.png"></p>
<p>这儿呢，有个小问题，这玩意是收费的，如果你是一名大学生，可以通过学生认证免费申请到教育账号，如果……（不多说奥，自己去问度娘，能找到方法），直接无脑下一步安装就行，不要慌</p>
<h3 id="Vscode"><a href="#Vscode" class="headerlink" title="Vscode"></a>Vscode</h3><p>Visual Studio Code（简称“VS Code” ）是Microsoft在2015年4月30日Build开发者大会上正式宣布一个运行于 Mac OS X、Windows和 Linux 之上的，针对于编写现代Web和云应用的跨平台源代码编辑器，可在桌面上运行，并且可用于Windows，macOS和Linux。它具有对JavaScript，TypeScript和Node.js的内置支持，并具有丰富的其他语言（例如C++，C＃，Java，Python，PHP，Go）和运行时（例如.NET和Unity）扩展的生态系统</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v">传送门<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://img-blog.csdnimg.cn/45fb2c8b80ef40538892f88fb09c5f31.png"></p>
<p>这两个工具具体来说就是：前者是全家桶（啥都有，不用你管，直接用就行），后者是一个空壳公司，需要各种员工（插件）去实现一些功能。所以如果你懒得去配置了，就直接下第一个，第二个可能在写博客<strong>Markdown</strong>语法上更方便一些，这个我后面会说到。此处如果你是新手，我建议你下<strong>WebStorm</strong>，后文的一些配置上，会更加方便</p>
<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>“框架”这是啥，懵了吧，嘿嘿。遇到事情不要慌，且听杰森娓娓道来。这里咱们看下某度词条的解释：</p>
<blockquote>
<p>框架（framework）是一个框子——指其约束性，也是一个架子——指其支撑性。是一个基本概念上的结构，用于去解决或者处理复杂的问题<br>框架这个广泛的定义使用的十分流行，尤其在软件概念。框架也能用于机械结构</p>
</blockquote>
<p>这东西相当于什么呢，比如咱们建房子，你说你怎么建？咱不能没有图纸、没有工人就开始吧，这不是“天方夜谭”嘛。首先肯定是需要设计师根据用户需求设计好这个图纸，然后工人再依据这张图纸开始建房子对吧。这里省略了很多，行业大咖求放过，举个栗子哈</p>
<p>我们搭建网站也一样如此，你真的以为那么多的网站，都是程序猿没日没夜一行一行从零开始写出来的吗？emmm，其实最开始对于这个问题，我的回答是：嗯，是的，那肯定得呀。直到我去实习的时候，才发现企业里的一些东西也并不是全部从零开始开发的。（开源大法好，哈哈哈）难道你想成为这样？</p>
<p><img src="https://img-blog.csdnimg.cn/ca5458a3fa854d45b7900dcb43468d74.png"></p>
<p>一个产品、项目、网站……只要是有前人做过的东西，我们都可以从中汲取经验啊，学习好的编码，开源的，别人已经实现的我们何必浪费时间再去搞一遍呢？尤其是下文要将的<strong>WordPress</strong>，简直就是“无脑式操作”，你可能都不知道自己做了什么，但一个属于你的网站就那么出来了</p>
<p><strong>博客框架</strong>通俗的说就是别人写好的一套源码，你拿过来会用就行，改一改自己的配置啊，配上想要的主题啊，这种就足够了（大佬请绕路）。所以下面我会给大家分享一些在搭建我的个人网站时，了解到的一些框架，并简单分析，供大家选择</p>
<p>还是老话，此专栏受众对象是刚接触的朋友，所以一些复杂，不需要知道的参数我并不会提及，只涉及到最关键的部分，方便大家快速找到适合自己的那一个</p>
<blockquote>
<p>提前声明，杰森用的框架是 &#x3D;&#x3D;Hexo&#x3D;&#x3D; ，各位可以和我选择不同，但配置不尽相同，同理可得的那种</p>
</blockquote>
<h3 id="Hexo（强烈推荐）"><a href="#Hexo（强烈推荐）" class="headerlink" title="Hexo（强烈推荐）"></a>Hexo（强烈推荐）</h3><p>Hexo 是一个快速、简单且功能强大的博客框架。你用Markdown（或其他标记语言）写帖子，Hexo 会在几秒钟内生成带有漂亮主题的静态文件。<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2luZGV4Lmh0bWw=">&gt;点我直达&lt;<i class="fa fa-external-link-alt"></i></span></p>
<p>Hexo特性：</p>
<ul>
<li>运行效果极佳，成本低</li>
<li>多平台：本地、云、PC、移动端通吃</li>
<li>支持多种<strong>CDN</strong>服务（开启可以提高网页的打卡速度）</li>
<li>各大搜索引擎对网站的收录及<strong>权重</strong>有较大优势（用户搜到你发布的内容可能性更大）</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/cc55ace4c77f4bd8a0038735dc0f69c7.png"></p>
<p>如果你喜欢配置，对代码操作后完成一定的配置，这款符合你胃口。放上配置截图供参考：</p>
<p><img src="https://img-blog.csdnimg.cn/e4fdf3733f1140b291cefc1ea382c8c1.png"></p>
<h3 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h3><p>WordPress是基于PHP和MySQL的免费开源内容管理系统（CMS）。 是全球使用最广泛的CMS软件，从最开始一款简单的博客系统，发展成为现在具有数千款插件，小工具和主题功能完整的CMS系统。<span class="exturl" data-url="aHR0cHM6Ly9jbi53b3JkcHJlc3Mub3JnLw==">&gt; 点我直达 &lt;<i class="fa fa-external-link-alt"></i></span><br>WordPress特性：</p>
<ul>
<li>商用范围广</li>
<li>方便后续备份和转移，有自带的工具支持</li>
<li>扩展性强大（此处可联想Google的插件商城）</li>
<li>对自定义用户非常友好（绝对可以打造出你想要的）</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/bf10fc73dc664e74bd343e85bae709dc.png"></p>
<p>如果你并不像看那些代码，可以用这款，<strong>WordPress</strong>自带后端管理，选择自己想要的主题，然后拖拽所需控件（比如你想实现显示时间这个功能，会有一个像手机端桌面小组件一样的东西，拖拽到想显示的位置即可实现）。<strong>另外最重要的是，使用它你需要先搞一台服务器</strong></p>
<p>为了大家能更快速的找到合适的，我不会给大家很多的可选项，更不会告诉大家还有什么（不然你会觉得，我现在的可能不是最好的，我要尝试更多的。倘若这样的话，不知不觉间你就会浪费很多时间，莫不如跟着一个先搭建下来，等日后熟悉了，再更换其他的。）等到自己独立上手时，也能有个清晰的思路，不至于在某一点上花太多时间</p>
<p><img src="https://img-blog.csdnimg.cn/a24e06bf834d4a5c901ceefc5ef9d090.png"></p>
<h2 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h2><p>这一块呢，不用过多的介绍，可以理解为我们建房子需要水泥、铲子等工具和原料一样，本地的环境就是我们用到的铲子，是工具。而<strong>Hexo</strong>的博客框架就是水泥这样的原材料，我们需要用工具才开始干活，不然你***用手干啊……</p>
<h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>简单描述下它用来做什么，Look Here：</p>
<blockquote>
<p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持</p>
</blockquote>
<p>不必理会上面你从未听过的词汇，这么来。某度网盘用过吧，是不是有个自动备份，你选中本地的某个文件夹，当本地文件发生改变时，只要软件在后台运行，是不是云上也会和本地自动保持一致。过程就是这么个情况，但是<strong>git</strong>的操作目前你就可以相像成一个云，用一些命令你就可以把本地的代码“发送&#x2F;备份”到云上</p>
<p>我并未深入展开讲<strong>git</strong>的分布式特性，命令等内容，这里推荐入门的朋友可以<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9naXQvZ2l0LWJhc2ljLW9wZXJhdGlvbnMuaHRtbA==">&gt; 看这里 &lt;<i class="fa fa-external-link-alt"></i></span>的教程，方便快速入门</p>
<p>既然要使用Git，那么我们首先就要安装并配置Git的环境，<span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">点击这里<i class="fa fa-external-link-alt"></i></span>下载（Windows操作系统），点击Download按钮即可</p>
<img src="https://oscimg.oschina.net/oscnet/2348e786eb7a4c2da133338a12aa6670.png" width="80%">

<p>安装过程不再赘述，直接使用默认配置，一“Next(站)” 到底</p>
<p>下面我们配置环境变量信息，<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzUxMjY5OTYxL2FydGljbGUvZGV0YWlscy8xMTg4NzU5Njc=">详情参考此处<i class="fa fa-external-link-alt"></i></span>，打开 Path 变量后，添加本地环境安装目录（确保文件位置到达 cmd ）</p>
<p><img src="https://img-blog.csdnimg.cn/3c49d776d6dd4ee4bc20bb3bde0cb9ba.png"></p>
<p>安装完成后，你可能没有看到桌面的快捷方式，不要着急。我们在Windows搜索框中搜索Git就可以看到这样几个图标</p>
<p><img src="https://img-blog.csdnimg.cn/ba1113bb892c45d6bbf5906242cf2de4.png"></p>
<p>可以直接点击 Git Bash 或者在桌面任意位置右键，打开 Git Bash Here 就可以使用啦</p>
<p><img src="https://img-blog.csdnimg.cn/1d89848f17c144a6a3823098892c6c44.png"></p>
<h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><p><span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">&gt; 下载直达 &lt;<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://img-blog.csdnimg.cn/f0bf90b791614bc1b09cc6f94105b00c.png"></p>
<p>很多朋友纠结这两个版本，看下这个解释相信就知道需要哪个了，杰森用的是<strong>LTS版本</strong></p>
<blockquote>
<p><strong>LTS</strong>代表“Long Term Support（长期支持）”，Current代表“当前的”<br><strong>Current</strong>就代表最新发布的版本（每6个月一次的），它可能是奇数版本也可能是偶数版本</p>
</blockquote>
<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>桌面右击，打开<strong>git bash here</strong>输入命令安装（默认位置即可，方面后续配置，不建议修改）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>这里我已经装过了，可能显示的和你的不一样，执行完后关闭窗口就行，此时本地已经有了<strong>hexo</strong>的环境。怎么样，是不是很简单呢？</p>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在你本地任意位置（但要记住路径）方便起见<strong>建议直接在除C盘的任意盘符下的跟目录新建</strong>，命名任意，比如我这里是在D盘新建的 hexo-jason-blog 文件夹，可以参考下</p>
<p>本来我想用自己已经搭好的本地环境给大家演示，但是为了能真实体现“新手”的操作环境，杰森决定重新建立，一步步重新操作，只为大家能走好每一步，直到成功</p>
<p>在该文件夹下打开 git bash here 输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/6922e3628acf441496d0d8a303cbc299.png"></p>
<p>此时你可能会遇到这个错误，不要慌张，是从<strong>GitHub</strong>克隆时网络原因，多试几次就好</p>
<p><img src="https://img-blog.csdnimg.cn/92bbacd9593b437990a8ef5d670349c2.png"></p>
<p>关于此类问题的解决方案请<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmFpcnlseWwvcC8xNTA1OTQzNy5odG1s">&gt; 参考这里 &lt;<i class="fa fa-external-link-alt"></i></span></p>
<p>成功效果：</p>
<p><img src="https://img-blog.csdnimg.cn/6f75f87ba4cf42fe85bd604fdfcb9277.png"></p>
<p>根文件目录下多了这些文件</p>
<p><img src="https://img-blog.csdnimg.cn/590bda80915546c1b3a904af3169057a.png"></p>
<p>简单介绍下hexo的文件结构：</p>
<ul>
<li>public  最终所见网页的所有内容 </li>
<li>node_modules  插件以及hexo所需node.js模块 </li>
<li>_config.yml  站点配置文件，设定一些公开信息等</li>
<li>package.json  应用程序信息，配置hexo运行所需js包</li>
<li>scaffolds   模板文件夹，新建文章，会默认包含对应模板内容</li>
<li>themes  存放主题文件，hexo根据主题生成静态网页（速度贼快）</li>
<li>source 用于存放用户资源（除 <em>posts 文件夹，其余命名方式为 “</em> + 文件名”的文件被忽略）</li>
</ul>
<p>我们日常写文的操作都在 source&#x2F;_post下，既然我们已经有了建房子时“和泥”的工具——WebStorm，为什么不用呢？</p>
<p>在WebStorm中打开根目录 hexo-jason-blog （直接将该文件拽到桌面WebStorm的快捷方式打开就行），打开终端并输入命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/1c60954ce9994f08b87502fc05662446.png"></p>
<p>点击链接 <strong><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span></strong>（图中黄色下划线位置）进行本地预览，默认是hexo内置的landscape 主题</p>
<p><img src="https://img-blog.csdnimg.cn/166b60aaca844a45848981e4c34af06a.png"></p>
<p>光标停留在 Terminal 位置，组合键 <a class="btn" href="#">Ctrl</a> + <a class="btn" href="#">C</a> 停止本地预览，这就是本地最简单的一个网站啦</p>
<p>emmm，默认的页面朋友们也预览成功了，大概呢，就是这样，嘿：</p>
<p><img src="https://img-blog.csdnimg.cn/827a7d03aeec46a29e0fd9e315dc0fc2.gif"></p>
<p>但总感觉，还是差了点什么东西。没有一些博客、网站该有的东西，那怎么能让它更像一个网站呢？</p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>这里我们介绍下<strong>主题</strong>和<strong>框架</strong>，我们现在使用的<strong>Hexo</strong>是一款快速、简单的博客框架，主题就是开发者根据此框架开发的功能更加完备、页面样式、栏目更多的一种”配件“。就像你用的手机，换上手机壳，选手机壳时需要匹配自己手机的型号，不然也不配套啊是吧</p>
<p>再举个“栗子”，像Android手机（IOS闭源，除非越狱），厂家生产时默认的桌面主题，在<strong>主题商店</strong>这个app里你能根据自己的喜好选择更好看的图标、背景、字体。就像是“换上新衣”，可以从这个角度理解我们下面要做的操作</p>
<h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><p>提及主题，肯定就会有很多啦。还是那句话，大家根据自己的喜好选择就好，这里是<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=">官方主题库<i class="fa fa-external-link-alt"></i></span>，我比较喜欢<strong>Butterfly</strong>这款主题，下面带大家给自己的网站“换新衣”</p>
<h3 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h3><p>先给大家看下主题的页面</p>
<p>博客主页</p>
<p><img src="https://img-blog.csdnimg.cn/e875c1528ae748be83db91cf2058ad56.gif"></p>
<p>博文页面</p>
<p><img src="https://img-blog.csdnimg.cn/09ab60bd347540ca9bbe317babdaeaac.gif"></p>
<p>从主题的文档中看，作者也是一直在维护的，时间很近。正所谓好的产品必须要有好的文档嘛，作者也是相当用心，大家可以跟着文档一步一步配置，非常简单，只是把一些工具组成链条罢了</p>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><ul>
<li>Terminal 输入命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/344b9b18ace74732b725f60bb3831e2a.png"></p>
<p>等待安装完成，<strong>themes</strong>文件夹下显示了<strong>butterfly</strong>主题的一些文件</p>
<p><img src="https://img-blog.csdnimg.cn/bd527d4926494ec8b27540dabb5cb0c2.png"></p>
<ul>
<li>安装插件</li>
</ul>
<p>安装 pug 以及 stylus 的渲染器，如果没有安装，预览界面是这样的</p>
<p><img src="https://img-blog.csdnimg.cn/f28ea972cbce4c788723f02ba0adaba8.png"></p>
<p>控制台输入命令，回车等待安装即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>

<ul>
<li>修改配置文件</li>
</ul>
<p> 网站根目录下找到**_config.yml<strong>文件，修改主题为</strong>butterfly<strong>（注意</strong>yml**文件格式）</p>
<p><img src="https://img-blog.csdnimg.cn/38d2cd795f084129b9d9ce2022dc0af2.png"></p>
<ul>
<li>本地预览</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean //执行此命令后继续下一条</span><br><span class="line">hexo g //生成博客目录</span><br><span class="line">hexo s //本地预览</span><br></pre></td></tr></table></figure>

<p>效果图</p>
<p><img src="https://img-blog.csdnimg.cn/9d5acea822264f5d92d866944a0ae7d0.gif"></p>
<p>可能看上去还是那么的“简陋”，额，这个问题呢，会涉及到后续的”主题美化“（其实就是加上了一些好看的图片而已，也很简单）。我的博客也没有优化的很细节，非常粗糙，时间有限，后面再说吧，可以看下，留个”念想“，相信你做的会比我更好</p>
<p><img src="https://img-blog.csdnimg.cn/1dbf897a90c54e19b4bbe4f5b45fedf5.gif"></p>
<h1 id="正式上线"><a href="#正式上线" class="headerlink" title="正式上线"></a>正式上线</h1><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>这是个ma玩意啊？？？不要慌，大家不是看咱们默认主题的网站一点儿都不好看么，那是因为没图片啊，你要是给它换上一套配图，优化一下，是不是就好多了呢？那在网络中我们引用图片一种是本地上传，代码里放上路径引用；另一种则是通过网址，显然后者更方便（如果类比到后面要用到的服务器上，随着图片量日渐增多、存储空间慢慢减少，每次发文都需要连同图片一起上传，那得占用多大的空间呐）</p>
<p>然而，如果我们自己有一个地方，能把本地图片转换成链接（人人通过这个链接都能访问到你发布的照片）是不是就很棒了nie。<strong>Picgo</strong>和一些其他插件就能实现</p>
<p>前些时候更新过一片文章，使用<strong>GitHub</strong>和<strong>SM.MS</strong>。如果有不能类比操作的朋友，<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNjIyMzk1">&gt; 看这里 &lt;<i class="fa fa-external-link-alt"></i></span>由于<strong>GitHub</strong>毕竟是国外的，访问速度上会有点儿慢，<strong>SM.MS</strong>倒是一个运行了很久的老牌子了，但它俩在访问速度上都略慢</p>
<p>杰森强烈推荐国内的<strong>码云（Gitee）</strong>，配合<strong>Picgo</strong>使用。稳定、快速，还不容易丢失。（ps：此处就会有些朋友问了，我公开了我的仓库，里面全放的是我的照片，会不会隐私存在隐私泄露什么的）对于这类问题，我只能说</p>
<p><img src="https://img-blog.csdnimg.cn/27e0e65793664211a2893681263089a0.gif"></p>
<p>谁天天闲的没事去看你仓库啊？？再者说，你能上传到仓库里XXX（自行想象）照片么？？所以说，放心用，不要想辣么多真的是</p>
<p>另外，友情提示：<strong>Gitee对免费版账户存储容量最大为5G，仓库满了记得从软件中改下路径，使用后不要乱改自己Gitee账户的名称（不是昵称，英文那个名称），不然就等404吧</strong></p>
<h2 id="Butterfly配置"><a href="#Butterfly配置" class="headerlink" title="Butterfly配置"></a>Butterfly配置</h2><p>直接放上<span class="exturl" data-url="aHR0cHM6Ly9idXR0ZXJmbHkuanMub3JnL3Bvc3RzLzRhYThhYmJlLw==">官方文档<i class="fa fa-external-link-alt"></i></span>，朋友们可以先配置一下，非常简单。你看到的页面可能是繁体中文，不要用浏览器自带的翻译引擎（可能翻译后，部分内容不显示）贴心的作者，早已想到了，我们只要在网站右下角设置中切换一下就好</p>
<p><img src="https://img-blog.csdnimg.cn/ac0eb14b282649578572db051a27f47f.png"></p>
<p>杰森在后面会专门出一期，来讲下主题配置中的一些问题，相信看到这里的小伙伴已经迫不及待想要把自己的网站发不到网上了吧，我们重点讲这个问题</p>
<h2 id="GitHub-Pages配置"><a href="#GitHub-Pages配置" class="headerlink" title="GitHub Pages配置"></a>GitHub Pages配置</h2><p><strong>GitHub Pages</strong>是一种由<strong>GitHub</strong>中的仓库&#x2F;项目直接创建的网页。管理简单，在本地编辑仓库中的内容，上传到GitHub上，GitHub Pages就能快速完成更新，重点是<strong>不花钱，不花钱，不花钱</strong></p>
<p><img src="https://img-blog.csdnimg.cn/513ac1b27a354b1fba32011318edbf9f.png"></p>
<p>新建仓库，填写内容如下，<strong>特别注意红框位置</strong></p>
<p><img src="https://img-blog.csdnimg.cn/c4f6cb765a774149a1231ee3479d3606.png"></p>
<p>保证仓库<strong>public</strong>，名称填写正确<strong>用户名.github.io</strong>，系统自动变更为<strong>Pages</strong></p>
<p>在仓库设置中找到<strong>Pages</strong></p>
<p><img src="https://img-blog.csdnimg.cn/e780856e478c4e72b51ac048b6cddea1.png"></p>
<p>记住仓库地址，我们会将本地的文件上传到仓库</p>
<p><img src="https://img-blog.csdnimg.cn/30700a47e4cb4c1680c7036a3ab3d944.png"></p>
<p>如果你是在电脑上第一次使用<strong>git</strong>，请先配置<strong>SSH公钥</strong>（一种安全协议，你可以理解为登陆某网站需要的验证码）</p>
<p>在<strong>WebStorm</strong>中链接到远程，添加仓库地址，这里<strong>不是发布网站需要的仓库</strong>（非“用户名”+github.io仓库，新建一个，为了管理本地代码）</p>
<p><img src="https://img-blog.csdnimg.cn/9a6b98e6fc2147ceb39a16c932d1fa49.png"></p>
<p>因为这里都是基本的<strong>git</strong>命令，前面也提到过，不清楚的小伙伴可以看这个专栏里的资料，都是一些基础操作，非常容易上手</p>
<p>修改网站部署设置</p>
<p><img src="https://img-blog.csdnimg.cn/9ac139c8fb2841cdaf4b206c1b15dc6a.png"></p>
<p>在网站本地<strong>根目录</strong>下打开 git bash here 依次执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean //执行此命令后继续下一条</span><br><span class="line">hexo g //生成博客目录</span><br><span class="line">hexo s //本地预览</span><br><span class="line">hexo d //部署项目</span><br></pre></td></tr></table></figure>

<p>执行完毕后，所有人就能通过<strong>你的用户名+github.io</strong>这个域名访问你的网站了。到这儿，我们就成功上线了自己的网站</p>
<p>如果感觉<strong>GitHub</strong>访问速度慢（嗯，其实就是慢，还会有打不开的情况）可以部署到<strong>Gitee</strong>，都是一样的操作，还是中文，不要太简单ei</p>
<p>额，发布确实是发布了，那你觉得像<strong>用户名+github.io</strong>这样的名称方便记忆吗？？我想，如果是一个新手（可能都不知道<strong>GitHub</strong>是什么的用户，肯定是很困难了）</p>
<p>那，怎么样方便记忆，而且足够个性化呢？</p>
<p><img src="https://img-blog.csdnimg.cn/2457d271a3b7408d95bb092f6a585cae.png"></p>
<p>当然，这部分肯定是不免费的了，哪儿有什么都白嫖的道理呢？对吧，推荐在<strong>阿里云</strong>或<strong>腾讯云</strong>完成下面的操作哦，如果你使用其他的平台，不是不行，但是建议购买域名和服务器都在相同的平台，方便管理</p>
<p>国内的大厂，都有保障，无脑冲就可以啦。从经济性角度来看，哪个有活动，更实惠就选哪个，杰森是看到了<strong>阿里云</strong>当时的活动比<strong>腾讯云</strong>更实惠，so~~</p>
<h2 id="服务器选购攻略"><a href="#服务器选购攻略" class="headerlink" title="服务器选购攻略"></a>服务器选购攻略</h2><p>收到有些朋友反应：那么多入口，都找不到从哪里买&#x2F;找不到活动入口。这里讲下怎么查看最新的活动，平台会有哪些优惠，入口在哪里</p>
<h3 id="阿里云"><a href="#阿里云" class="headerlink" title="阿里云"></a>阿里云</h3><h4 id="学生专享"><a href="#学生专享" class="headerlink" title="学生专享"></a>学生专享</h4><p>账号中心完成学生认证购买更优惠</p>
<h4 id="活动专享"><a href="#活动专享" class="headerlink" title="活动专享"></a>活动专享</h4><p>最新活动 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9hY3Rpdml0eT9zcG09NTE3Ni4xOTcyMDI1OC5KXzgwNTg4MDMyNjAuMi4zNmY4MmM0YUxKREc4RQ==">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://img-blog.csdnimg.cn/de9c6fba2bed4ff78d3bee37ea4e680f.png"></p>
<h3 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h3><p>不得不说，两家界面基本一致，熟悉一个就行，所以位置差不多都一样</p>
<h4 id="学生专享-1"><a href="#学生专享-1" class="headerlink" title="学生专享"></a>学生专享</h4><p>学生党查看这里 <span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9hY3QvY2FtcHVzP3V0bV9zb3VyY2U9cWNsb3VkJnV0bV9tZWRpdW09bmF2aWdhdGlvbiZ1dG1fY2FtcGFpZ249Y2FtcHVz">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://img-blog.csdnimg.cn/c0b733075577441185e137f9aebbf171.png"></p>
<h4 id="活动专享-1"><a href="#活动专享-1" class="headerlink" title="活动专享"></a>活动专享</h4><p>最新活动 <span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9hY3Q=">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span><br><img src="https://img-blog.csdnimg.cn/2a0d06a2636b48b99bb23e78edfad445.png"></p>
<h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><blockquote>
<p>域名（英语：Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）<br>由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串</p>
</blockquote>
<p>如果你没有看懂，没关系，那听杰森细细道来。简单来说，在公网上访问的资源都有其固定地址<strong>IP</strong>，但是如果你要访问特定的<strong>IP</strong>，就需要记住它。但是呢，它不方便记忆，人们就想出了<strong>域名</strong>这东西</p>
<p>给<strong>IP</strong>起了一个个性化的名称，比如攻城狮杰森是全称，朋友们喊我森森、阿森、小森，都是别名，但都指向“攻城狮杰森”这个人。那在网络中如何实现起别名呢？这里介绍下<strong>DNS</strong>，它是互联网中的一项服务，实<strong>域名</strong>和<strong>IP</strong>的相互映射，也就是说，你输入域名访问的就是域名所对应的<strong>IP地址</strong></p>
<h3 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h3><p>既然理解了什么是<strong>域名</strong>，那我们先来买个域名吧！<br><span class="exturl" data-url="aHR0cHM6Ly93YW53YW5nLmFsaXl1bi5jb20vP3NwbT01MTc2LjIxMjEzMzAzLjExNTgwODEuMy43ZmY2M2VkYWhTRjRrVSZzY209MjAxNDA3MjIuU19jYXJkQEAlRTUlOEQlQTElRTclODklODdAQDU4MS5fLklEX2NhcmRAQCVFNSU4RCVBMSVFNyU4OSU4N0BANTgxLVJMXyVFNSU5RiU5RiVFNSU5MCU4RCVFOCVCNCVBRCVFNCVCOSVCMC1PUl9zZXItVl8yLVAwXzA=">&gt; 点击此处 &lt; <i class="fa fa-external-link-alt"></i></span>查询你想要的域名</p>
<p>举个栗子，输入后查询，选好后加入清单，付款购买即可。不同的后缀价格不同，凭个人喜好</p>
<blockquote>
<p>域名后缀，亦被称为顶级域名，是指代表一个域名类型的符号。 不同后缀的域名有不同的含义。域名共分为两类：国别域名（ccTLD），例如中国的.cn、美国的.us、俄罗斯的.ru、以及国际通用域名（gTLD），例如.com、.xyz、.top、.wang、pub、.xin、.net等1000多种，所有域名后缀作用无差异，仅外观和本身含义不同，但只有少数例如举例中的域名后缀可以在国内支持网站的备案</p>
</blockquote>
<p>更多域名后缀信息，<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOUYlOUYlRTUlOTAlOEQlRTUlOTAlOEUlRTclQkMlODAvNjY3NjQxIzp+OnRleHQ9JUU0JUI4JThEJUU1JTkwJThDJTIwJUU1JTkwJThFJUU3JUJDJTgwJTIwJUU3JTlBJTg0JUU1JTlGJTlGJUU1JTkwJThEJUU2JTlDJTg5JUU0JUI4JThEJUU1JTkwJThDJUU3JTlBJTg0JUU1JTkwJUFCJUU0JUI5JTg5JUUzJTgwJTgyJTIwJUU1JTlGJTlGJUU1JTkwJThEJUU1JTg1JUIxJUU1JTg4JTg2JUU0JUI4JUJBJUU0JUI4JUE0JUU3JUIxJUJCJUVGJUJDJTlBJTIwJUU1JTlCJUJEJUU1JTg4JUFCJUU1JTlGJTlGJUU1JTkwJThEJTIwJUVGJUJDJTg4Y2NUTEQlRUYlQkMlODklRUYlQkMlOEMlRTQlQkUlOEIlRTUlQTYlODIlRTQlQjglQUQlRTUlOUIlQkQlRTclOUElODQlMjAuY24lMjAlRTMlODAlODElRTclQkUlOEUlRTUlOUIlQkQlRTclOUElODQsLndhbmclMjAlRTMlODAlODFwdWIlRTMlODAlODElMjAueGluJTIwJUUzJTgwJTgxJTIwLm5ldCUyMCVFNyVBRCU4OTEwMDAlRTUlQTQlOUElRTclQTclOEQlRUYlQkMlOEMlRTYlODklODAlRTYlOUMlODklRTUlOUYlOUYlRTUlOTAlOEQlRTUlOTAlOEUlRTclQkMlODAlRTQlQkQlOUMlRTclOTQlQTglRTYlOTclQTAlRTUlQjclQUUlRTUlQkMlODIlRUYlQkMlOEMlRTQlQkIlODUlRTUlQTQlOTYlRTglQTclODIlRTUlOTIlOEMlRTYlOUMlQUMlRTglQkElQUIlRTUlOTAlQUIlRTQlQjklODklRTQlQjglOEQlRTUlOTAlOEMlRUYlQkMlOEMlRTQlQkQlODYlRTUlOEYlQUElRTYlOUMlODklRTUlQjAlOTElRTYlOTUlQjAlRTQlQkUlOEIlRTUlQTYlODIlRTQlQjglQkUlRTQlQkUlOEIlRTQlQjglQUQlRTclOUElODQlRTUlOUYlOUYlRTUlOTAlOEQlRTUlOTAlOEUlRTclQkMlODAlRTUlOEYlQUYlRTQlQkIlQTUlRTUlOUMlQTglRTUlOUIlQkQlRTUlODYlODUlRTYlOTQlQUYlRTYlOEMlODElRTclQkQlOTElRTclQUIlOTklRTclOUElODQlRTUlQTQlODclRTYlQTElODglMjAlNUIxJTVEJTIwJUUzJTgwJTgy">查看这里<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://img-blog.csdnimg.cn/35738d502013404cb72b871d0217770b.png"></p>
<h3 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h3><h4 id="添加域名"><a href="#添加域名" class="headerlink" title="添加域名"></a>添加域名</h4><p>因为我们现在已经有了<strong>用户名.github.io</strong>这样一个网站，为了简单易记，我们将“用户名.github.io“解析”到所购买的域名，这样，网站就有了<strong>所有域名</strong>和<strong>username.github.io</strong>两个网址了</p>
<p>打开仓库，找到设置，进入pages设置，添加域名</p>
<p><img src="https://img-blog.csdnimg.cn/f6c18b9194714a92bd45f9470a611bb9.png"></p>
<p>你还可以使用免费的<strong>强制HTTPS</strong></p>
<blockquote>
<p>HTTPS （全称：Hyper Text Transfer Protocol over SecureSocket Layer），是以安全为目标的 HTTP 通道，在HTTP的基础上通过传输加密和身份认证保证了传输过程的安全性<br>HTTPS 在HTTP 的基础下加入SSL，HTTPS 的安全基础是 SSL【SSL(Secure Sockets Layer 安全套接字协议),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与SSL在传输层与应用层之间对网络连接进行加密】<br>因此加密的详细内容就需要 SSL。 HTTPS 存在不同于 HTTP 的默认端口及一个加密&#x2F;身份验证层（在 HTTP与 TCP 之间）。这个系统提供了身份验证与加密通讯方法。它被广泛用于万维网上安全敏感的通讯，例如交易支付等方面</p>
</blockquote>
<p>打开这个选项</p>
<p><img src="https://img-blog.csdnimg.cn/615067c0e3b24bb3aa0ce864556f6eb4.png"></p>
<h4 id="添加解析记录"><a href="#添加解析记录" class="headerlink" title="添加解析记录"></a>添加解析记录</h4><p>在<span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS8/c3BtPWEyYzFkLjgyNTE4OTIudG9wLW5hdi5kbG9nby41NjdhNWI3NnhNaXI2Uw==">阿里云官网<i class="fa fa-external-link-alt"></i></span>进入域名控制台</p>
<p><img src="https://img-blog.csdnimg.cn/0aa958e53b3e411ebc6f25b3ac4b3b74.png"></p>
<p>若没有，在此处搜索</p>
<p><img src="https://img-blog.csdnimg.cn/109db46dbaf34bb0bf981356039cd1fc.png"></p>
<p>找到需要与username.github.io绑定的域名，点击“解析”</p>
<p><img src="https://img-blog.csdnimg.cn/5135e84c1069461a806c5c28126f4e2a.png"></p>
<p>进入后，点击“添加记录”，需添加两次记录</p>
<p>第一次</p>
<p><img src="https://img-blog.csdnimg.cn/d202b956b5d1495f8205441325700c8c.png"></p>
<p>第二次</p>
<p><img src="https://img-blog.csdnimg.cn/4126b4b3299e4eb79e0214f77adaf573.png"></p>
<p>DNS解析需要时间，稍等片刻后，若在浏览框中输入你的域名，正常访问则解析成功</p>
<p>这里为什么要说是正式上线呢，毕竟网站到了服务器看得才，才正规一点儿是吧，像<strong>GitHub Pages</strong>，倒是免费，但是在国内，DNS解析后需要时间，总会有无法访问或者断连的情况，太不方便</p>
<h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>先来看看，<strong>服务器</strong>是何方神圣？</p>
<blockquote>
<p>服务器是计算机的一种，它比普通计算机运行更快、负载更高、价格更贵。服务器在网络中为其它客户机（如PC机、智能手机、ATM等终端甚至是火车系统等大型设备）提供计算或者应用服务。服务器具有高速的CPU运算能力、长时间的可靠运行、强大的I&#x2F;O外部数据吞吐能力以及更好的扩展性<br>根据服务器所提供的服务，一般来说服务器都具备承担响应服务请求、承担服务、保障服务的能力。服务器作为电子设备，其内部的结构十分的复杂，但与普通的计算机内部结构相差不大，如：cpu、硬盘、内存，系统、系统总线等</p>
</blockquote>
<p>简单理解：一台不断电，有空间的主题在“天上（云端）”一直在为你放置（部署）上去的资源而服务，能处理各种请求（比如你在导航栏输入域名访问网站）</p>
<p>有两种类型的服务器<strong>国内</strong>和<strong>国外</strong>的，根据我国法律规定，中国大陆的网站需要备案，等待的时间可能会长一点。国外的到时不需要备案，但是稳定性和访问速度就不敢保证了，各位小伙伴自己衡量，杰森用的是<strong>阿里云的轻应用服务器</strong>部署的个人博客网站</p>
<h3 id="购买-1"><a href="#购买-1" class="headerlink" title="购买"></a>购买</h3><p>这是我的服务器配置，大家可以参考下</p>
<p><img src="https://img-blog.csdnimg.cn/c556344556d3449aabdc784454d3782e.png"></p>
<p>如果你是初学者，这个入门级的配置已经足够学生机，可免费领取，具体规则详见社区 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9wbGFuL2dyb3ctdXA/c3BtPTUxNzYuMTk3MjAyNTguSl84MDU4ODAzMjYwLjE4LjM2ZjgyYzRhTEpERzhF">&gt; 戳我直达 &lt;<i class="fa fa-external-link-alt"></i></span></p>
<p>开发者-&gt; 成长计划</p>
<p><img src="https://img-blog.csdnimg.cn/f0f7b43eec49453fab77544b10825110.png"></p>
<p>学生专享（体验后即可得到半月免费ECS服务器，社区内发表使用感受（发一篇博客）可免费续费两月），具体规则请查看官网</p>
<p><img src="https://img-blog.csdnimg.cn/bb6086eaa76340cb8662ca19b22c22c0.png"></p>
<p>账号中心-&gt; 基本信息位置完成学生认证即可</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9hY3Rpdml0eT9zcG09NTE3Ni4xOTcyMDI1OC5KXzgwNTg4MDMyNjAuMi41MWZmMmM0YVpldXFOTA==">最新活动 <i class="fa fa-external-link-alt"></i></span>位置购买优惠力度会更大</p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="密码设定"><a href="#密码设定" class="headerlink" title="密码设定"></a>密码设定</h4><p>在图示位置出更改远程连接密码，保存好</p>
<p><img src="https://img-blog.csdnimg.cn/52be94e8cd38411a85dc935ed43408a5.png"></p>
<p>虽然可以用浏览器<strong>远程连接</strong>，但是并不建议，因为有一些键盘上的快捷键会被系统误认为是对浏览器的操作，而不是对话框</p>
<h4 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h4><p>为避免这样的问题出现，我们选择使用第三方工具<strong>Putty</strong>，具体操作步骤，阿里云的<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmFsaXl1bi5jb20vZG9jdW1lbnRfZGV0YWlsLzU5MDgzLmh0bWw/c3BtPTUxNzYuMTAxNzMyODkuaGVscC5kZXh0ZXJuYWwuNTRhMzJlNzdYcG5SYTYjd2luZG93cw==">帮助文档<i class="fa fa-external-link-alt"></i></span>已经非常详细，这里不再重复</p>
<p>从这里开始看，根据提示完成操作</p>
<p><img src="https://img-blog.csdnimg.cn/5c50fd8a5db4409585807e0413ce9ac3.png"></p>
<p>启动<strong>Putty</strong>工具，链接服务器，登陆用户名为<strong>root</strong>，密码就是在服务器位置设置的密码（Linux操作系统中输入密码为了安全不显示，不必担心）出现以下界面时，说明配置正常，继续下一步即可</p>
<p><img src="https://img-blog.csdnimg.cn/5f0160fa45044dddbc0552b570b25497.png"></p>
<h4 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h4><p>1.输入命令，安装<strong>git</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure>

<p>中途如果暂停，则根据提示输入 yes &#x2F; y &#x2F; Y，表示继续安装，知道最后出现complete表示安装成功</p>
<p><img src="https://img-blog.csdnimg.cn/f8e16d644d0a4904a1771a6495e45125.png"></p>
<p>2.创建git账户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure>

<p>3.添加git账户权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/1623aaf5c2164ddeb853a6ab804d3098.png"></p>
<p>4.执行最后一条命令后，点击键盘 <a class="btn" href="#">i</a>键进入编辑模式，找到图示位置代码</p>
<p><img src="https://img-blog.csdnimg.cn/7cc4471c3be14ee79be9404be2e6f7af.png"><br>在下面加入一行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git     ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/e233a87b04434ab29e2022146c1bc1f9.png"></p>
<p>按 <a class="btn" href="#">Esc</a> 键并输入 &#x3D;&#x3D;:wq&#x3D;&#x3D;（含义：保存后退出）</p>
<p><img src="https://img-blog.csdnimg.cn/8f83ceeef59340ca85095d2db4169ca8.png"><br>5.回改权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 400 /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>6.设置git账户密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure>

<p>输入命令回车后连续输入两次密码即可（不显示，正常），出现图示即成功</p>
<p><img src="https://img-blog.csdnimg.cn/f0cfdaee37d044bbb05f47ba6877b260.png"></p>
<p>7.切换至git账户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure>

<p>创建 ~&#x2F;.ssh 和 ~&#x2F;.ssh&#x2F;authorized_keys 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>点击键盘 <a class="btn" href="#">i</a> 键进入编辑模式，粘贴本地电脑生成的<strong>SSH公钥</strong>，文件位置如图</p>
<p><img src="https://img-blog.csdnimg.cn/2102e7ed1cc74076b912126da1a480e0.png"></p>
<p>粘贴后，按 <a class="btn" href="#">Esc</a> 键并输入 &#x3D;&#x3D;:wq&#x3D;&#x3D;（含义：保存后退出）</p>
<p>赋予权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 /home/git/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 700 /home/git/.ssh</span><br></pre></td></tr></table></figure>

<p>8.本地 git bash here 中测试是否免密登陆成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -v git@服务器公网IP</span><br></pre></td></tr></table></figure>

<p>出现图示内容表示连接成功</p>
<p><img src="https://img-blog.csdnimg.cn/28fc21232ec945af92ef992e7b384113.png"></p>
<p>9.服务器中创建仓库并完成配置<br>切换到<strong>root</strong>账户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo su root</span><br></pre></td></tr></table></figure>

<p>创建repo仓库目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /www/repo</span><br></pre></td></tr></table></figure>

<p>赋予权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">	</span><br><span class="line"><span class="built_in">chown</span> -R git:git /www/repo</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /www/repo</span><br></pre></td></tr></table></figure>

<p>建立网站根目录<strong>hexo</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /www/hexo</span><br></pre></td></tr></table></figure>

<p>赋予权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git /www/hexo</span><br><span class="line"><span class="built_in">chmod</span> -R 755 /www/hexo</span><br></pre></td></tr></table></figure>

<p>新建空白的git仓库并初始化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /www/repo</span><br><span class="line">git init --bare hexo.git</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/84cc23976bd54622910092704b6ab5c5.png"></p>
<p>10.创建 Git 钩子，用于自动部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /www/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure>

<p>同上，进入编辑模式，粘贴下面代码并保存退出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">git --work-tree=/www/hexo --git-dir=/www/repo/hexo.git checkout -f</span><br></pre></td></tr></table></figure>

<p>修改权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git /www/repo/hexo.git/hooks/post-receive</span><br><span class="line"><span class="built_in">chmod</span> +x /www/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure>

<p>仓库建立完毕</p>
<h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><blockquote>
<p>Nginx是一款轻量级的Web 服务器&#x2F;反向代理服务器及电子邮件（IMAP&#x2F;POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好<br>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP&#x2F;POP3&#x2F;SMTP服务，其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure>

<p>中途输入 y，表示继续安装（和上面一样）等待安装完成，会显示登陆网址和初始密码</p>
<p><img src="https://img-blog.csdnimg.cn/3a5a73b6f96145de8922cdc263d44fce.png"></p>
<p>注意红框位置，如果两个网址都无法访问，请在服务器安全组 &#x2F; 防火墙中放行8888端口</p>
<p><img src="https://img-blog.csdnimg.cn/a524dc5b1160414d9896be2f3460759a.png"></p>
<p>输入初始账户名、密码登陆</p>
<p><img src="https://img-blog.csdnimg.cn/6d65cd9a9d0f4be8b2ec098d8023d955.png"></p>
<p>进入后，搜索<strong>Nginx</strong>点击安装（我这里已经装过了）</p>
<p><img src="https://img-blog.csdnimg.cn/16253457c6a64c19ae6efeba3fb90f6b.png"></p>
<p>网站–&gt; 添加站点，域名形式<strong>xxx.com 无需任何前缀</strong></p>
<p><img src="https://img-blog.csdnimg.cn/c2983bc486a441289d401356afada3e8.png"></p>
<p>设置–&gt; 配置文件，修改红框内容</p>
<p><img src="https://img-blog.csdnimg.cn/17cf31a29db54e7eb96f653d790bfca7.png"></p>
<p>设置–&gt; 网站目录，修改为 &#x3D;&#x3D;&#x2F;www&#x2F;hexo&#x3D;&#x3D; 并保存</p>
<p><img src="https://img-blog.csdnimg.cn/f31bb768ecc446c2ae819f28fe2c17cb.png"></p>
<p>服务器终端，重启服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service bt restart</span><br></pre></td></tr></table></figure>

<p>至此，服务器端配置完成</p>
<h4 id="Hexo配置修改"><a href="#Hexo配置修改" class="headerlink" title="Hexo配置修改"></a>Hexo配置修改</h4><p>进入本地博客根目录，修改 <strong>_config.yml</strong> 文件部署位置</p>
<p>GitHub Pages 设定</p>
<p><img src="https://img-blog.csdnimg.cn/b1b9f368e30e4d68b12a59daf70840ce.png"></p>
<p>服务器设置</p>
<p><img src="https://img-blog.csdnimg.cn/5a5d15e6528f436ab6e333016cf1bbca.png"></p>
<p>源码如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy: </span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@你的域名:/www/repo/hexo.git</span><br><span class="line">  branch: master <span class="comment"># 注意此处分支设定,需在仓库中选择默认的分支</span></span><br></pre></td></tr></table></figure>

<p>打开<strong>Putty</strong>工具，连接服务器赋予权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git /www/repo/</span><br><span class="line"><span class="built_in">chown</span> -R git:git /www/hexo/</span><br></pre></td></tr></table></figure>

<p>本地根目录下打开 git bash here执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean //清除缓存</span><br><span class="line">hexo d -g //快速部署</span><br></pre></td></tr></table></figure>

<p>出现图示内容表示部署成功，等到备案完成后就可以通过域名访问了</p>
<p><img src="https://img-blog.csdnimg.cn/c2eb2e1df4844367b6087158a38a9429.png"></p>
<h2 id="备案"><a href="#备案" class="headerlink" title="备案"></a>备案</h2><p>杰森的网站也是最近才备案下来，所以如果你等不及，就另寻他路吧，在国内，咱可不敢造次啊啊啊<br>你会经历以下几个阶段</p>
<p><img src="https://img-blog.csdnimg.cn/963c621501214b2f90812cac44557cd2.png"></p>
<p>购买服务器后，绑定域名后系统会提示你没有备案，根据提示完成即可</p>
<p><img src="https://img-blog.csdnimg.cn/4af64685da5349c4b53b6b4402669d2b.png"></p>
<h3 id="ICP"><a href="#ICP" class="headerlink" title="ICP"></a>ICP</h3><blockquote>
<p>英文全称：Internet Content Provider，中文全称：网络内容提供商<br>ICP可以理解为向广大用户提供互联网信息业务和增值业务的电信运营商，是经国家主管部门批准的正式运营企业或部门</p>
</blockquote>
<h3 id="联网备案"><a href="#联网备案" class="headerlink" title="联网备案"></a>联网备案</h3><p><span class="exturl" data-url="aHR0cDovL3d3dy5iZWlhbi5nb3YuY24v">进入官网<i class="fa fa-external-link-alt"></i></span> 在阿里云完成<strong>ICP</strong>备案后，系统也会提示你操作</p>
<p>部署完成后，选择<strong>联网备案登陆</strong></p>
<p><img src="https://img-blog.csdnimg.cn/0590308ca7d644d7b48ceec2b2ea6951.png"></p>
<p>提交网站所有人信息和一些基本材料等待审核通过，最后在网页底部插入代码即可，效果如图</p>
<p><img src="https://img-blog.csdnimg.cn/e977ba93e0b246739ccb3ff83b602e06.png"></p>
<hr>
<p>到这里，你的个人网站就成功上线了，也部署到了服务器。内容会根据大家的反馈情况持续更新！！！</p>
<p>最后，放上杰森的小破站地址，欢迎到访 haha</p>
<div class="link-grid"><div class="link-grid-container">
<object class="link-grid-image" data="/images/head_portrait.png"></object>
<p>Jason's Blog</p><p>A blacksmith must be strong</p>
<a href="https://coder-jason.cn"></a>
</div></div>

<p><img src="https://img-blog.csdnimg.cn/6ee456fd0b11484a9b4d55f7d073bca7.png"></p>
<hr>
<p>参考资料</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL2RvY3Mvc2hhcmUvODNhYmIxMTQtNDk0Ny00YWFhLWIzOGUtMWFjOWFjZDRiZGFlI3RqcUtM">技术小白如何建站<i class="fa fa-external-link-alt"></i></span> </p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNjIyMzk1">Picgo+Gitee搭建个人免费图床<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZmFpcnlseWwvcC8xNTA1OTQzNy5odG1s">Git 错误：OpenSSL SSL_read: Connection was reset, errno 10054<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>静态成员函数访问非静态数据成员</title>
    <url>/2021/05/11/static-member-function-explain/</url>
    <content><![CDATA[<h1 id="静态数据成员"><a href="#静态数据成员" class="headerlink" title="静态数据成员"></a>静态数据成员</h1><p><strong>定义格式：</strong></p>
<blockquote>
<p>static 类型名 静态数据成员名 ;</p>
</blockquote>
<p>详解：由于静态数据成员属于本类的所有对象共享，不属于特定类对象，因此在未产生类对象时作用域就可见，即：在未产生类的实例时，就可以对它进行操作</p>
<p><strong>初始化：</strong></p>
<blockquote>
<p>类型 类名 :: 静态数据成员 &#x3D; 初始化值 ;</p>
</blockquote>
<p>详解：静态数据成员必须在类外初始化，不可在类体内，因为：构造函数中，如果可以，则每次建立对象，都会对静态数据成员的值进行修改，这违背静态数据成员的使用目的；类内也不可以初始化，不要忘记，类只是一种数据类型，数据类型中怎么能赋初值呢？</p>
<h1 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h1><p><strong>定义格式：</strong></p>
<blockquote>
<p>static 返回类型 静态成员函数名 (参数表) ;</p>
</blockquote>
<p><strong>调用方式：</strong></p>
<blockquote>
<p>类名 :: 静态成员函数名 (实参表) ;<br>对象名 . 静态成员函数名 (实参表) ;</p>
</blockquote>
<p><strong>注意：</strong></p>
<div class="note danger"><p>类外定义静态成员函数时，定义格式和普通成员函数定义格式相同，<mark class="label ">不再使用static修饰</mark>；<br>使用对象名和成员运算符(.)调用成员函数时，并非该函数属于某一对象，只是类与对象间的桥梁，为了能处理静态数据成员；</p>
</div>

<p>静态成员函数不能<mark class="label ">默认引用</mark>本类非静态数据成员的原因：</p>
<div class="note info"><p>当调用一个对象的非静态成员函数时，系统会将该对象的起始地址赋予成员函数的this指针。然而，静态成员函数不属于对象，无this指针。所以静态成员函数不能访问类的默认非静态成员（非静态成员函数和非静态数据成员）</p>
</div>

<p>举例说明一种静态成员函数访问非静态数据成员的方式：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">Point</span>(<span class="type">int</span> a) &#123;                      <span class="comment">//构造函数</span></span><br><span class="line">		x = a;</span><br><span class="line">		y += x; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">f1</span><span class="params">(Point m)</span></span>;           <span class="comment">//静态成员函数的原型声明</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="type">static</span> <span class="type">int</span> y;                      <span class="comment">//静态数据成员</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Point::f1</span><span class="params">(Point m)</span> </span>&#123;              <span class="comment">//静态成员函数的类外定义      参数表中创建对象</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;x=&quot;</span> &lt;&lt; m.x &lt;&lt; endl;       <span class="comment">//静态成员函数通过对象访问非静态数据成员</span></span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;y=&quot;</span> &lt;&lt; y &lt;&lt; endl;         <span class="comment">//静态成员函数处理静态数据成员</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Point::y = <span class="number">0</span>;                      <span class="comment">//静态数据成员初始化</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="function">Point <span class="title">P1</span><span class="params">(<span class="number">5</span>)</span>, <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">	Point::<span class="built_in">f1</span>(P1);                     <span class="comment">//静态成员函数调用时一般使用 类名::</span></span><br><span class="line">	Point::<span class="built_in">f1</span>(p2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>程序运行结果:</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">x=<span class="number">5</span></span><br><span class="line">y=<span class="number">15</span></span><br><span class="line">x=<span class="number">10</span></span><br><span class="line">y=<span class="number">15</span></span><br></pre></td></tr></table></figure>
<p>对运行结果的分析，最后一次对静态数据成员y更新后，y&#x3D;15所以两次输出y的值都是15</p>
<mark class="label ">只要对静态数据成员的值更新一次，就可以保证所有对象都会存取更新后的值</mark>

<p>由本例可知：静态成员函数不能引用本类非静态成员并非绝对，只是不可以进行默认的访问，因为编译器不知道应该去寻找哪一个对象。若必须要访问，则有两种方式，且一般使用第二种居多</p>
<blockquote>
<p>对象名 . 非静态成员 ;<br>类名 :: 非静态成员 ;  </p>
</blockquote>
<p>故：<mark class="label ">实例化对象</mark>即可完成对非静态数据成员的访问</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>编程语言</tag>
      </tags>
  </entry>
  <entry>
    <title>私有图床搭建</title>
    <url>/2021/09/05/setup-image-storage/</url>
    <content><![CDATA[<p>文章开始前，先给大家科普下 Typora 和 SM.MS 是什么，当然，对于经常写博客的小伙伴并不陌生</p>
<h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><image src="https://img-blog.csdnimg.cn/fb30d63fee9f4d4c8c0cd55881e60edf.gif" width="80%">

<p><span class="exturl" data-url="aHR0cHM6Ly90eXBvcmEuaW8vIw==">Typora<i class="fa fa-external-link-alt"></i></span> 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>，拥有 OS X、Windows、Linux 三大平台版本，且完全免费</p>
<p>它的功能巨多，进入 “偏好设置” 选项卡中，你就会知道这款编辑器设计的有多么地人性化，多么地细节，简直是众多 Markdown 编辑器里的领头羊，像打字机模式、专注模式、源代码模式、实时预览、文件&#x2F;大纲侧边栏等一系列功能应有尽有</p>
<p>官方特性介绍：Typora为您提供了一个无缝的体验，作为读者和作者。它删除了预览窗口，模式切换器，markdown源代码的语法符号，和所有其他不必要的干扰。相反 ,它提供了一个真实的实时预览功能，以帮助您集中精力于内容本身</p>
<p>对于经常写博客的小伙伴，特别是在多平台分享的朋友，拥有这样一个 “利器” ，搭配上程序猿们忠爱的 GitHub 主题，那感觉简直不要太爽</p>
<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><p>举个栗子，这篇博客里你所看到的图片，它们存放的位置是哪里呢？图片在我电脑的某个磁盘里，你是怎么看到的呢？显然，你看到的是 “网上” 的图片，图床就是储存图片的服务器，我们发朋友圈、空间、微博里的图片都上传到了各个平台自家的图床，供天涯海角的小伙伴查看</p>
<p>图床有国内和国外之分：国外的图床由于网络、距离等因素访问速度较慢，严重影响图片显示速度，国内也分为单线空间、多线空间和 <span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DRE4vNDIwOTUx">CDN加速<i class="fa fa-external-link-alt"></i></span> 三种</p>
<h1 id="Typora配置图床"><a href="#Typora配置图床" class="headerlink" title="Typora配置图床"></a>Typora配置图床</h1><p>打开 Typora 中的 “偏好设置”，下载 PicGo（一个用于快速上传图片并获取图片 URL 链接的工具）</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/ceeb8d6c3df2318db880f34b6bb798c9.png"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz">GitHub地址<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMV9rNlFmZ19helBYUFNobGlDZ0Y3YWc=">网盘地址<i class="fa fa-external-link-alt"></i></span>，提取码：peng</p>
<p>设定图片插入规则</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/a18233ac2882580a6a36c85b549271a6.png"></p>
<p>软件主界面</p>
<p><img src="https://img-blog.csdnimg.cn/6a4c1678e8a142a7bd7eb846a90fcd52.png"></p>
<p>图床这个东西，还是稳定的好，选择一些老牌子，服务运行久的较为可靠，不然没几天停服可是</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/fda8da72cd8dbc977dd4a32535de1784.png"></p>
<h1 id="SM-MS图床"><a href="#SM-MS图床" class="headerlink" title="SM.MS图床"></a>SM.MS图床</h1><p>打开 <span class="exturl" data-url="aHR0cHM6Ly9zbS5tcy8=">SM.MS<i class="fa fa-external-link-alt"></i></span> ，获取Token</p>
<div class="note info"><p>Token，就是汉语 “令牌” 的意思，是服务端生成的一串字符串，作为客户端进行请求的一个令牌，当第一次登录后，服务器生成一个 Token 便将此 Token 返回到客户端，日后客户端只需要附带此 Token 前来请求数据即可，无需再次带上用户名和密码</p>
</div>

<p><img src="https://img-blog.csdnimg.cn/img_convert/7054f4088da597f4c0fb3a49ddb496c9.png"></p>
<p>进入 <span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9hcGkvMTAxNTQ=">API<i class="fa fa-external-link-alt"></i></span> Token</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/1bd6a4fc11be2d356439d31a46b6a5a2.png"></p>
<p>打开图床设置，粘贴 SM.MS 图床的 Token</p>
<p><img src="https://img-blog.csdnimg.cn/c6fc2bc7f73a4a2ebbf9cd5bede70539.png"></p>
<p>好了，现在就可以使用 Typora 这款神仙级 Markdown 编辑器记笔记、写博客了，再也没有发布文章需要一张张重新上传图片的烦恼了</p>
<h1 id="GitHub图床"><a href="#GitHub图床" class="headerlink" title="GitHub图床"></a>GitHub图床</h1><p>有时候我们总会在想这些图床的服务器到底靠不靠谱，能不能长时间维护，万一哪天崩了，作为使用者的我们岂不是凉凉。这里还有一个方法，那就是用代码托管仓库来建立图床，国内的<strong>Gitee</strong>在图片上传速度上可能更具优势，但是<strong>PicGo</strong>工具对于码云的配置更为繁琐，需要安装插件，比较简单的还是直接上手<strong>GitHub</strong>吧</p>
<p>新建仓库</p>
<p><img src="https://img-blog.csdnimg.cn/677b881224ca42b4bba5f4954532d2d9.png"></p>
<p>获取<strong>Token</strong></p>
<p><img src="https://img-blog.csdnimg.cn/ec78dbafed114d488680ff8e31687ecd.png"></p>
<p>创建<strong>Token</strong></p>
<p><img src="https://img-blog.csdnimg.cn/ff8fb263fd1d40d3a364316e53beeda5.png"></p>
<p>创建成功后，注意：<strong>Token只显示一次，可以记录在文档中保存下来，忘记的话重新Get一个就好</strong></p>
<p>设置PicGo</p>
<p><img src="https://img-blog.csdnimg.cn/1fcfabbe56d4473b977c1a01597544c7.png"></p>
<p>测试上传</p>
<p><img src="https://img-blog.csdnimg.cn/119bbe3bbdb949c79c9b9a5adeb806c6.png"></p>
<p><img src="https://img-blog.csdnimg.cn/61aabbbaf47349e9a82c95138d32261d.png"></p>
<hr>
<p>参考资料</p>
<ul>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9waWNnby5naXRodWIuaW8vUGljR28tRG9jL3poL2d1aWRlLyMlRTUlQkElOTQlRTclOTQlQTglRTYlQTYlODIlRTglQkYlQjA=">PicGo | PicGo<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80MDQ5OQ==">图片就交给它了<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjg3NTI0NS9hcnRpY2xlL2RldGFpbHMvMTA4NTU0OTI2">Typora + PicGo 图床配置以及 PicGo 上传失败的解决方案<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ul>
]]></content>
      <categories>
        <category>经验分享</category>
      </categories>
      <tags>
        <tag>云存储</tag>
      </tags>
  </entry>
  <entry>
    <title>实用工具-开发必备</title>
    <url>/2021/08/06/tools-develop/</url>
    <content><![CDATA[<h1 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h1><p>今天给大家分享几个我们开发、学习中必不可少的工具，有了它们效率倍增。你用过几个呢（评论区见）?如果你有更好的开发工具或实用软件，欢迎留言&#x2F;私信！</p>
<h1 id="Everthing"><a href="#Everthing" class="headerlink" title="Everthing"></a>Everthing</h1><p>Everything是一款输入文件名可快速搜索到资源的搜索引擎，对Windows平台的用户支持非常友好。它的界面简洁，后台资源占用低，能够实现文件的快速索引，以及磁盘文件实时更新等功能。上千个的文件，它仅用一秒就能精准定位，显示文件路径，毫不夸张。使用方式也非常简单，在搜索框中填入待查找文件即可</p>
<img src="https://img-blog.csdnimg.cn/96711f5b139d4e3eaad8173f9065905f.png" width="60%">

<h1 id="Geek-Uninstaller"><a href="#Geek-Uninstaller" class="headerlink" title="Geek Uninstaller"></a>Geek Uninstaller</h1><p>你是否也曾遇到过这样的情况：软件卸载不干净？捆绑软件卸了又来？注册表冗杂？那么恭喜你找到了它们的克星—Geek Uninstaller<br>在卸载软件时，它不仅能使用常规操作执行相关软件的卸载程序，而且在卸载程序执行完毕后还能自动扫描系统注册表，检索并选择删除残留无效信息。对于一些流氓软件，它也支持 “强制删除” 操作，一个不留</p>
<image src="https://img-blog.csdnimg.cn/65c48faf07044a4db6976084f411fc3a.png" width="45%">

<h1 id="Dev-C"><a href="#Dev-C" class="headerlink" title="Dev-C++"></a>Dev-C++</h1><p>虽说官方对该软件的支持早已停止，但是软件使用方面对于刚入门的初学者还是非常友好的。可以设置中文模式，不至于被一下子 “劝退” ，它对于新手更加友好体现在编译出错信息可以自动翻译为中文，现在能有这样功能的IDE实属稀少。不得不说，英语还是要好好学啊！<br>现在能找到的最新版本是由国人自主优化的一个版本，版本号为 5.15 ，支持常用的调试、自动保存、代码格式化等功能，集成Mingw64的编译器、GDB调试器、优秀的源码编辑器，界面同官方公布的版本也有较大更新</p>
<image src="https://img-blog.csdnimg.cn/975ff773c3064610a337b6fe03888e94.png" width="95%">

<h1 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h1><p>Vscode是微软官方于2015年4月30日在Build开发者大会上正式宣布推出的一款轻量化代码编辑器，它免费、开源且功能强大<br>支持几乎所有主流的程序语言的语法高亮、智能代码补全、自定义热键、括号匹配、代码片段、代码对比 Diff、GIT 等特性，支持插件扩展，并针对网页开发和云端应用开发做了优化。对于跨平台的支持也是非常兼容，可在 Linux、MacOS X、Windows操作系统上正常运行</p>
<image src="https://img-blog.csdnimg.cn/438207391266404d8cc7db2fa247206f.png" width="95%">

<p>个人最喜欢的还是其对于 C++、Java、Python、C#、PHP、Go 等编程语言扩展工具的强大支持，只有想不到，没有找不到</p>
<image src="https://img-blog.csdnimg.cn/4c5bfc39608a440a96095fbc1fc77149.png" width="95%">

<h1 id="资源直达"><a href="#资源直达" class="headerlink" title="资源直达"></a>资源直达</h1><p><span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXlkZXlIbWdPbHZsTERvN000Uk1kaVE=">点我下载<i class="fa fa-external-link-alt"></i></span>所有资源，提取码：peng </p>
]]></content>
      <categories>
        <category>经验分享</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
      </tags>
  </entry>
  <entry>
    <title>彻底卸载 Visual Studio 2019</title>
    <url>/2021/09/01/uninstall-visualstudio-entirly/</url>
    <content><![CDATA[<h1 id="Visual-Studio"><a href="#Visual-Studio" class="headerlink" title="Visual Studio"></a>Visual Studio</h1><p><img src="https://img-blog.csdnimg.cn/cf0417ff7a21496c99b51a8ad4680c09.png"></p>
<p>不得不说，VS这款宇宙第一IDE的实力属实强劲。但也正是它如此强大的能力，才让我有些 “无法驾驭”，完全卸载便是其中之一。</p>
<p>既然你看到了这篇博客，说明你已经遇到了常规方法不能解决的问题，这里我们直接给出正常卸载无法进行的解决方案。</p>
<h1 id="卸载步骤"><a href="#卸载步骤" class="headerlink" title="卸载步骤"></a>卸载步骤</h1><ol>
<li>尝试运行 InstallCleanup.exe，程序路径：<code>%programfiles(x86)%\Microsoft Visual Studio\Installer\resources\app\layout\InstallCleanup.exe”</code>；</li>
<li>使用微软官方 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9WaXN1YWxTdHVkaW9Vbmluc3RhbGxlci9yZWxlYXNlcw==">清理工具<i class="fa fa-external-link-alt"></i></span> ，<a href="%E9%93%BE%E6%8E%A5%EF%BC%9Ahttps://pan.baidu.com/s/1bw2_zPk4Azhj3ZArjO5bNA">传送门</a> 密码：peng，管理员身份运行程序 Setup.ForcedUninstall.exe，输入 y 开始卸载；</li>
<li>尝试使用清理工具 <span class="exturl" data-url="aHR0cHM6Ly9nZWVrdW5pbnN0YWxsZXIuY29tL2Rvd25sb2Fk">Geek Uninstaller<i class="fa fa-external-link-alt"></i></span> 强制删除；</li>
<li>若VS安装在C盘，找到安装路径，删除路径下所有文件，其他盘符请忽略；</li>
<li>在C盘下搜索 visual studio，删除所有匹配文件（如果机器同时安装有VSC，请注意区分），可用 <span class="exturl" data-url="aHR0cHM6Ly9kcC1qc29uLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzExOTQ2NDI3Mg==">Everthing<i class="fa fa-external-link-alt"></i></span> 工具条件搜索；</li>
<li>C盘下继续搜索 visualstudio（无空格），删除匹配文件；</li>
<li>组合键 <a class="btn" href="#">Win</a> +<a class="btn" href="#">R</a> ，输入 regedit 打开注册表，删除文件夹<br><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio</code>；</li>
</ol>
<hr>
<p>工作还得继续啊！不聊了，马上重装继续找错去了，bai~~<br><image src="https://img-blog.csdnimg.cn/9e55aba6adbb46548cdca2768d1bfca0.jpg" width="50%"></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>解决方案</tag>
      </tags>
  </entry>
  <entry>
    <title>又拍云 CDN</title>
    <url>/2022/02/17/upyun-cdn-config/</url>
    <content><![CDATA[<blockquote>
<p>本篇主要叙述如何为站点配置 cdn 加速服务，供应商是<strong>又拍云</strong></p>
</blockquote>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>当我配置完成后，我发现：为什么站点的打开速度还不如从前呢？不是 cdn 加速吗？这怎么还降速呢？</p>
<p><img src="https://img-blog.csdnimg.cn/78a4af16744749758ed25d10a206fcfb.png"></p>
<p>于是我便开始了复盘，最后的结果是：<strong>CNAME 解析错误</strong>，就是跟没没有解析到供应商。我天呐，原来我开了近一个月的服务，都是未开启的状态啊，瞬间崩溃，下面我们就来看看如何正确<strong>开启 cdn 全站加速</strong>服务</p>
<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p>为了让大家了解的更清楚呢，这里搬运一波词条的解释，然后通俗讲解</p>
<h2 id="DNS-解析"><a href="#DNS-解析" class="headerlink" title="DNS 解析"></a>DNS 解析</h2><blockquote>
<p>域名解析（Domain Name System）是把域名指向网站空间 IP，让人们通过注册的域名可以方便地访问到网站的一种服务。IP 地址是网络上标识站点的数字地址，为了方便记忆，采用域名来代替 IP 地址标识站点地址。域名解析就是域名到 IP 地址的转换过程。域名的解析工作由 DNS 服务器完成。<br>域名解析也叫域名指向、服务器设置、域名配置以及反向 IP 登记等等。说得简单点就是将好记的域名解析成 IP，服务由 DNS 服务器完成，是把域名解析到一个 IP 地址，然后在此 IP 地址的主机上将一个子目录与域名绑定。</p>
</blockquote>
<p>通俗来讲就是用一串你自己可以定义的<strong>域名</strong>，来解析到复杂、不便记忆的<strong>IP 地址</strong>上。互联网中的地址是数字的 IP 地址，域名解析的作用主要就是为了便于记忆。</p>
<h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><blockquote>
<p>CDN（Content Delivery Network），即内容分发网络。CDN 是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。</p>
</blockquote>
<p>简言之，用户访问服务器资源时，不同地区的用户根据距离服务器的远近有着不同的响应速度，你可以理解成双十一秒杀购物，如果你就在服务器旁边，理论上你秒杀到对应商品的概率是远大于其他用户的</p>
<p><img src="https://img-blog.csdnimg.cn/9a88c99241414787b77c01e725d2f58e.png"></p>
<p>cdn 的供应商有很多台分布在不同地区的服务器，当你需要访问的资源加入 cdn 后，cdn 服务器会定期从你的服务器拷贝资源。这样当用户访问你服务器上的资源时，cdn 会自动让用户访问到距离他们最近的一台 cdn 服务器上的资源</p>
<p>根据距离的远近，将用户的请求分配到不同的服务器上，从而实现加速的作用，也就是 <strong>内容分发网络</strong></p>
<h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><blockquote>
<p>HTTPS （Hyper Text Transfer Protocol over SecureSocket Layer），是以安全为目标的 HTTP 通道，在 HTTP 的基础上通过传输加密和身份认证保证了传输过程的安全性。HTTPS 在 HTTP 的基础下加入 SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。 HTTPS 存在不同于 HTTP 的默认端口及一个加密&#x2F;身份验证层（在 HTTP 与 TCP 之间）。这个系统提供了身份验证与加密通讯方法。它被广泛用于万维网上安全敏感的通讯，例如交易支付等方面。</p>
</blockquote>
<p>看图，相信你一定遇到过这样的网站</p>
<p><img src="https://img-blog.csdnimg.cn/831fcf4f66c44969afa501871e1885b4.png"></p>
<p>出现这样的情况，表示这个网站使用了 HTTP 协议传输数据，提醒用户谨慎访问网站。 HTTP 协议是明文传输协议，无法加密传输数据或校验数据完整性，也无法进行身份验证，这时候就有必要了解下 <strong>SSL</strong> 证书</p>
<h2 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h2><blockquote>
<p>SSL(Secure Sockets Layer 安全套接字协议),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS 与 SSL 在传输层与应用层之间对网络连接进行加密。</p>
</blockquote>
<p>个人使用的话，没有更高的要求，我们到供应商处申购免费的证书就好，下文配置会详细讲到</p>
<h1 id="配置-CDN-服务"><a href="#配置-CDN-服务" class="headerlink" title="配置 CDN 服务"></a>配置 CDN 服务</h1><h2 id="绑定-upyun"><a href="#绑定-upyun" class="headerlink" title="绑定 upyun"></a>绑定 upyun</h2><p>这里提醒大家，使用一个新的产品时一定要仔细阅读官方文档，不然怎么会有：没有好文档的产品不是合格产品的说法呢？有关于 upyun 资源的绑定和注册，请直接访问<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLnVweXVuLmNvbS9rbm93bGVkZ2UtYmFzZS9jZG4tcXVpY2stc3RhcnQv">官方文档<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="添加解析记录"><a href="#添加解析记录" class="headerlink" title="添加解析记录"></a>添加解析记录</h2><p>这里我主要想强调的一点就是 dns 记录的添加，大家在<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLnVweXVuLmNvbS9rbm93bGVkZ2UtYmFzZS9jZG4tcXVpY2stc3RhcnQvIzFlODhlYjdlNThmOTYtY25hbWUtZTU5ZjlmZTU5MDhk">这里<i class="fa fa-external-link-alt"></i></span>获取到对应的 <strong>CNAME 域名</strong> 后，到域名的供应商出添加解析记录，这里我以万网接入为例</p>
<p>在 <strong>云解析 DNS 控制台</strong> 找到 <strong>添加记录</strong></p>
<p><img src="https://img-blog.csdnimg.cn/a85a01c2e7cd4b878842f3837990d1c4.png"></p>
<p><strong>主机记录</strong> 位置处要特别注意，有以下两种情况</p>
<ul>
<li>顶级域名：主机记录为 <strong>@</strong></li>
<li>子域名：主机记录为 <strong>二级域</strong>，例如：<code>synopsis.coder-jason.cn</code> 这个二级域名，主机记录处填写 <code>synopsis</code></li>
</ul>
<p>其余项按照下图配置就好</p>
<p><img src="https://img-blog.csdnimg.cn/f50a3d70bcec4c47b03fd352e752f63b.png"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>我们在本地打开命令行工具，输入 <code>ping</code> 指令到自己的域名，查看 dns 配置是否生效，得到图示响应即配置成功，也可以通过<span class="exturl" data-url="aHR0cHM6Ly9oZWxwLnVweXVuLmNvbS9rbm93bGVkZ2UtYmFzZS9jZG4tcXVpY2stc3RhcnQvI2U5ODU4ZGU3YmRhZWU2YjU4YmU4YWY5NQ==">官方方法<i class="fa fa-external-link-alt"></i></span>测试配置</p>
<p><img src="https://img-blog.csdnimg.cn/a0bf25a1f9f241fdbfcd88040cfcd7ee.png"></p>
<h1 id="安全性提升"><a href="#安全性提升" class="headerlink" title="安全性提升"></a>安全性提升</h1><h2 id="SSL-证书部署"><a href="#SSL-证书部署" class="headerlink" title="SSL 证书部署"></a>SSL 证书部署</h2><p>大家在域名的提供商处可以找到 <strong>数字证书管理服务控制台</strong> ，填写信息后提交申请即可</p>
<p><img src="https://img-blog.csdnimg.cn/489ecf1ec61844f9ac36a7920e3edadf.png"></p>
<p>待审核通过后，我们下载部署就好，这里以 <strong>Nginx</strong> 部署为例。服务器安装 <strong>宝塔面板</strong> 后（详细步骤请参考文），点击 <strong>ssl 证书</strong>，在对应窗口粘贴我们下载好的证书就可以了，注意区分文件后缀，不要粘贴错误</p>
<p><img src="https://img-blog.csdnimg.cn/45aa6104f3304ca4a5ca861c08d93f61.png"></p>
<p>因为使用了又拍云的 cdn 服务，所以也需在图示位置添加证书</p>
<p><img src="https://img-blog.csdnimg.cn/87e6e7e029e84d3f8a5e4cdeb8af80a9.png"></p>
<p>至此，网站就实现加密访问啦，您可以通过<span class="exturl" data-url="aHR0cHM6Ly9teXNzbC5jb20vc3NsLmh0bWw=">ssl 状态检测工具<i class="fa fa-external-link-alt"></i></span>查看配置状态</p>
<h2 id="IP-访问限制"><a href="#IP-访问限制" class="headerlink" title="IP 访问限制"></a>IP 访问限制</h2><p>upyun <strong>cdn 管理控制台</strong> 下拉找到 <strong>Ip 访问限制</strong></p>
<p><img src="https://img-blog.csdnimg.cn/f5cb1bb9156047c9ac5d99ea3a1894f5.png"></p>
<p>点击管理添加限制规则</p>
<p><img src="https://img-blog.csdnimg.cn/fccefbdfc3e1433fb13bd224a8f99bb0.png"></p>
<p>点击保存</p>
<p><img src="https://img-blog.csdnimg.cn/1aafa1d7407142e48349cb2a6ec3ccb0.png"></p>
<h2 id="CC-防护"><a href="#CC-防护" class="headerlink" title="CC 防护"></a>CC 防护</h2><p>在 upyun <strong>cdn 管理控制台</strong> 访问控制中找到<strong>CC 防护</strong>，添加防护规则</p>
<p><img src="https://img-blog.csdnimg.cn/bb58f6a635374f8b96a4edcd63d1cb48.png"></p>
<p>点击保存</p>
<p><img src="https://img-blog.csdnimg.cn/74bdc6e161a146a29a8ac129a3cac1d0.png"></p>
<h1 id="又拍云联盟"><a href="#又拍云联盟" class="headerlink" title="又拍云联盟"></a>又拍云联盟</h1><p>如果不介意站点下方添加服务商 logo ，可以加入<span class="exturl" data-url="aHR0cHM6Ly93d3cudXB5dW4uY29tL2xlYWd1ZQ==">又拍云联盟<i class="fa fa-external-link-alt"></i></span>免费获取每月 10GB 存储空间 + 15GB 流量</p>
<p><img src="https://img-blog.csdnimg.cn/3e65f5e958d347fc99c054970c7adddc.png"></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jb2Rlci1qYXNvbi5jbi8=">点击这里<i class="fa fa-external-link-alt"></i></span>预览添加效果</p>
<p><img src="https://img-blog.csdnimg.cn/e4884368d6af4f3cb667594b7018d9ea.png"></p>
<hr>
<p>配置教程</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9kcC1qc29uLmJsb2cuY3Nkbi5uZXQvYXJ0aWNsZS9kZXRhaWxzLzEyMDgxMTY4Mw==">服务器安装宝塔面板<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>《我的Vivado实战—单周期CPU指令分析》</title>
    <url>/2021/08/06/vivado-single-cycle-cpu/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>不知道你是否和我有过同样的感受，《计算机组成原理》这门学科学起来如此的艰难：一节课下来，教室黑板上留下了满满的 “足迹”，看上去也挺简单的，不就是 0 和 1 嘛。但这些看起来简简单单的 0 1 码却成为了我当时学习路上的绊脚石。源码、反码、补码等等等等，各种的码制转换令我一头雾水，我曾一度怀疑这就是计算机干的活儿吗？</p>
<p>随着后面慢慢了解《计算机组成原理》后，我愿称计算机为世界上最麻烦的电子产品。也形象的将计算机描述为一套有电源、有身体、有框架，但就是没有思想的空壳儿。这时候，我们的人类社会才萌生了许许多多“ 利用 ”它们的主人—程序“ 猿 ”</p>
<p>程序员就是要为计算机这个富有 ” 聪明 “潜质的伙伴编写一套一套的 “程序” ，告诉它们应该去做什么亦或是怎么去做。正是由于它们能吃苦、不怕累的精神再加上完美程序的契合，我们的生活质量得以大幅度提升</p>
<p><img src="https://img-blog.csdnimg.cn/d9e29e873bc84ad29fe504d8c01d22c9.jpg"></p>
<p>即使你不是计算机专业的学生，相信对于CPU你也有所了解。正所谓CPU（Central Processing Unit），也就是中央处理器。负责解释计算机指令以及处理计算机软件中的数据。中央处理器主要包含控制器、运算器两部分，其中还包括cache以及实现它们之间信息互换的数据、总线<br>可千万别小看这个不起眼的 “小东西” ，它可是程序执行、机器正常运转必不可少的元器件。作为电子计算机三大核心部件（CPU、内存、I&#x2F;O设备）之一的CPU，在计算机体系结构中承载着控制调配硬件资源、执行通用运算等重要职责。下面我们来了解较为简单的单周期CPU功能指令</p>
<hr>
<h1 id="上机实验"><a href="#上机实验" class="headerlink" title="上机实验"></a>上机实验</h1><p>分析实现单周期CPU的14条指令计算结果，比较理论与实践结果的正确性</p>
<h2 id="Addi"><a href="#Addi" class="headerlink" title="Addi"></a>Addi</h2><p><img src="https://img-blog.csdnimg.cn/ba85a8085bd8402897ac6cf03bda40c0.png">分析第一个周期，指令地址为041008，在程序测试段中，可以看到，本条指令为addi，那么现在开始检验指令addi的实现过程：指令addi的功能是rt←rs + (sign-extend)immediate； immediate符号扩展再参加“加”运算</p>
<p>首先找到rs在本周期中存放的源操作数地址，rs&#x3D;00；然后在Objects中添加immediate组件，找到立即数的值，immediate&#x3D;8；最后进入ALU分析计算结果，在ALU的代码文件中有两个引脚，ALUSrcA和ALUSrcB，它们在第一个周期中的值分别是0和1，则A端口进行ReadData1，B端口进行extend，计算结果为result&#x3D;8，指令执行正确，可以实现数据相加功能</p>
<p><img src="https://img-blog.csdnimg.cn/6f8709919cd443a3a8c0888ad370ce45.png"></p>
<h2 id="Ori"><a href="#Ori" class="headerlink" title="Ori"></a>Ori</h2><p><img src="https://img-blog.csdnimg.cn/c0dd475546ad4e30aeeb8e4fdb391d05.png"></p>
<p>分析第二个周期，指令地址为40020002，在程序测试段中，可以看到，本条指令为ori，那么现在开始检验指令ori的实现过程：指令ori的功能是rt←rs | (zero-extend)immediate； immediate符号扩展再参加“或”运算。寄存器源操作数地址：rs&#x3D;0，immediate&#x3D;2；<br>进行zero-extend后，值为2</p>
<p><img src="https://img-blog.csdnimg.cn/d707e234fec54ee8b057751db692f5ca.png"></p>
<p>进行“或”运算，ALU两个引脚输入端口值为</p>
<p><img src="https://img-blog.csdnimg.cn/1132e1365c894d69bdaa318dbdc2143e.png"></p>
<p>计算结果为</p>
<p><img src="https://img-blog.csdnimg.cn/70d71de7cc7e45f4abeed363dbf2743b.png"></p>
<p>指令计算结果无误，指令运行正常</p>
<h2 id="Add"><a href="#Add" class="headerlink" title="Add"></a>Add</h2><p><img src="https://img-blog.csdnimg.cn/4f42e234992f497aa416aafd950da353.png"></p>
<p>分析第三个周期，指令地址为0411800，在程序测试段中，可以看到，本条指令为add，那么现在开始检验指令add的实现过程：指令add的功能是rd←rs + rt。源操作数地址：rs&#x3D;2，rt&#x3D;1；ALU两个引脚值都是0，读寄存器中的值，此时存入结果为03，程序运行正常，功能实现</p>
<p><img src="https://img-blog.csdnimg.cn/f0ba839ffdaf4592819415a13dc9414e.png"></p>
<h2 id="Sub"><a href="#Sub" class="headerlink" title="Sub"></a>Sub</h2><p><img src="https://img-blog.csdnimg.cn/2dceddf99f2a47beb0e18971311a12e7.png"></p>
<p>分析第四个周期，指令地址为08622800，在程序测试段中，可以看到，本条指令为sub，那么现在开始检验指令sub的实现过程：指令sub的功能是rd←rs - rt。源操作数地址：rs&#x3D;3，rt&#x3D;2；ALU两个引脚值皆为0，程序读取寄存器中的值，此时存入结果为5，程序运行正常，功能完好</p>
<p><img src="https://img-blog.csdnimg.cn/0827be61b81448d58c7a5c3e5bece093.png"></p>
<h2 id="and"><a href="#and" class="headerlink" title="and"></a>and</h2><p><img src="https://img-blog.csdnimg.cn/fa60197cf2d64ee385dcdc3228d26281.png"></p>
<p>分析第五个周期，指令地址为44a22000，在程序测试段中，可以看到，本条指令为and，那么现在开始检验指令and的实现过程：指令and的功能是rd←rs &amp; rt；（逻辑与运算）。源操作数寄存器地址：rs&#x3D;5，rt&#x3D;2；ALU引脚值为0，读取ALU计算结果为00000000，分别对源操作数5和2转为2进制为：0101、0010按位与后值为0，结果吻合，该单元工作正常，功能实现</p>
<p><img src="https://img-blog.csdnimg.cn/9a9f74d997c84f62a6252f24d99ed877.png"></p>
<h2 id="or"><a href="#or" class="headerlink" title="or"></a>or</h2><p><img src="https://img-blog.csdnimg.cn/3e779ca5a7724e2f972cd1865a96ce99.png"></p>
<p>分析第六个周期，指令地址为48824000，在程序测试段中，可以看到，本条指令为or，那么现在开始检验指令or的实现过程：指令or的功能是rd←rs | rt；（逻辑或运算）。源操作数寄存器地址：rs&#x3D;04，rt&#x3D;02；ALU双引脚值为0，读取寄存器堆中的值，可以看到存放真值为0和2（取最后结果）。读取值为2</p>
<p>分别对源操作数4和2转为2进制并按位或后值为2，与程序运行结果吻合，该单元工作正常，功能实现</p>
<p><img src="https://img-blog.csdnimg.cn/d921a5397b664867917ec2b46e93d1c3.png"></p>
<h2 id="sll"><a href="#sll" class="headerlink" title="sll"></a>sll</h2><p><img src="https://img-blog.csdnimg.cn/780db27a9c4f49049c31e0d9fc7499a0.png"></p>
<p>分析第七个周期，指令地址为60084040，在程序测试段中，可以看到，本条指令为sll，那么现在开始检验指令sll的实现过程：指令sll的功能是rd&lt;－rt&lt;&lt;(zero-extend)sa，左移sa位 ，(zero-extend)sa。源操作数寄存器地址：rt&#x3D;08 ，寻求真值，移位数sa&#x3D;1,程序运行后 。在二进制数据计算中，左移一位就相当于乘以2，故程序结果正确，该单元工作正常</p>
<h2 id="bne"><a href="#bne" class="headerlink" title="bne"></a>bne</h2><p><img src="https://img-blog.csdnimg.cn/69aea7d3a2e243898e9b41d19da3ae49.png"></p>
<p>分析第八个周期，指令地址为c501fffe，在程序测试段中，可以看到，本条指令为bne，那么现在开始检验指令bne的实现过程：指令bne的功能是：if(rs!&#x3D;rt) pc←pc + 4 + (sign-extend)immediate &lt;&lt;2  else pc ←pc + 4【与beq不同：不等时转移，相等时顺序执行。】在寄存器堆中找到源操作数地址，寻得真值，找寻计算结果，结果吻合，单元工作正常</p>
<p><img src="https://img-blog.csdnimg.cn/2418243ddb294a308fe208c2c8cd98fa.png"></p>
<h2 id="slti"><a href="#slti" class="headerlink" title="slti"></a>slti</h2><p><img src="https://img-blog.csdnimg.cn/17de34a564c045e3aa7244f26222d2f4.png"></p>
<p>分析第九个周期，指令地址为6c460008，在程序测试段中，可以看到，本条指令为slti，那么现在开始检验指令slti的实现过程：指令slti的功能是：if (rs &lt;(sign-extend)immediate)  rt &#x3D;1 else  rt&#x3D;0，源操作数地址找到后，对立即数进行sign-extend，然后判断是否满足if（）中的给定条件，程序结果完整无误，本单元工作正常</p>
<p><img src="https://img-blog.csdnimg.cn/b16162cd12044c59bb598391f0ac2c51.png"></p>
<h2 id="beq"><a href="#beq" class="headerlink" title="beq"></a>beq</h2><p><img src="https://img-blog.csdnimg.cn/01132021d3744f38a52b30bcd0b45bbc.png"></p>
<p>第14个周期中，指令地址为c0e1fffe，在程序测试段中，可以看到，本条指令为beq，那么现在开始检验指令beq的实现过程：指令beq的功能是：if(rs&#x3D;rt) pc←pc + 4 + (sign-extend)immediate &lt;&lt;2  else pc ←pc + 4,immediate是从PC+4地址开始和转移到的指令之间指令条数</p>
<p>immediate符号扩展之后左移2位再相加。左移2位是由于跳转到的指令地址肯定是4的倍数（每条指令占4个字节），最低两位是“00”，因此将immediate放进指令码中的时候，已经右移两位，这与上文 “指令之间指令条数”相契合。运算结果符合事实，单元工作正常</p>
<p><img src="https://img-blog.csdnimg.cn/2b9d5421c8a34e0bb9876455e7ff2f08.png"></p>
<h2 id="sw"><a href="#sw" class="headerlink" title="sw"></a>sw</h2><p><img src="https://img-blog.csdnimg.cn/945306ae6f2f42199b7928a6ecfe5083.png"></p>
<p>第19个周期中，指令地址为98220004，在程序测试段中，可以看到，本条指令为sw，那么现在开始检验指令sw的实现过程：指令sw的功能是：memory[rs+ (sign-extend)immediate]←rt；immediate符号扩展再相加</p>
<p>将rt寄存器的内容保存到rs寄存器内容和立即数符号扩展后的数相加作为地址的内存单元中。同样的依次找到源操作数在寄存器中的值，进入ALU运算后，检验结果，过程图展示如下，结果无误，单元功能实现完好</p>
<p><img src="https://img-blog.csdnimg.cn/f13fca4fb6ec4362811231cb1ebd2f3c.png"></p>
<h2 id="lw"><a href="#lw" class="headerlink" title="lw"></a>lw</h2><p><img src="https://img-blog.csdnimg.cn/0efbc72459be4029a494a7d8c297c25a.png"></p>
<p>第20个周期中，指令地址为9c290004，在程序测试段中，可以看到，本条指令为lw，那么现在开始检验指令lw的实现过程：指令lw的功能是：rt ← memory[rs + (sign-extend)immediate]；immediate符号扩展再相加</p>
<p>读取rs寄存器内容和立即数符号扩展后的数相加作为地址的内存单元中的数，然后保存到rt寄存器中。同样的依次找到源操作数在寄存器中的值，进入ALU运算后，检验结果，过程图展示如下，结果无误，单元功能实现完好</p>
<p><img src="https://img-blog.csdnimg.cn/a11ee093c5d246d493ca8d581087e876.png"></p>
<h2 id="j"><a href="#j" class="headerlink" title="j"></a>j</h2><p><img src="https://img-blog.csdnimg.cn/4cf52e7f6ba047439747bf11fc8bb0b1.png"></p>
<p>第21个周期中，指令地址为e0000010，在程序测试段中，可以看到，本条指令为j，那么现在开始检验指令j的实现过程：指令j的功能是：pc &lt;－{(pc+4)[31..28],addr[27..2],2{0}}，无条件跳转</p>
<p>由于MIPS32的指令代码长度占4个字节，所以指令地址二进制数最低2位均为0，将指令地址放进指令代码中时，可省掉！这样，除了最高6位操作码外，还有26位可用于存放地址，事实上，可存放28位地址了，剩下最高4位由pc+4最高4位拼接上。指令验证过程如下，最后结论为：单元工作正常，功能实现完好</p>
<p><img src="https://img-blog.csdnimg.cn/28181332ce9c4e84bba938c04968e332.png"></p>
<h2 id="halt"><a href="#halt" class="headerlink" title="halt"></a>halt</h2><p><img src="https://img-blog.csdnimg.cn/d8e73ac8cbf342c5a331339f77f6ea0c.png"></p>
<p>第22个周期中，指令地址为fc000000，在程序测试段中，可以看到，本条指令为Halt，那么现在开始检验指令Halt的实现过程：指令Halt的功能是：停机；不改变PC的值，PC保持不变。从仿真后的波形图中，可以清晰看到，波形图在本指令后，电平恒定，不再发生变化，所以本指令功能实现，模块单元工作正常</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>深刻了解了一个简单单周期CPU的设计方法，无论是复杂亦或是简单的系统，最好的办法就是采用分层和模块化的设计方法。在众多信号状态中，首先从最高层开始梳理逻辑，划分模块，进而到每个模块的内部核心处继续划分，这样就避免了在信号条件变动很多的情况下不能够清晰的理清的问题</p>
<p>硬件设施的不足让人感觉整个课程在“云端”，讲授的内容不能很好的和现有知识的应用契合，虽然第一次接触VerilogHDL硬件描述语言，但是这门语言的思想和我所学的C++语言使用了同样的逻辑架构，采用了自顶向下、分而治之的思想逐步剖析，正所谓“大厦的建立绝非一朝一夕”，采用“分步”的设计思想完成最终单周期CPU的设计与实现</p>
<p>有些许遗憾的是未能在硬件上实现，如果能在开发板上烧写程序，接触到实物，应该能有更为深刻的理解，在模块调用使用端口绑定时，有一个小技巧：勿完全按照顺序赋值；因为这样的方法可以尽量减少程序出错的概率，而对于我们后期检查源文件时也无需完全分辨每一个参数的值，减少工作量</p>
<p>维基百科、谷歌学术是非常不错的平台</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>CPU</tag>
      </tags>
  </entry>
  <entry>
    <title>Vscode修改.exe文件生成位置</title>
    <url>/2021/08/13/vscode-modify-exefile-place/</url>
    <content><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>今天在写C语言练习题时，发现Vscode工作区中出现了这样的情况</p>
<p><img src="https://img-blog.csdnimg.cn/1c0ba776ffff45578d04bfa026e69cc8.png"></p>
<p>程序运行产生的可执行文件和源码混在一起，作为一名强迫症，我怎能容忍它 “如此放肆”，特意查看了一波<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9jcHAvY29uZmlnLW1pbmd3">官方文档<i class="fa fa-external-link-alt"></i></span>后终于找到了解决办法，这是对<code>.exe</code>文件位置重定向后的工作区文件目录</p>
<p><img src="https://img-blog.csdnimg.cn/8c22d60ff7d64a86b78df21b04534180.png"></p>
<p>怎么样？看起来是不是舒服多了？emmm……强迫症表示非常友好哦，下面就带大家看看我是如何解决的</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="文件建立"><a href="#文件建立" class="headerlink" title="文件建立"></a>文件建立</h2><p>现在关闭Vscode，在桌面新建一个文件夹，命名随意，然后直接拖拽到Vscode图标处打开，这个文件就是我们的工作区</p>
<image src="https://img-blog.csdnimg.cn/4567e72239e741108ee40a57221d88d5.gif" width="70%">

<p>打开之后我们新建文件夹 <strong>Demo</strong> ，其下新建文件 <strong>Hello.c</strong> ，输入代码以便我们后续测试</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello world&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>点击左侧的调试按钮-&gt;创建<code>launch.json</code>文件</p>
<p><img src="https://img-blog.csdnimg.cn/1c551eaf4b4d4c67a290d7296c9b7f54.png#pic_center"></p>
<p>选择<code>C++(GDB/LLDB)</code></p>
<p><img src="https://img-blog.csdnimg.cn/df5e54f772654496a00e2cab6d1a359e.png#pic_center"></p>
<p>选择<code>gcc.exe-生成和调试活动文件</code></p>
<p><img src="https://img-blog.csdnimg.cn/5e6884df435447308e2b78a9ef4b3180.png#pic_center"></p>
<p>返回工作区文件目录，发现生成了.vscode文件夹，包含<code>launch.json</code>和<code>tasks.json</code>文件。简单了解下：<code>tasks</code>用于编译，<code>launch</code>用于执行编译后的文件，详情<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9jcHAvY29uZmlnLXdzbCNfY3JlYXRlLWEtYnVpbGQtdGFzaw==">点击这里<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><p>为了方便大家修改，直接给出文件，修改位置有特殊标注。可以使用 <a class="btn" href="#">Ctrl</a> +<a class="btn" href="#">F</a> 组合键搜索，简单粗暴的可以直接删除生成的文件内容，复制下面对应文件操作</p>
<h4 id="tasks-json"><a href="#tasks-json" class="headerlink" title="tasks.json"></a>tasks.json</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;tasks&quot;</span>: [</span><br><span class="line">        &#123;//构建配置项</span><br><span class="line">            <span class="string">&quot;type&quot;</span>:<span class="string">&quot;shell&quot;</span>,//任务类型,<span class="type">Vscode</span>将预定义变量转义解析后直接传给<span class="type">command</span>;<span class="type">shell</span>-&gt;先打开<span class="type">shell</span>再输入命令,因此<span class="type">args</span>会经过<span class="type">shell</span>再次解析</span><br><span class="line">            <span class="string">&quot;label&quot;</span>: <span class="string">&quot;C/C++: gcc.exe 生成活动文件&quot;</span>,//任务名称</span><br><span class="line">            <span class="string">&quot;command&quot;</span>: <span class="string">&quot;C:\\Program Files\\mingw64\\bin\\gcc.exe&quot;</span>,//本地编译器路径</span><br><span class="line">            <span class="string">&quot;args&quot;</span>: [ //包含传给<span class="type">gcc</span>命令的参数,用于实现特定功能</span><br><span class="line">                <span class="string">&quot;-g&quot;</span>, //生成和调试有关的信息</span><br><span class="line">                <span class="string">&quot;<span class="variable">$</span>&#123;file&#125;&quot;</span>, //指定编译文件为当前文件</span><br><span class="line">                <span class="string">&quot;-o&quot;</span>,//指定输出文件的路径和名称</span><br><span class="line">                <span class="string">&quot;<span class="variable">$</span>&#123;workspaceFolder&#125;\\build\\<span class="variable">$</span>&#123;fileBasenameNoExtension&#125;.exe&quot;</span>//修改<span class="type">.exe</span>文件生成位置</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;options&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;C:\\Program Files\\mingw64\\bin&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;problemMatcher&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;<span class="variable">$gcc</span>&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;group&quot;</span>: &#123;//包含很多<span class="type">task</span>,归为<span class="type">group</span></span><br><span class="line">                <span class="string">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,//表名该组任务类型是构建</span><br><span class="line">                <span class="string">&quot;isDefault&quot;</span>: <span class="type">true</span>//表明此任务为此组任务中的默认任务</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;detail&quot;</span>: <span class="string">&quot;调试器生成的任务。&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（1）将命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;<span class="variable">$</span>&#123;fileDirname&#125;\\<span class="variable">$</span>&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;<span class="variable">$</span>&#123;workspaceFolder&#125;\\build\\<span class="variable">$</span>&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br></pre></td></tr></table></figure>
<p>（2）将命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$</span>&#123;fileDirname&#125;&quot;</span></span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;C:\\Program Files\\mingw64\\bin&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;configurations&quot;</span>: [</span><br><span class="line">        &#123;//包含<span class="type">Debug</span>配置</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;gcc.exe - 生成和调试活动文件&quot;</span>,//配置名称</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>, //配置类型,对应<span class="type">cpptools</span>提供的调试功能</span><br><span class="line">            <span class="string">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>, //请求配置类型,可以是启动/附加类型[<span class="type">launch</span>/<span class="type">attach</span>]</span><br><span class="line">            <span class="string">&quot;program&quot;</span>: <span class="string">&quot;<span class="variable">$</span>&#123;workspaceFolder&#125;\\build\\<span class="variable">$</span>&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,//待调试程序本地路径</span><br><span class="line">            <span class="string">&quot;args&quot;</span>: [], //程序调试时传递给程序的命令行参数,设为空值</span><br><span class="line">            <span class="string">&quot;stopAtEntry&quot;</span>: <span class="type">false</span>,//改为<span class="type">true</span>时程序暂停在程序入口位置,即<span class="type">main</span>处打上断点</span><br><span class="line">            <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$</span>&#123;fileDirname&#125;&quot;</span>, //调试程序时的工作目录,这里表示源码目录</span><br><span class="line">            <span class="string">&quot;environment&quot;</span>: [], //环境变量,设为空值</span><br><span class="line">            <span class="string">&quot;externalConsole&quot;</span>: <span class="type">false</span>, //<span class="type">true</span>:<span class="type">cmd</span>窗口; <span class="type">false</span>:<span class="type">Vscode</span>的内置终端输出</span><br><span class="line">            <span class="string">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>, //指定连接的调试器,<span class="type">minGW64</span>中调试程序-&gt;<span class="type">gdb</span></span><br><span class="line">            <span class="string">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;C:\\Program Files\\mingw64\\bin\\gdb.exe&quot;</span>, //指定调试器所在路径,安装位置不同注意需要修改,间隔为\\</span><br><span class="line">            <span class="string">&quot;setupCommands&quot;</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;description&quot;</span>: <span class="string">&quot;为 gdb 启用整齐打印&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;ignoreFailures&quot;</span>: <span class="type">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;C/C++: gcc.exe 生成活动文件&quot;</span> //调试开始前执行需要执行的任务,调试前要编译构建 名称要和<span class="type">tasks.json</span>的<span class="type">label</span>保持一致</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>将命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;program&quot;</span>: <span class="string">&quot;<span class="variable">$</span>&#123;fileDirname&#125;\\<span class="variable">$</span>&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,</span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;program&quot;</span>: <span class="string">&quot;<span class="variable">$</span>&#123;workspaceFolder&#125;\\build\\<span class="variable">$</span>&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,</span><br></pre></td></tr></table></figure>
<h4 id="Code-Runner"><a href="#Code-Runner" class="headerlink" title="Code Runner"></a>Code Runner</h4><p>点击<code>Edit in settings.json</code>打开配置项，由于Code Runner中配置文件较多，我们只修改相关部分即可</p>
<p><img src="https://img-blog.csdnimg.cn/892f538dac8a404eb9923e030c12e64f.png#pic_center"></p>
<p>（1）将命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;c&quot;</span>: <span class="string">&quot;cd <span class="variable">$dir</span> &amp;&amp; gcc <span class="variable">$fileName</span> -o <span class="variable">$fileNameWithoutExt</span> &amp;&amp; <span class="variable">$dir</span><span class="variable">$fileNameWithoutExt</span>&quot;</span>, </span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;c&quot;</span>: <span class="string">&quot;cd <span class="variable">$dir</span> &amp;&amp; gcc <span class="variable">$fileName</span> -o <span class="variable">$workspaceRoot</span>/build/<span class="variable">$fileNameWithoutExt</span> &amp;&amp; <span class="variable">$workspaceRoot</span>/build/<span class="variable">$fileNameWithoutExt</span>&quot;</span>,</span><br></pre></td></tr></table></figure>
<p>（2）将命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;cpp&quot;</span>: <span class="string">&quot;cd <span class="variable">$dir</span> &amp;&amp; g++ <span class="variable">$fileName</span> -o <span class="variable">$fileNameWithoutExt</span> &amp;&amp; <span class="variable">$dir</span><span class="variable">$fileNameWithoutExt</span>&quot;</span>, </span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;cpp&quot;</span>: <span class="string">&quot;cd <span class="variable">$dir</span> &amp;&amp; g++ <span class="variable">$fileName</span> -o <span class="variable">$workspaceRoot</span>/build/<span class="variable">$fileNameWithoutExt</span> &amp;&amp; <span class="variable">$workspaceRoot</span>/build/<span class="variable">$fileNameWithoutExt</span>&quot;</span>, </span><br></pre></td></tr></table></figure>
<p>最后在工作区新建文件夹<strong>build</strong>，作为<strong>Test</strong>文件子项，确定好文件从属关系</p>
<p><img src="https://img-blog.csdnimg.cn/43fb85e5f92a488bb402192085aa5699.png"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><img src="https://img-blog.csdnimg.cn/9887a5f0e6aa4f178195e73d74abef84.gif#pic_center"></p>
<p><img src="https://img-blog.csdnimg.cn/6c703ec866584978ba2c0f28f8731f89.png#pic_center"></p>
<p>完成，强迫症表示很su服~~</p>
<hr>
<p>如果帮到了您，别忘了三连支持下哦！</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
</search>
